{"version":3,"sources":["webpack:///static/js/vendor.fa9f690ac68ea160a20d.js","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/echarts/lib/component/toolbox/featureManager.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/echarts/lib/component/axisPointer/modelHelper.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/zrender/lib/graphic/helper/text.js","webpack:///./~/echarts/lib/component/dataZoom/helper.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/helper/image.js","webpack:///./~/zrender/lib/svg/core.js","webpack:///./~/zrender/lib/svg/graphic.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./~/vue/dist/vue.esm.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/component/axisPointer/findPointFromSeries.js","webpack:///./~/echarts/lib/component/axisPointer/globalListener.js","webpack:///./~/echarts/lib/component/axisPointer/viewHelper.js","webpack:///./~/echarts/lib/component/dataZoom/DataZoomModel.js","webpack:///./~/echarts/lib/component/dataZoom/DataZoomView.js","webpack:///./~/echarts/lib/component/dataZoom/history.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/scale/helper.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/svg/helper/Definable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/vml/core.js","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/chart/pie.js","webpack:///./~/echarts/lib/chart/pie/PieSeries.js","webpack:///./~/echarts/lib/chart/pie/PieView.js","webpack:///./~/echarts/lib/chart/pie/labelLayout.js","webpack:///./~/echarts/lib/chart/pie/pieLayout.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/axis/cartesianAxisHelper.js","webpack:///./~/echarts/lib/component/axisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerModel.js","webpack:///./~/echarts/lib/component/axisPointer/AxisPointerView.js","webpack:///./~/echarts/lib/component/axisPointer/BaseAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js","webpack:///./~/echarts/lib/component/axisPointer/axisTrigger.js","webpack:///./~/echarts/lib/component/dataZoom/AxisProxy.js","webpack:///./~/echarts/lib/component/dataZoom/SelectZoomModel.js","webpack:///./~/echarts/lib/component/dataZoom/SelectZoomView.js","webpack:///./~/echarts/lib/component/dataZoom/dataZoomAction.js","webpack:///./~/echarts/lib/component/dataZoom/dataZoomProcessor.js","webpack:///./~/echarts/lib/component/dataZoom/typeDefaulter.js","webpack:///./~/echarts/lib/component/dataZoomSelect.js","webpack:///./~/echarts/lib/component/helper/BrushController.js","webpack:///./~/echarts/lib/component/helper/BrushTargetManager.js","webpack:///./~/echarts/lib/component/helper/interactionMutex.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/helper/selectableMixin.js","webpack:///./~/echarts/lib/component/toolbox.js","webpack:///./~/echarts/lib/component/toolbox/ToolboxModel.js","webpack:///./~/echarts/lib/component/toolbox/ToolboxView.js","webpack:///./~/echarts/lib/component/toolbox/feature/DataView.js","webpack:///./~/echarts/lib/component/toolbox/feature/DataZoom.js","webpack:///./~/echarts/lib/component/toolbox/feature/MagicType.js","webpack:///./~/echarts/lib/component/toolbox/feature/Restore.js","webpack:///./~/echarts/lib/component/toolbox/feature/SaveAsImage.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/helper.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataFilter.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///./~/echarts/lib/visual/dataColor.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/process/browser.js","webpack:///./~/setimmediate/setImmediate.js","webpack:///./~/timers-browserify/main.js","webpack:///./~/vue-router/dist/vue-router.esm.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///./~/zrender/index.js","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/arrayDiff2.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/export.js","webpack:///./~/zrender/lib/graphic/helper/fixClipWithShadow.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/shape/Droplet.js","webpack:///./~/zrender/lib/graphic/shape/Ellipse.js","webpack:///./~/zrender/lib/graphic/shape/Heart.js","webpack:///./~/zrender/lib/graphic/shape/Isogon.js","webpack:///./~/zrender/lib/graphic/shape/Rose.js","webpack:///./~/zrender/lib/graphic/shape/Star.js","webpack:///./~/zrender/lib/graphic/shape/Trochoid.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/svg/Painter.js","webpack:///./~/zrender/lib/svg/helper/ClippathManager.js","webpack:///./~/zrender/lib/svg/helper/GradientManager.js","webpack:///./~/zrender/lib/svg/svg.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/vml/Painter.js","webpack:///./~/zrender/lib/vml/graphic.js","webpack:///./~/zrender/lib/vml/vml.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","$override","name","fn","methods","clone","source","result","typeStr","objToString","call","i","len","length","TYPED_ARRAY","Ctor","constructor","from","BUILTIN_OBJECT","isPrimitive","isDom","key","hasOwnProperty","merge","target","overwrite","isObject","targetProp","sourceProp","isArray","isBuiltInObject","mergeAll","targetAndSources","extend","defaults","overlay","getContext","_ctx","createCanvas","indexOf","array","value","inherits","clazz","baseClazz","F","clazzPrototype","prototype","prop","superClass","mixin","isArrayLike","data","each","obj","cb","context","forEach","nativeForEach","map","nativeMap","push","reduce","memo","nativeReduce","filter","nativeFilter","find","bind","func","args","nativeSlice","arguments","apply","concat","curry","this","isFunction","isString","type","nodeType","ownerDocument","eqNaN","retrieve","values","retrieve2","value0","value1","retrieve3","value2","slice","Function","normalizeCssArray","val","assert","condition","message","Error","setAsPrimitive","primitiveKey","HashMap","set","createHashMap","noop","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","Object","toString","arrayProto","Array","document","createElement","get","prefixedKey","removeKey","__webpack_require__","Path","opts","Displayable","path","zrUtil","PathProxy","pathContain","Pattern","getCanvasPattern","abs","Math","pathProxyForDraw","__dirtyPath","strokeContainThreshold","brush","ctx","prevEl","style","hasStroke","hasFill","fill","stroke","hasFillGradient","colorStops","hasStrokeGradient","hasFillPattern","image","hasStrokePattern","setTransform","__dirty","rect","getBoundingRect","_fillGradient","getGradient","_strokeGradient","fillStyle","strokeStyle","lineDash","lineDashOffset","ctxLineDash","setLineDash","scale","getGlobalScale","setScale","beginPath","setLineDashOffset","buildPath","shape","rebuildPath","restoreTransform","text","drawRectText","shapeCfg","inBundle","createPathProxy","_rect","needsUpdateRect","rectWithStroke","_rectWithStroke","copy","w","lineWidth","lineScale","strokeNoScale","getLineScale","max","width","height","x","y","contain","localPos","transformCoordToLocal","pathData","containStroke","dirty","dirtyPath","__zr","refresh","__clipTarget","animateShape","loop","animate","attrKV","setShape","m","transform","sqrt","Sub","extendFrom","defaultShape","thisShape","init","_default","global","createRegisterEventWithLowercaseName","method","eventName","handler","toLowerCase","Eventful","MessageCenter","ECharts","dom","theme","prioritySortFunc","a","b","prio","themeStorage","id","group","_dom","zr","_zr","zrender","renderer","devicePixelRatio","_throttledZrFlush","throttle","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","CoordinateSystemManager","_api","ExtensionAPI","_messageCenter","_initEvents","resize","_pendingActions","timsort","visualFuncs","dataProcessorFuncs","animation","on","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","updateDirectly","ecIns","payload","mainType","subType","callView","view","__alive","__model","query","eachComponent","model","index","__viewId","doDispatchAction","silent","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","update","split","updateMethod","pop","parseClassType","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighDown","batchItem","action","event","main","sub","OPTION_UPDATED","updateMethods","prepareAndUpdate","trigger","flushPendingActions","pendingActions","shift","triggerUpdatedEvent","invokeUpdateMethod","api","component","componentModel","updateZ","eachSeries","seriesModel","idx","chart","updateProgressiveAndBlend","updateHoverLayerStatus","postUpdateFuncs","prepareView","isComponent","viewList","viewMap","componentType","viewId","classType","Clazz","ComponentView","getClass","ChartView","add","__id","remove","dispose","splice","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","excludesLayout","clearColorPalette","doRender","componentView","render","chartView","storage","elCount","traverse","el","isGroup","env","node","useHoverLayer","ignore","frameDrawNum","needProgressive","progressive","floor","stopAnimation","blendMode","canvasSupported","setStyle","z","zlevel","enableConnect","updateConnectedChartsStatus","charts","status","STATUS_KEY","eventActionMap","actionType","eventType","connectedGroups","makeActionFromEvent","otherCharts","instances","otherChart","dispatchAction","window","GlobalModel","OptionManager","ComponentModel","SeriesModel","graphic","colorTool","ACTION_REG","off","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","log","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","pixelRatio","backgroundColor","list","getDisplayList","getDataURL","excludeComponents","excludesComponentViews","self","url","toDataURL","getConnectedDataURL","groupId","mathMin","min","mathMax","left","Infinity","top","right","bottom","canvasList","canvas","boundingRect","getBoundingClientRect","targetCanvas","img","Image","refreshImmediately","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","getViewOfComponentModel","getViewOfSeriesModel","coordSysMgr","restoreData","create","isSingleCanvas","configLayer","clearColor","colorArr","parse","stringify","background","updateView","clearAllVisual","updateVisual","updateLayout","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","opt","browser","weChat","MOUSE_EVENT_NAMES","eveName","e","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","clear","idBase","Date","groupIdBase","echarts","version","dependencies","replace","nodeName","toUpperCase","clientWidth","clientHeight","setAttribute","connect","disConnect","disconnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","isNaN","registerPostUpdate","postUpdateFunc","registerAction","test","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","Axis","number","format","matrix","vector","color","util","helper","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","navigator","os","svgSupported","ua","firefox","match","ie","edge","SVGRect","touchEventsSupported","pointerEventsSupported","userAgent","out","ArrayCtor","v","v1","v2","scaleAndAdd","lenSquare","mul","div","dot","s","normalize","d","distance","distanceSquare","negate","lerp","t","applyTransform","Float32Array","lengthSquare","dist","distSquare","has","formatUtil","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","parseDate","NaN","createDataFormatModel","dataFormatMixin","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","seriesId","seriesName","$vars","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTpl","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","dataIndices","otherDataIndices","j","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","makeGetter","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","_trim","str","quantityExponent","LN10","linearMap","domain","range","clamp","subDomain","subRange","parsePercent","percent","all","parseFloat","round","precision","returnStr","toFixed","asc","arr","sort","getPrecision","count","getPrecisionSafe","eIndex","dotIndex","getPixelPrecision","dataExtent","pixelExtent","dataQuantity","sizeQuantity","isFinite","MAX_SAFE_INTEGER","remRadian","radian","pi2","PI","isRadianAroundZero","TIME_REG","getTimezoneOffset","exec","timezoneOffset","timeOffset","quantity","pow","nice","nf","exponent","exp10","f","reformIntervals","littleThan","lg","interval","close","curr","currClose","isNumeric","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","hoverStyle","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","addHover","z2","doSingleLeaveHover","normalStl","removeHover","doEnterHover","child","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","zrByTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","getShallow","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","pathTool","Group","Text","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","BoundingRect","extendShape","extendPath","extendFromString","makePath","layout","createFromString","aspect","cx","cy","resizePath","mergePath","pathRect","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","x1","x2","y1","y2","subPixelOptimizeRect","originX","originY","originWidth","originHeight","position","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelOffset","labelColor","textStyleModel","textDistance","textFont","getFont","textPosition","textOffset","textFill","getTextColor","updateProps","initProps","getTransform","ancestor","mat","identity","getLocalTransform","parent","vertex","invert","transformDirection","direction","hBase","vBase","groupTransition","g1","g2","getAnimatableProps","rotation","elMap1","g","elMap","anid","oldEl","newProp","vec2","v2ApplyTransform","union","other","lt","rb","lb","rt","maxX","maxY","sx","sy","translate","intersect","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","numberUtil","textContain","addCommas","toCamelCase","upperCaseFirst","group1","charAt","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","tpl","paramsList","encode","seriesLen","alias","k","formatTplSimple","s2d","formatTime","isUTC","date","utc","M","h","capitalFirst","substr","truncateText","parentModel","doGet","pathArr","getParent","getParentMethod","clazzUtil","mergeOption","ignoreParent","parsePath","thisParentModel","isEmpty","setReadOnly","properties","customizeGetParent","enableClassExtend","font","DEFAULT_FONT","textWidthCache","textLines","l","measureText","textWidthCacheCounter","TEXT_CACHE_MAX","textAlign","textVerticalAlign","textPadding","rich","truncate","getRichTextRect","getPlainTextRect","contentBlock","parsePlainText","outerWidth","outerHeight","adjustTextX","adjustTextY","lineHeight","parseRichText","adjustTextPositionOnRect","halfHeight","containerWidth","ellipsis","options","prepareTruncateOptions","truncateSingleLine","join","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","getLineHeight","padding","lines","truncOuterHeight","truncOuterWidth","lastIndex","STYLE_REG","matchedIndex","pushTokens","substring","contentHeight","pendingList","stlPadding","truncateWidth","truncateHeight","line","tokens","token","tokenStyle","styleName","tokenHeight","textHeight","textLineHeight","textWidth","tokenWidth","tokenWidthNotSpecified","percentWidth","textBackgroundColor","bgImg","imageHelper","findExistImage","isImageReady","paddingW","remianTruncWidth","parseInt","block","isEmptyStr","strs","isLineHolder","tokensLen","makeFont","fontSize","fontFamily","fontStyle","fontWeight","_util","checkClassType","superCall","superApply","IS_CONTAINER","host","hasOwn","ret","RootClass","mandatoryMethods","$constructor","proto","ExtendedClass","enableClassManagement","entity","makeContainer","container","registerClass","componentMainType","throwWhenNotFound","getClassesByMainType","hasClass","getAllClassMainTypes","types","hasSubTypes","registerWhenExtend","originalExtend","m1","m2","out0","out1","out2","out3","out4","out5","rotate","rad","aa","ac","atx","ab","ad","aty","st","sin","ct","cos","vx","vy","det","features","ctor","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","default","staticRenderFns","_scopeId","computed","keys","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","lerpNumber","p","setRgba","r","copyRgba","putToCache","colorStr","rgbaArr","lastRemovedArr","colorCache","put","cached","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","R","G","B","vMin","vMax","delta","L","deltaR","deltaG","deltaB","level","toHex","fastLerp","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","fullOutput","modifyHSL","modifyAlpha","arrColor","LRU","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fastMapToColor","mapToColor","curve","bbox","_config","CMD","C","Q","A","Z","min2","max2","mathCos","mathSin","mathSqrt","mathAbs","hasTypedArray","notSaveData","_saveData","_xi","_yi","_x0","_y0","_ux","_uy","_len","_lineDash","_dashOffset","_dashIdx","_dashSum","moveTo","addData","lineTo","exceedUnit","_needsDash","_dashedLineTo","bezierCurveTo","x3","y3","_dashedBezierTo","quadraticCurveTo","_dashedQuadraticTo","arc","startAngle","endAngle","anticlockwise","arcTo","radius","closePath","x0","y0","toStatic","lineDashSum","offset","setData","appendPath","appendSize","appendPathData","cmd","_expandData","_prevCmd","newData","dash","dashSum","dx","dy","nDash","cubicAt","bezierLen","tmpLen","Number","MAX_VALUE","xi","yi","fromLine","fromCubic","fromQuadratic","rx","ry","fromArc","ux","uy","theta","dTheta","psi","fs","scaleX","scaleY","isEllipse","isAroundZero","EPSILON","isNotAroundZero","p0","p1","p2","p3","onet","cubicDerivativeAt","cubicRootAt","roots","c","n","t1","disc","K","t2","discSqrt","Y1","Y2","mathPow","ONE_THIRD","T","acos","ASqrt","tmp","THREE_SQRT","t3","cubicExtrema","extrema","cubicSubdivide","p01","p12","p23","p012","p123","p0123","cubicProjectPoint","prev","next","d1","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","quadraticAt","quadraticDerivativeAt","quadraticRootAt","quadraticExtremum","divider","quadraticSubdivide","quadraticProjectPoint","_vector","v2Create","clientToLocal","calculate","defaultGetZrXY","layerX","offsetX","zrX","zrY","layerY","offsetY","box","clientX","clientY","normalizeEvent","touch","targetTouches","changedTouches","zrDelta","wheelDelta","detail","button","which","undefined","MOUSE_EVENT_REG","addEventListener","isDomLevel2","attachEvent","removeEventListener","detachEvent","notLeftMouse","Dispatcher","stop","preventDefault","stopPropagation","cancelBubble","returnValue","ZImage","src","_image","createOrUpdateImage","onload","sWidth","sHeight","drawImage","textHelper","normalizeTextStyle","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","needDrawText","renderText","getStroke","textStroke","textStrokeWidth","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","getDependencies","deps","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","getReferringComponents","enableSubTypeDefaulter","enableTopologicalTravel","eval","Element","_children","__storage","children","childAt","childOfName","childCount","_doAdd","addBefore","nextSibling","addToStorage","addChildrenToStorage","delFromStorage","delChildrenFromStorage","removeAll","eachChild","includeChildren","tmpRect","tmpMat","invisible","childRect","debugMode","collectAxesInfo","globalTooltipModel","getComponent","globalAxisPointerModel","linksOption","linkGroups","saveTooltipAxisInfo","fromTooltip","triggerTooltip","axis","axisPointerModel","axisPointerShow","isHandleTrigger","makeAxisPointerModel","baseTooltipModel","snap","makeKey","involveSeries","axisInfo","axesInfo","useHandle","seriesModels","axesInfoInCoordSys","seriesInvolved","groupIndex","getLinkGroupIndex","linkGroup","mapper","axisPointerEnabled","coordSysKey","coordSysAxesInfo","coordSysMap","coordSysModel","getAxes","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","tooltipAxisPointerModel","volatileOption","field","labelOption","label","show","crossStyle","lineStyle","collectSeriesInfo","seriesTooltipTrigger","getAxis","dim","seriesDataCount","axisModel","linkOption","checkPropInLink","linkPropValue","axisPropValue","collect","fixValue","getAxisInfo","extent","getExtent","reverse","isBlank","getAxisPointerModel","OrdinalScale","IntervalScale","Scale","axisHelper","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","getMin","getMax","fixMin","fixMax","originalExtent","setBlank","getNeedCrossZero","niceScaleExtent","splitNumber","base","setExtent","niceExtent","minInterval","getInterval","intervalScale","origin","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","labels","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","step","tickCoord","getFormattedLabels","labelFormatter","getTicksLabels","ticks","getTicks","tick","getAxisRawValue","getLabel","setting","_setting","_extent","_interval","scaleProto","getSetting","unionExtent","unionExtentFromData","getDataExtent","start","end","thisExtent","_isBlank","boxLayout","orient","gap","maxWidth","maxHeight","currentLineMaxSize","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","HV_NAMES","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","needLocalTransform","elPos","sizeCalculable","hvIdx","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","ignoreSize","hResult","vResult","copyLayoutParams","Style","__clipPaths","RectText","draggable","dragging","culling","cursor","rectHover","beforeBrush","afterBrush","rectContain","coord","animateStyle","useStyle","Gradient","addColorStop","normalizeStyle","VALID_TEXT_ALIGN","textBaseline","VALID_TEXT_VERTICAL_ALIGN","hostEl","renderRichText","renderPlainText","setCtx","__textCotentBlock","boxPos","getBoxPosition","baseX","baseY","applyTextRotation","boxY","textX","textY","needDrawBg","needDrawBackground","boxX","drawBackground","getTextXForPadding","textShadowBlur","textShadowColor","textShadowOffsetX","textShadowOffsetY","getFill","strokeText","fillText","drawRichText","xLeft","lineTop","xRight","tokenCount","usedWidth","lineXLeft","lineXRight","placeToken","textRotation","textOrigin","textBorderWidth","textBorderColor","isPlainBg","textBoxShadowBlur","textBoxShadowColor","textBoxShadowOffsetX","textBoxShadowOffsetY","textBorderRadius","roundRectHelper","onBgImageLoaded","blockHeiht","res","maxValue","lastIndexOf","center","middle","AXIS_DIMS","COORDS","isCoordSupported","coordType","createNameEach","attrs","capitalNames","capitalAttrs","callback","nameObj","capital","eachAxisDim","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","isNodeAbsorded","nodes","isLinked","hasLink","edgeType","edgeId","records","absorb","sourceNode","processSingleNode","existsLink","defaultKeyGetter","DataDiffer","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_update","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","unshift","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","hostModel","transferProperties","_storage","originalStorage","dimStore","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","time","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","stackedValue","getValues","dimData","dimExtent","getSum","sum","rawIndex","mid","indexOfNearest","maxDistance","nearestIndices","minDist","minDiff","diff","rawIdx","getId","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","completeDimensions","dimCount","retrieveValue","defaultNames","extraPrefix","guessOrdinal","excludes","includes","roundNumber","_intervalPrecision","niceTicks","_niceExtent","intervalScaleGetTicks","intervalScaleNiceTicks","intervalPrecision","niceTickExtent","expandSize","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","remaining","ts","minRun","force","repeat","createPattern","newImageOrSrc","cachedImgObj","globalImageCache","cbPayload","__zrImageSrc","pendingWrap","pending","imageOnLoad","__cachedImgObj","createElementNS","svgURI","round4","mathRound","pathHasFill","isText","NONE","pathHasStroke","svgEl","arrayJoin","attrXLink","setAttributeNS","bindStyle","opacity","lineCap","lineJoin","miterLimit","pathDataToString","dataLength","cmdStr","nData","clockwise","dThetaPositive","isCircle","PI2","large","degree","getVerticalAlignForSvg","verticalAlign","_core","svgPath","__svgEl","pathStr","svgTextDrawRectText","svgImage","HTMLImageElement","dw","dh","__imageSrc","svgText","textRect","textSvgEl","__textSvgEl","transformText","pos","transformCoordToGlobal","align","newPos","nTextLines","textAnchor","__text","__textFont","tspanList","__tspanList","tspan","innerHTML","appendChild","createTextNode","removeChild","ZRender","guid","getInstance","registerPainter","painterCtors","delInstance","Handler","Storage","Painter","Animation","HandlerProxy","useVML","rendererType","vml","handerProxy","getViewportRoot","root","stage","_needsRefresh","oldDelFromStorage","oldAddToStorage","removeSelfFromZr","addSelfToZr","addRoot","delRoot","zLevel","config","_needsRefreshHover","refreshHoverImmediately","refreshHover","clearHover","clearAnimation","pathToImage","setCursorStyle","cursorStyle","findHover","eventHandler","__webpack_exports__","setImmediate","isUndef","isDef","isTrue","isFalse","isPlainObject","_toString","isRegExp","isValidArrayIndex","JSON","toNumber","expectsLowerCase","cache","polyfillBind","boundFn","_length","nativeBind","toArray","to","_from","toObject","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","every","keysA","keysB","looseIndexOf","once","called","isReserved","def","enumerable","defineProperty","writable","configurable","bailRE","segments","isNative","pushTarget","_target","Dep","targetStack","popTarget","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","elm","componentOptions","asyncFactory","ns","isStatic","isComment","fnContext","fnOptions","fnScopeId","isCloned","toggleObserving","shouldObserve","protoAugment","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","isServerRendering","isExtensible","_isVue","vmCount","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","dependArray","newVal","notify","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","camelize","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","mergeOptions","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","booleanIndex","getTypeIndex","Boolean","hyphenate","stringIndex","getPropDefaultValue","prevShouldObserve","$options","_props","getType","isSameType","expectedTypes","handleError","err","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","errorHandler","logError","inBrowser","inWeex","error","flushCallbacks","copies","callbacks","withMacroTask","_withTask","useMacroTask","nextTick","_resolve","macroTimerFunc","microTimerFunc","Promise","resolve","_traverse","seenObjects","seen","isA","isFrozen","depId","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","old","passive","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","extractPropsFromVNodeData","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","__esModule","hasSymbol","Symbol","toStringTag","createAsyncPlaceholder","factory","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","then","delay","setTimeout","timeout","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","callHook","updateComponent","_render","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","initMethods","_data","initComputed","watch","nativeWatch","initWatch","propsOptions","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","shouldCache","createComputedGetter","evaluate","createWatcher","expOrFn","$watch","initProvide","provide","_provided","initInjections","resolveInject","Reflect","ownKeys","provideKey","provideDefault","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_l","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","createComponent","_base","cid","resolveConstructorOptions","transformModel","functional","nativeOn","installComponentHooks","createComponentInstanceForVnode","parentElm","refElm","_isComponent","_parentElm","_refElm","inlineTemplate","hooksToMerge","componentVNodeHooks","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","registerDeepBindings","class","initRender","parentData","initInternalComponent","vnodeComponentOptions","_componentTag","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue","_init","initUse","use","plugin","installedPlugins","_installedPlugins","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","namespace","namespaceMap","createComment","insertBefore","newNode","referenceNode","setTextContent","textContent","setStyleScope","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE","isEdge","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","baseSetAttr","isBooleanAttr","isFalsyAttrValue","isIE9","__ieph","blocker","stopImmediatePropagation","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","_","addProp","addAttr","addRawAttr","attrsMap","attrsList","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","genComponentModel","valueExpression","assignment","genAssignmentCode","parseModel","index$1","expressionPos","expressionEndPos","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","CHECKBOX_RADIO_TOKEN","change","createOnceHandler","target$1","onceHandler","remove$2","add$1","once$$1","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","removeClass","tar","resolveTransition","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","actuallySetSelected","isMultiple","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","applyTranslation","oldPos","moved","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokenValue","rawTokens","@binding","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","html","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","shouldDecodeNewlinesForHref","rest","createASTElement","makeAttrsMap","template","closeElement","element","pre","inVPre","platformIsPreTag","inPre","postTransforms","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","currentParent","preserveWhitespace","comments","guardIESVGBug","isForbiddenTag","forbidden","processPre","processRawAttrs","processed","processFor","processIf","processOnce","processElement","if","elseif","else","addIfCondition","processIfConditions","slotScope","slotTarget","lastNode","isTextTag","decodeHTMLCached","processKey","processRef","processSlot","processComponent","processAttrs","checkInFor","parseFor","inMatch","forAliasRE","for","stripParensRE","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","cloneASTElement","branch1","branch2","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","i$1","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genGuard","keyModifier","genKeyFilter","genFilterCode","keyVal","keyCode","keyName","keyNames","wrapListeners","bind$1","wrapData","generate","ast","state","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","getShouldDecode","href","getOuterHTML","outerHTML","cloneNode","freeze","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","hasProto","WXEnvironment","platform","weexPlatform","UA","isIOS","_isServer","_Set","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Set","subs","addSub","removeSub","addDep","raw","prototypeAccessors","defineProperties","arrayMethods","observeArray","arrayKeys","getOwnPropertyNames","walk","items","MessageChannel","channel","port","port2","port1","onmessage","postMessage","uid$1","isRenderWatcher","deep","user","active","newDeps","depIds","newDepIds","cleanupDeps","this$1","teardown","keepAlive","mountedNode","prepatch","$mount","insert","destroy","uid$3","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","patternTypes","KeepAlive","include","exclude","created","destroyed","mounted","ref$1","builtInComponents","configDef","delete","ssrContext","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","fullInvoke","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","patchable","i$2","vmodel","directive","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","platformComponents","decoder","regexEscapeRE","open","klass$1","style$1","he","decode","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","isIgnoreNewlineTag","model$2","modules$1","directives$1","baseOptions","esc","tab","space","up","down","prevent","ctrl","alt","meta","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","idToTemplate","mount","documentElement","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","point","getTooltipPosition","dataToPoint","coordDimToDataDim","initGlobalListeners","useHandler","dis","makeDispatchAction","record","dispatchTooltipFinally","pendings","initialized","doEnter","onLeave","actuallyPayload","showLen","showTip","hideLen","hideTip","currTrigger","globalListener","unregister","confineInContainer","viewWidth","viewHeight","AxisBuilder","buildElStyle","axisPointerType","styleModel","getLineStyle","getAreaStyle","buildLabelElOption","elOption","labelPos","getValueLabel","paddings","bgColor","seriesDataIndices","seriesData","idxItem","dataParams","getTransformedPosition","layoutInfo","dataToCoord","labelDirection","labelMargin","buildCartesianSingleLabelElOption","textLayout","innerTextLayout","makeLineShape","xDimIndex","makeRectShape","xy","wh","makeSectorShape","r0","retrieveRaw","updateRangeUse","dataZoomModel","rawOption","rangePropMode","_rangePropMode","AxisProxy","DataZoomModel","xAxisIndex","yAxisIndex","filterMode","startValue","endValue","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","thisOption","realtime","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","eachTargetAxis","dimNames","axisIndex","axisProxy","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxis","singleAxisModel","singleAxisIndex","axisIndices","axisModels","_isSeriesHasAllAxesTypeOf","axisId","seriesAxisIndex","globalOption","animationDurationUpdate","getFirstTargetAxisModel","firstAxisModel","getAxisProxy","getAxisModel","setRawRange","ignoreUpdateRangeUsg","getPercentRange","findRepresentativeAxisProxy","getDataPercentWindow","getValueRange","axisDimName","getDataValueWindow","hostedBy","getRangePropMode","getTargetCoordInfo","save","coordModel","store","coordIndex","coordSysLists","getCoordSysModel","giveStore","ATTR","history","newSnapshot","dataZoomId","percentRange","head","snapshot","classUtil","getColorFromPalette","scope","colorIdx","colorNameMap","colorPalette","fixExtent","lib","ORIGIN_METHOD","RATE","debounce","lastExec","getTime","timer","currCall","lastCall","clearTimeout","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","Chart","elSetState","toggleHighlight","dataIdx","highlight","downplay","chartProto","Component","componentProto","Transformable","Animatable","clipPath","drift","decomposeTransform","afterUpdate","updateTransform","hide","setClipPath","removeClipPath","animators","addAnimator","removeAnimator","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","v0","cloneValue","rgba2String","getArrayDim","keyframes","lastValue","createTrackClip","animator","easing","oneTrackDone","forceAnimate","_getter","_setter","useSpline","trackLen","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastFrame","lastFramePercent","onframe","frame","clip","Clip","life","_loop","_delay","ondestroy","Animator","_tracks","_clipCount","_doneList","_onframeList","_clipList","when","tracks","during","pause","_paused","resume","isPaused","_doneCallback","doneList","lastClip","clipCount","addClip","oldOnFrame","forwardToLast","clipList","removeClip","done","getClips","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","normalizeRadian","angle","LinkedList","tail","linkedListProto","entry","Entry","insertEntry","maxSize","_list","_map","_maxSize","_lastRemovedEntry","LRUProto","leastUsedEntry","idStart","paths","_updatePathDirty","globalCoord","createLinearGradient","createRadialGradient","STYLE_COMMON_PROPS","textTag","blend","prevStyle","firstDraw","globalAlpha","globalCompositeOperation","otherStyle","canvasGradient","styleProto","points","smooth","controlPoints","smoothBezier","smoothConstraint","cp1","cp2","smoothSpline","r1","r2","r3","r4","total","restore","unitX","unitY","someVectorAt","isTangent","cpx2","cpy2","cpx1","cpy1","_curve","pointAt","tangentAt","polyHelper","fixClipWithShadow","Definable","svgRoot","tagNames","markLabel","_svgRoot","_tagNames","_markLabel","nextId","ZText","_graphic","getDefs","isForceCreating","defs","getElementsByTagName","contains","onUpdate","addDom","removeDom","getDoms","doms","tags","markAllUnused","that","markUsed","removeUnused","getSvgProxy","displayable","getTextSvgElement","getSvgElement","processArc","fa","psiDeg","xp","yp","lambda","cxp","cyp","vAngle","u","vRatio","createPathProxyFromString","cs","cc","prevCmd","cpx","cpy","ctlPtx","ctlPty","createPathOptions","pathProxy","transformPath","pathEls","pathList","pathEl","pathBundle","vMag","createNode","doCreateNode","initVML","vmlInited","doc","styleSheets","createStyleSheet","addRule","urn","win","namespaces","zrvml","chartInstance","echartsAPIList","actionInfos","isSelected","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","getDimensionsInfo","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","singleAxisType","isCategory","single","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","dataSelectableMixin","PieSeries","legendDataProvider","getRawData","updateSelectedMap","_defaultLabelLine","getInitialData","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","legendHoverLink","hoverAnimation","minAngle","selectedOffset","avoidLabelOverlap","stillShowZeroSum","itemStyle","borderWidth","animationType","updateDataSelected","hasAnimation","toggleItemSelected","midAngle","PiePiece","onEmphasis","polyline","hoverIgnore","onNormal","normalIgnore","sector","updateData","getLabelStyle","isLabelInside","piePieceProto","firstCreate","sectorShape","itemStyleModel","visualColor","getItemStyle","_updateLabel","labelText","labelLayout","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","newIdx","oldIdx","_createClipPath","itemLayout","adjustSingleSide","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","labelLineLen","labelLineLen2","labelRotate","RADIAN","eachSeriesByType","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","makeAxisEventDataBase","endTextLayout","textRotate","rotationDiff","inverse","onLeft","tooltipOpt","fixMinMaxLabelShow","textEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","isTwoLabelOverlapped","firstRect","nextRect","mRotationBack","nameDirection","tickDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","axisLine","pt1","pt2","axisTick","tickModel","lineStyleModel","tickLen","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","axisLabel","axisLabelShow","labelRotation","categoryData","triggerEvent","tickVal","itemTextStyleModel","textColor","labelStr","textEl","targetType","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","content","axisRotation","rawTick","updateAxisPointer","axisView","AxisView","getAxisPointerClass","axisPointerClass","axisPointerModelHelper","_axisPointer","disposeAxisPointer","axisPointer","axisPointerClazz","registerAxisPointerClass","gridModel","getZero","theAxis","grid","toGlobalCoord","rawAxisPosition","axisPosition","onZero","axisDim","getRect","rectBound","axisOffset","posMap","dirMap","labelInside","getLabelInterval","axisTrigger","link","tooltipOption","highDownKey","AxisPointerModel","triggerOn","shadowStyle","borderColor","handle","icon","AxisPonterView","disopse","BaseAxisPointer","animationModel","moveAnimation","propsEqual","lastProp","lastProps","newProps","equals","updateLabelShowHide","labelEl","getHandleTransProps","trans","createIcon","handleModel","iconStr","updateMandatoryProps","eventTool","_group","_lastGraphicKey","_handle","_dragging","_lastValue","_lastStatus","_payloadInfo","animationThreshold","_axisModel","_axisPointerModel","makeElOption","graphicKey","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","_renderHandle","isCategoryAxis","useSnap","getBandWidth","axisExtent","pointerOption","pointer","pointerEl","updateHandleTransform","onmousemove","onmousedown","_onHandleDragMove","ondragend","_onHandleDragEnd","includeStyles","handleSize","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","doClear","buildLabel","getCartesian","getAxisDimIndex","viewHelper","cartesianAxisHelper","CartesianAxisPointer","otherExtent","getOtherAxis","getGlobalExtent","pixelValue","elStyle","pointerShapeBuilder","currPosition","cursorOtherValue","tooltipOptions","targetShape","shadow","bandWidth","findPointFromSeries","shouldHide","illegalPoint","outputFinder","showValueMap","dataByCoordSys","highlightBatch","updaters","showPointer","showTooltip","coordSysContainsPoint","notTargetAxis","processOnAxis","pointToData","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","makeMapperParam","updateModelActually","dispatchTooltipActually","dispatchHighDownActually","newValue","dontSnap","containData","buildPayloadsBySeries","payloadBatch","snapToValue","seriesNestestValue","dataDim","getAxisTooltipData","nestestValue","modelHelper","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","valItem","lastHighlights","newHighlights","toHighlight","toDownplay","isTarget","vals","calculateDataExtent","seriesExtent","fixExtentByAxis","setAxisModel","isRestore","percentWindow","_percentWindow","valueWindow","_valueWindow","useOrigin","setRange","_dimName","_axisIndex","_dataExtent","_dataZoomModel","getTargetSeriesModels","getOtherAxisModel","otherAxisDim","coordSysIndexName","isCartesian","foundOtherAxisModel","otherAxisModel","calculateDataWindow","percentExtent","boundValue","boundPercent","reset","dataWindow","filterData","isInWindow","linkedNodesFinder","effectedModels","resetSingleAxis","filterSingleAxis","valueRange","BrushController","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_mounted","baseUID","_handlers","mouseHandlers","doEnableBrush","controller","brushOption","interactionMutex","take","MUTEX_RESOURCE_KEY","brushType","DEFAULT_BRUSH_OPT","doDisableBrush","release","createCover","cover","coverRenderers","__brushOption","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","COVER_Z","updateCoverAfterCreation","updateCommon","getPanelByPoint","panels","panel","pn","getPanelByCover","panelId","clearCovers","covers","originalLength","areas","isEnd","removeOnClick","shouldShowCover","track","UNSELECT_THRESHOLD","getTrackEnds","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","brushStyle","MIN_RESIZE_LINE_WIDTH","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","transformable","mainEl","globalDir","getGlobalDirection","CURSOR_MAP","pointsToRect","clipByPanel","formatRectRange","localDirection","inverseMap","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","DIRECTION_MAP","driftPolygon","thisGroup","localD","localZero","panelRect","xmin","ymin","resetCursor","inCover","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","brushMode","determineBrushType","__brushPanelId","getCreatingRange","__defaultBrushType","handleDragEnd","getLineRenderer","xyIndex","localTrack","ends","brushWidth","ne","sw","nw","se","enableBrush","setPanels","panelOpts","oldPanels","newPanels","panelOpt","defaultBrushType","enableGlobalPan","eachCover","updateCovers","brushOptionList","getKey","tmpIdPrefix","oldGetKey","addOrUpdate","newIndex","oldIndex","newBrushOption","oldCovers","newCovers","unmount","mousedown","mousemove","mouseup","lineX","lineY","polygon","BrushTargetManager","targetInfoList","_targetInfoList","foundCpts","targetInfoBuilders","builder","formatMinMax","minMax","INCLUDE_FINDER_MAIN_TYPES","axisConvert","axisNameIndex","rangeOrCoordRange","coordToData","toLocalCoord","xyMinMax","axisDiffProcessor","refer","scales","getScales","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","COORD_CONVERTS","setOutputRanges","matchOutputRanges","area","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","makePanelOpts","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","geoModel","xminymin","xmaxymax","getStore","resourceKey","userKey","isTaken","positionGroup","getBoxLayoutParams","addBackground","targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","featureManager","ToolboxModel","feature","featureOpt","featureName","Feature","itemSize","itemGap","showTitle","iconStyle","isUserFeatureName","listComponentHelper","toolboxModel","featureNames","oldName","featureOpts","featureModel","onclick","unusable","createIconPaths","setIconStatus","iconName","iconPaths","iconStatus","iconStyleModel","icons","getIcons","titles","title","__title","_features","_featureNames","titleText","needPutOnTop","topOffset","groupSeries","seriesGroupByCategoryAxis","otherSeries","eachRawSeries","baseAxis","getBaseAxis","categoryAxis","valueAxis","assembleSeriesWithCategoryAxis","tables","valueAxisDim","headers","columns","ITEM_SPLITER","BLOCK_SPLITER","assembleOtherSeries","getContentFromModel","isTSVFormat","parseTSVContents","tsv","tsvLines","itemSplitRegex","header","parseListContents","hasName","parseContents","blockMetaList","blocks","blockMeta","axisKey","DataView","tryMergeDataOption","originalData","readOnly","optionToContent","contentToOption","lang","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","viewMain","textarea","htmlOrDom","buttonContainer","buttonStyle","closeButton","refreshButton","selectionStart","selectionEnd","newSeriesOptList","seriesOpt","getSeriesByName","DataZoom","_brushController","_onBrush","_isZoomActive","retrieveAxisSetting","updateBackBtnStatus","updateZoomBtnStatus","zoomActive","dataZoomSelectActive","brushTargetManager","DATA_ZOOM_ID_BASE","zoom","back","nextActive","_dispatchZoomAction","setBatch","findDataZoom","found","dzModel","addForAxis","dataZoomOpt","axisIndicesName","givenAxisIndices","forEachComponent","axisOpt","newOpt","$fromToolbox","dataZoomOpts","dataZoom","toolboxOpt","toolbox","MagicType","bar","tiled","availableIcons","seriesOptGenreator","markPoint","markLine","radioTypes","generateNewSeriesTypes","newSeriesOpt","getAxesByScale","radio","currentType","Restore","SaveAsImage","$a","download","MouseEvent","write","evt","bubbles","cancelable","assembleTransition","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","tooltipModel","zrColor","borderName","camelCase","TooltipContent","_x","_y","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","eventUtil","dispatch","onmouseleave","hideLater","_hideDelay","stl","currentStyle","defaultView","domStyle","setContent","setEnterable","enterable","viewportRoot","offsetLeft","offsetTop","isShow","showContent","alwaysShowContent","displayMode","confine","showDelay","hideDelay","borderRadius","extraCssText","animationEasingUpdate","buildTooltipModel","modelCascade","resultModel","refixTooltipPosition","gapH","gapV","confineTooltipPosition","calcTooltipPosition","contentSize","domWidth","domHeight","rectWidth","rectHeight","isCenterAlign","layoutUtil","axisPointerViewHelper","tooltipContent","_tooltipContent","_tooltipModel","_ecModel","_lastDataByCoordSys","_alwaysShowContent","_initGlobalListener","_keepShow","_tryShow","_hide","_lastX","_lastY","_refreshUpdateTimeout","manuallyShowTip","_ticket","_manuallyAxisShowTip","pointInfo","manuallyHideTip","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","_showTimout","singleDefaultHTML","singleParamsList","singleTooltipModel","itemCoordSys","axisValue","seriesDefaultHTML","valueLabel","axisValueLabel","firstLine","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","tooltipTrigger","defaultHtml","asyncTicket","subTooltipModel","cbTicket","vAlign","viewSize","layoutRect","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisItemCoordSys","thisDataByAxis","lastItem","indexAxis","lastIndices","lastIdxItem","newIdxItem","fixExtentWithBands","nTick","normalizedExtent","onBand","alignWithLabel","bands","getBands","coords","getLabelsCoords","rangeStart","rangeEnd","resetRange","symbolUtil","axisModelCommonMixin","createList","createSymbol","createScale","mixinAxisModelCommonMethods","maskColor","mask","labelRect","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","filterBySubType","cpt","assertSeriesInitialized","_optionManager","onlyGraphic","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","cpts","isIdArray","isNameArray","findComponents","queryCond","q","indexAttr","idAttr","nameAttr","queryResult","oneSeries","getSeriesByType","getSeries","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","filterSeries","filteredSeries","componentTypes","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","colorPaletteMixin","visualColorAccessPath","fillDataTextStyle","newSeriesOption","getLinkedData","coordDim","dataDimToCoordDim","multipleSeries","formattedValue","valStr","colorEl","animationEnabled","animationDuration","progressiveThreshold","hoverLayerThreshold","useUTC","getBorderLineDash","lineType","getLineDash","dotSize","dashSize","gTextStyleModel","getTextRect","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","clockWise","pointerColor","dataRange","visualMap","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","mpData","mlData","legendModels","fixRoundingError","originalVal","roundingErrorFix","intervalScaleProto","mathFloor","mathCeil","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","rank","scaleHelper","bisect","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","ONE_SECOND","ONE_MINUTE","ONE_DAY","Triangle","Diamond","Pin","asin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","symbolType","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","symbolPath","setColor","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","encodeColor","colorAccessPath","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","argv","versions","addListener","removeListener","removeAllListeners","prependListener","prependOnceListener","cwd","chdir","umask","task","tasksByHandle","nextHandle","registerImmediate","clearImmediate","runIfPresent","currentlyRunningATask","attachTo","getPrototypeOf","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","onGlobalMessage","script","onreadystatechange","Timeout","clearFn","_id","_clearFn","clearInterval","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","isError","resolveProps","route","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","parts","stringifyQuery","val2","createRoute","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","currentTarget","findAnchor","installed","_Vue","registerInstance","callVal","registerRouteInstance","beforeCreate","_routerRoot","_router","_route","View","Link","beforeRouteEnter","beforeRouteLeave","beforeRouteUpdate","resolvePath","relative","append","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","prefix","modifier","asterisk","partial","optional","escapeGroup","escapeString","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","encodeURIComponent","TypeError","isarray","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","pathToRegexp_1","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathMap","nameMap","addRouteRecord","matchAs","pathToRegexpOptions","normalizedPath","normalizePath","caseSensitive","regex","compileRouteRegex","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","replaceState","getStateKey","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","scrollToPosition","catch","positionStore","pageXOffset","pageYOffset","getElementPosition","docEl","docRect","elRect","isValidPosition","isNumber","normalizePosition","normalizeOffset","selector","scrollTo","genKey","Time","now","_key","pushState","runQueue","resolveAsyncComponents","hasAsync","flatMapComponents","resolvedDef","isESModule","flatten","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","guards","instance","guard","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","getLocation","pathname","search","checkFallback","ensureSlash","getHash","replaceHash","getUrl","pushHash","supportsPushState","registerHook","createHref","routerView","$route","_routerViewCache","depth","inactive","routerViewDepth","propsToPass","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","iterator","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","initLocation","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","supportsScroll","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","forward","getMatchedComponents","normalizedTo","parentId","newStyles","sourceMap","part","_zrender","_export","makeEventPacket","eveType","topTarget","gestureEvent","pinchX","pinchY","pinchScale","EmptyProxy","isHover","SILENT","Draggable","handlerNames","painterRoot","_hovered","_lastTouchMoment","lastHovered","lastHoveredTarget","hovered","hoveredTarget","setCursor","dispatchToElement","mouseout","innerDom","toElement","relatedTarget","eventArgs","eventPacket","eachOtherLayer","layer","hoverCheckResult","_downEl","_downPoint","_upEl","returnFalse","createDom","newDom","newDomStyle","Layer","onselectstart","domBack","ctxBack","motionBlur","lastFrameAlpha","initContext","__currentValues","createBackBuffer","clearAll","haveMotionBLur","clearRect","clearColorGradientOrPattern","__canvasGradient","fillRect","parseInt10","isLayerValid","__builtin__","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","viewRect","isClipPathChanged","clipPaths","prevClipPaths","doClip","createRoot","domRoot","singleCanvas","_opts","_singleCanvas","rootStyle","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","_domRoot","_getSize","_progressiveLayers","_hoverlayer","_hoverElements","getViewportRootOffset","paintAll","_paintList","_startProgessive","__hoverMir","elMirror","__from","hoverElements","hoverLayer","displayableSortFunc","getLayer","originalEl","invTransform","_doPaintEl","_progressiveToken","_doPaintList","_furtherProgressive","_progress","_clearProgressive","_updateLayerStatus","eachBuiltinLayer","flushProgressiveLayer","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","elZLevel","elFrame","__frame","MAX_PROGRESSIVE_LAYER_NUMBER","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","prevClipLayer","prevElClipPaths","insertLayer","layersMap","prevLayer","virtual","prevDom","eachLayer","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","_clearLayer","layerConfig","delLayer","clearLayer","findAndDrawOtherLayer","smaller","larger","intermediateLayer","renderToCanvas","imageLayer","displayList","whIdx","cwh","plt","prb","shadowBlurSize","leftMargin","rightMargin","topMargin","bottomMargin","pathTransform","ImageShape","imgShape","shapeCompareFunc","_roots","_displayList","_displayListLen","includeIgnore","updateDisplayList","_updateAndAddDisplayable","userSetClipPath","currentClipPath","parentClipPath","_renderList","_event","_clips","_running","_time","_pausedTime","_pauseStart","clips","deferredEvents","deferredClips","_needsRemove","fire","_startLoop","_life","_initialized","onrestart","easingFuncs","globalTime","deltaTime","_startTime","easingFunc","schedule","restart","remainder","linear","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","sinusoidalOut","sinusoidalInOut","exponentialIn","exponentialOut","exponentialInOut","circularIn","circularOut","circularInOut","elasticIn","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","atan2","_a","isAroundEqual","swapExtrema","windingCubic","nRoots","y0_","y1_","nExtrema","unit","windingQuadratic","y_","x_","windingArc","containPath","isStroke","windingLine","cubic","quadratic","pointPair","GestureMgr","recognize","_doTrack","_recognize","touches","trackItem","recognizers","gestureInfo","pinch","pinchEnd","pinchPre","pinchCenter","Diff","buildValues","componentPos","componentLen","added","clonePath","arrayDiff","newLen","oldLen","editLength","maxEditLength","bestPath","extractCommon","diagonalPath","addPath","removePath","canAdd","canRemove","pushComponent","commonCount","tokenize","fromPoints","xDim","yDim","tx","ty","vec2Min","vec2Max","extremity","eventNameFix","processGesture","gestureMgr","_gestureMgr","setTouchTimer","_touching","_touchTimer","isPointerFromTouch","pointerType","initDomHandler","makeMouseHandler","touchHandlerNames","domHandlers","pointerHandlerNames","mouseHandlerNames","HandlerDomProxy","mountHandlers","pointerEventNames","pointerdown","pointerup","pointermove","pointerout","nm","touchstart","touchmove","touchend","handlerDomProxyProto","_Group","_Path","_Image","_CompoundPath","_Text","_Arc","_BezierCurve","_Circle","_Droplet","Droplet","_Ellipse","Ellipse","_Heart","Heart","_Isogon","Isogon","_Line","_Polygon","_Polyline","_Rect","_Ring","_Rose","Rose","_Sector","_Star","Star","_Trochoid","Trochoid","_LinearGradient","_RadialGradient","_Pattern","_BoundingRect","orignalBrush","shadowTemp","isLoop","constraint","prevPoint","nextPoint","cps","v2Min","v2Max","v2Clone","v2Sub","v2Scale","d0","v2Distance","cp0","v2Add","interpolate","segs","w2","w3","ox","oy","dStep","deg","xStart","yStart","ri","num","animatingShape","pathSplitted","_animateToShallow","objShallow","propertyCount","_dragStart","_drag","_dragEnd","draggingTarget","_draggingTarget","dropTarget","lastDropTarget","_dropTarget","mIdentity","transformableProto","parentHasTransform","tmpTransform","checkParentAvailable","insertAfter","prevSibling","prepend","createMethodNotSupport","zrLog","GradientManager","ClippathManager","SVGPainter","gradientManager","clipPathManager","viewport","_viewport","_visibleList","visibleList","listLen","newVisibleList","svgProxy","prevSvgElement","svgElement","textSvgElement","addWithoutUpdate","_getDefs","viewportStyle","pathToSvg","unescape","updateDom","parentEl","clipPathEl","_textDom","gradient","nPoint","mathAtan2","VMLPainter","vmlCore","vmlViewport","vmlRoot","_vmlRoot","_vmlViewport","onRemove","onAdd","_firstPaint","__alreadyNotVisible","brushVML","_getWidth","_getHeight","vmlViewportStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","Z2","initRootElStyle","coordsize","coordorigin","encodeHtmlAttribute","rgb2Str","getZIndex","setColorAndOpacity","getColorAndAlpha","updateFillNode","zrEl","gradientType","focus","expansion","stops","cs1","cs2","colorAndAlphaList","colorAndAlpha","color1","color2","opacity1","opacity2","focusposition","updateStrokeNode","dashstyle","updateFillAndStroke","vmlEl","isFill","_vmlEl","needTransform","strokeEl","weight","zIndex","removeRectText","appendRectText","isImage","ow","oh","_imageSrc","_imageWidth","_imageHeight","imageRuntimeStyle","runtimeStyle","oldRuntimeWidth","oldRuntimeHeight","sh","hasCrop","vmlElStyle","hasRotation","transformFilter","imageTransformPrefix","imageEl","_imageEl","cropEl","_cropEl","imageELStyle","tmpImage","overflow","cropElStyle","filterStr","textMeasureEl","fontStyleCache","fontStyleCacheCount","fontEl","getFontStyle","fontString","variant","fontVariant","family","ex","offsetWidth","fromTextEl","textPathEl","skewEl","textVmlEl","_textVmlEl","textpathok","textVmlElStyle","string","mediaQuery","alreadyImportedModules","addStylesToDom","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","sources","btoa","hasDocument","DEBUG","listToStyles","_isProduction","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.fa9f690ac68ea160a20d.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(33);\n\nvar zrUtil = __webpack_require__(0);\n\nvar PathProxy = __webpack_require__(17);\n\nvar pathContain = __webpack_require__(196);\n\nvar Pattern = __webpack_require__(44);\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(3);\n\n    var GlobalModel = __webpack_require__(142);\n    var ExtensionAPI = __webpack_require__(97);\n    var CoordinateSystemManager = __webpack_require__(50);\n    var OptionManager = __webpack_require__(143);\n\n    var ComponentModel = __webpack_require__(23);\n    var SeriesModel = __webpack_require__(144);\n\n    var ComponentView = __webpack_require__(61);\n    var ChartView = __webpack_require__(60);\n    var graphic = __webpack_require__(7);\n    var modelUtil = __webpack_require__(5);\n    var throttle = __webpack_require__(59);\n\n    var zrender = __webpack_require__(185);\n    var zrUtil = __webpack_require__(0);\n    var colorTool = __webpack_require__(16);\n    var Eventful = __webpack_require__(22);\n    var timsort = __webpack_require__(43);\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this, this._coordSysMgr);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.2',\n        dependencies: {\n            zrender: '3.4.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(159));\n    echarts.registerPreprocessor(__webpack_require__(151));\n    echarts.registerLoading('default', __webpack_require__(141));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = __webpack_require__(38);\n    echarts.Model = __webpack_require__(10);\n\n    echarts.Axis = __webpack_require__(138);\n\n    echarts.graphic = __webpack_require__(7);\n    echarts.number = __webpack_require__(6);\n    echarts.format = __webpack_require__(9);\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = __webpack_require__(13);\n    echarts.vector = __webpack_require__(4);\n    echarts.color = __webpack_require__(16);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = __webpack_require__(140);\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(9);\n    var nubmerUtil = __webpack_require__(6);\n    var Model = __webpack_require__(10);\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var pathTool = __webpack_require__(85);\n    var round = Math.round;\n    var Path = __webpack_require__(1);\n    var colorTool = __webpack_require__(16);\n    var matrix = __webpack_require__(13);\n    var vector = __webpack_require__(4);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(25);\n\n    graphic.Image = __webpack_require__(20);\n\n    graphic.Text = __webpack_require__(21);\n\n    graphic.Circle = __webpack_require__(77);\n\n    graphic.Sector = __webpack_require__(83);\n\n    graphic.Ring = __webpack_require__(82);\n\n    graphic.Polygon = __webpack_require__(79);\n\n    graphic.Polyline = __webpack_require__(80);\n\n    graphic.Rect = __webpack_require__(81);\n\n    graphic.Line = __webpack_require__(78);\n\n    graphic.BezierCurve = __webpack_require__(76);\n\n    graphic.Arc = __webpack_require__(75);\n\n    graphic.CompoundPath = __webpack_require__(68);\n\n    graphic.LinearGradient = __webpack_require__(69);\n\n    graphic.RadialGradient = __webpack_require__(70);\n\n    graphic.BoundingRect = __webpack_require__(8);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(4);\n\nvar matrix = __webpack_require__(13);\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(6);\n    var textContain = __webpack_require__(11);\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(12);\n    var env = __webpack_require__(3);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(149));\n    mixin(Model, __webpack_require__(146));\n    mixin(Model, __webpack_require__(150));\n    mixin(Model, __webpack_require__(148));\n\n    module.exports = Model;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar BoundingRect = __webpack_require__(8);\n\nvar imageHelper = __webpack_require__(45);\n\nvar _util = __webpack_require__(0);\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(66);\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(18);\n\nvar vec2 = __webpack_require__(4);\n\nvar bbox = __webpack_require__(201);\n\nvar BoundingRect = __webpack_require__(8);\n\nvar _config = __webpack_require__(32);\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(4);\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Eventful = __webpack_require__(22);\n\nexports.Dispatcher = Eventful;\n\nvar env = __webpack_require__(3);\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(33);\n\nvar BoundingRect = __webpack_require__(8);\n\nvar zrUtil = __webpack_require__(0);\n\nvar imageHelper = __webpack_require__(45);\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Displayable = __webpack_require__(33);\n\nvar zrUtil = __webpack_require__(0);\n\nvar textContain = __webpack_require__(11);\n\nvar textHelper = __webpack_require__(35);\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(10);\n    var zrUtil = __webpack_require__(0);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(42);\n    var clazzUtil = __webpack_require__(12);\n    var layout = __webpack_require__(31);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(147));\n\n    module.exports = ComponentModel;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Element = __webpack_require__(62);\n\nvar BoundingRect = __webpack_require__(8);\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(32);\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n/***/ }),\n/* 27 */,\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var Model = __webpack_require__(10);\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(155);\n    var IntervalScale = __webpack_require__(41);\n    __webpack_require__(156);\n    __webpack_require__(154);\n    var Scale = __webpack_require__(30);\n\n    var numberUtil = __webpack_require__(6);\n    var zrUtil = __webpack_require__(0);\n    var textContain = __webpack_require__(11);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(12);\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(8);\n    var numberUtil = __webpack_require__(6);\n    var formatUtil = __webpack_require__(9);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/height is premitted to exist.\n                hasValue(newOption, names[2]) && (merged[names[1]] = null);\n                hasValue(newOption, names[1]) && (merged[names[2]] = null);\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nvar dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Style = __webpack_require__(71);\n\nvar Element = __webpack_require__(62);\n\nvar RectText = __webpack_require__(74);\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(0);\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = __webpack_require__(11);\n\nvar roundRectHelper = __webpack_require__(73);\n\nvar imageHelper = __webpack_require__(45);\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var formatUtil = __webpack_require__(9);\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(10);\n    var DataDiffer = __webpack_require__(37);\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(5);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(6);\n    var formatUtil = __webpack_require__(9);\n    var Scale = __webpack_require__(30);\n    var helper = __webpack_require__(58);\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazz = __webpack_require__(12);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\nvar Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar LRU = __webpack_require__(66);\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\nvar svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(46);\n\nvar createElement = _core.createElement;\n\nvar PathProxy = __webpack_require__(17);\n\nvar BoundingRect = __webpack_require__(8);\n\nvar textContain = __webpack_require__(11);\n\nvar textHelper = __webpack_require__(35);\n\nvar Text = __webpack_require__(21);\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(67);\n\nvar env = __webpack_require__(3);\n\nvar zrUtil = __webpack_require__(0);\n\nvar Handler = __webpack_require__(186);\n\nvar Storage = __webpack_require__(189);\n\nvar Painter = __webpack_require__(188);\n\nvar Animation = __webpack_require__(190);\n\nvar HandlerProxy = __webpack_require__(202);\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n/***/ }),\n/* 49 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (false\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (false\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"production\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (false) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"production\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    false\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (false) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (false) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (false) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (false) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (false) {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (false) {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (false) {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (false) {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (false) {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        false\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (false\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (false) {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(24), __webpack_require__(169).setImmediate))\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(5);\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(3);\n    var zrUtil = __webpack_require__(0);\n    var get = __webpack_require__(5).makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(7);\n    var textContain = __webpack_require__(11);\n    var formatUtil = __webpack_require__(9);\n    var matrix = __webpack_require__(13);\n    var axisHelper = __webpack_require__(29);\n    var AxisBuilder = __webpack_require__(105);\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var env = __webpack_require__(3);\n    var echarts = __webpack_require__(2);\n    var modelUtil = __webpack_require__(5);\n    var helper = __webpack_require__(36);\n    var AxisProxy = __webpack_require__(114);\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ComponentView = __webpack_require__(61);\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file History manager.\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var classUtil = __webpack_require__(12);\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * For testable.\n */\n\n\n    var numberUtil = __webpack_require__(6);\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(25);\n    var componentUtil = __webpack_require__(42);\n    var clazzUtil = __webpack_require__(12);\n    var modelUtil = __webpack_require__(5);\n    var zrUtil = __webpack_require__(0);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(25);\n    var componentUtil = __webpack_require__(42);\n    var clazzUtil = __webpack_require__(12);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar guid = __webpack_require__(67);\n\nvar Eventful = __webpack_require__(22);\n\nvar Transformable = __webpack_require__(216);\n\nvar Animatable = __webpack_require__(214);\n\nvar zrUtil = __webpack_require__(0);\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Clip = __webpack_require__(191);\n\nvar color = __webpack_require__(16);\n\nvar _util = __webpack_require__(0);\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports) {\n\nvar _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports) {\n\nvar PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Gradient = __webpack_require__(34);\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nvar Gradient = __webpack_require__(34);\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports) {\n\nvar STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar smoothSpline = __webpack_require__(206);\n\nvar smoothBezier = __webpack_require__(205);\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports) {\n\nfunction buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar textHelper = __webpack_require__(35);\n\nvar BoundingRect = __webpack_require__(8);\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\nvar vec2 = __webpack_require__(4);\n\nvar _curve = __webpack_require__(18);\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\nvar polyHelper = __webpack_require__(72);\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\nvar polyHelper = __webpack_require__(72);\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\nvar roundRectHelper = __webpack_require__(73);\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\nvar fixClipWithShadow = __webpack_require__(204);\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(46);\n\nvar createElement = _core.createElement;\n\nvar zrUtil = __webpack_require__(0);\n\nvar Path = __webpack_require__(1);\n\nvar ZImage = __webpack_require__(20);\n\nvar ZText = __webpack_require__(21);\n\nvar _graphic = __webpack_require__(47);\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\nvar PathProxy = __webpack_require__(17);\n\nvar transformPath = __webpack_require__(221);\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(3);\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n/***/ }),\n/* 87 */,\n/* 88 */,\n/* 89 */,\n/* 90 */,\n/* 91 */,\n/* 92 */,\n/* 93 */,\n/* 94 */,\n/* 95 */,\n/* 96 */,\n/* 97 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n\n    function ExtensionAPI(chartInstance, coordSysMgr) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n\n        // Inject getCoordinateSystems to ecModel\n        this.getCoordinateSystems = zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(2);\n    var zrUtil = __webpack_require__(0);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(38);\n    var completeDimensions = __webpack_require__(39);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(5);\n    var CoordinateSystem = __webpack_require__(50);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var echarts = __webpack_require__(2);\n\n    __webpack_require__(101);\n    __webpack_require__(102);\n\n    __webpack_require__(98)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(158), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(104), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(153), 'pie'));\n\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var List = __webpack_require__(38);\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(5);\n    var completeDimensions = __webpack_require__(39);\n\n    var dataSelectableMixin = __webpack_require__(125);\n\n    var PieSeries = __webpack_require__(2).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(7);\n    var zrUtil = __webpack_require__(0);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(60).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(11);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// TODO minAngle\n\n\n\n    var numberUtil = __webpack_require__(6);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(103);\n    var zrUtil = __webpack_require__(0);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(9);\n    var graphic = __webpack_require__(7);\n    var Model = __webpack_require__(10);\n    var numberUtil = __webpack_require__(6);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(4);\n    var matrix = __webpack_require__(13);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var axisPointerModelHelper = __webpack_require__(28);\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = __webpack_require__(2).extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(2);\n    var axisPointerModelHelper = __webpack_require__(28);\n    var axisTrigger = __webpack_require__(113);\n    var zrUtil = __webpack_require__(0);\n\n    __webpack_require__(109);\n    __webpack_require__(110);\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    __webpack_require__(112);\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var echarts = __webpack_require__(2);\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var globalListener = __webpack_require__(52);\n\n    var AxisPonterView = __webpack_require__(2).extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var clazzUtil = __webpack_require__(12);\n    var graphic = __webpack_require__(7);\n    var get = __webpack_require__(5).makeGetter();\n    var axisPointerModelHelper = __webpack_require__(28);\n    var eventTool = __webpack_require__(19);\n    var throttle = __webpack_require__(59);\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var graphic = __webpack_require__(7);\n    var BaseAxisPointer = __webpack_require__(111);\n    var viewHelper = __webpack_require__(53);\n    var cartesianAxisHelper = __webpack_require__(107);\n    var AxisView = __webpack_require__(106);\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(5);\n    var modelHelper = __webpack_require__(28);\n    var findPointFromSeries = __webpack_require__(51);\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            linkGroup && !showValueMap[tarKey] && each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                var srcValItem = showValueMap[srcKey];\n                // If srcValItem exist, source axis is triggered, so link to target axis.\n                if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                    var val = srcValItem.value;\n                    linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                        val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                    )));\n                    processOnAxis(tarAxisInfo, val, updaters, true, outputFinder);\n                }\n            });\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indexOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Axis operator\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(6);\n    var helper = __webpack_require__(36);\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = __webpack_require__(54);\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(55).extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var helper = __webpack_require__(36);\n    var echarts = __webpack_require__(2);\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @file Data zoom processor\n */\n\n\n    var echarts = __webpack_require__(2);\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(23).registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * DataZoom component entry\n */\n\n\n    __webpack_require__(119);\n\n    __webpack_require__(54);\n    __webpack_require__(55);\n\n    __webpack_require__(115);\n    __webpack_require__(116);\n\n    __webpack_require__(118);\n    __webpack_require__(117);\n\n\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = __webpack_require__(22);\n    var zrUtil = __webpack_require__(0);\n    var BoundingRect = __webpack_require__(8);\n    var graphic = __webpack_require__(7);\n    var interactionMutex = __webpack_require__(123);\n    var DataDiffer = __webpack_require__(37);\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * true means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            rect, // mandatory.\n         *            defaultBrushType // optional, only used when brushType is 'auto'.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            var oldPanels = this._panels || {};\n            var newPanels = this._panels = panelOpts && panelOpts.length && {};\n            var thisGroup = this.group;\n\n            newPanels && each(panelOpts, function (panelOpt) {\n                var panelId = panelOpt.panelId;\n                var panel = oldPanels[panelId];\n                if (!panel) {\n                    panel = new graphic.Rect({\n                        silent: true,\n                        invisible: true\n                    });\n                    thisGroup.add(panel);\n                }\n\n                var rect = panelOpt.rect;\n                // Using BoundingRect to normalize negative width/height.\n                if (!(rect instanceof BoundingRect)) {\n                    rect = BoundingRect.create(rect);\n                }\n\n                panel.attr('shape', rect.plain());\n                panel.__brushPanelId = panelId;\n                panel.__defaultBrushType = panelOpt.defaultBrushType;\n                newPanels[panelId] = panel;\n                oldPanels[panelId] = null;\n            });\n\n            each(oldPanels, function (panel) {\n                panel && thisGroup.remove(panel);\n            });\n\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         * @return {boolean} [opt.position=[0, 0]]\n         * @return {boolean} [opt.rotation=0]\n         * @return {boolean} [opt.scale=[1, 1]]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        updateZ(cover);\n        cover.__brushOption = brushOption;\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(group) {\n        group.traverse(function (el) {\n            el.z = COVER_Z;\n            el.z2 = COVER_Z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    function getPanelByPoint(controller, x, y) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        each(panels, function (pn) {\n            pn.contain(x, y) && (panel = pn);\n        });\n        return panel;\n    }\n\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n        if (panel === true) { // Global panel\n            return zrUtil.clone(data);\n        }\n\n        var panelRect = panel.getBoundingRect();\n\n        return zrUtil.map(data, function (point) {\n            var x = point[0];\n            x = mathMax(x, panelRect.x);\n            x = mathMin(x, panelRect.x + panelRect.width);\n            var y = point[1];\n            y = mathMax(y, panelRect.y);\n            y = mathMin(y, panelRect.y + panelRect.height);\n            return [x, y];\n        });\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var zr = controller._zr;\n\n        if (controller._brushType) { // If active\n            var panels = controller._panels;\n            var covers = controller._covers;\n            var inCover;\n\n            for (var i = 0; i < covers.length; i++) {\n                if (coverRenderers[covers[i].__brushOption.brushType].contain(covers[i], x, y)) {\n                    inCover = true;\n                    break;\n                }\n            }\n\n            if (!inCover) {\n                if (panels) { // Brush on panels\n                    each(panels, function (panel) {\n                        panel.contain(x, y) && zr.setCursorStyle('crosshair');\n                    });\n                }\n                else { // Global brush\n                    zr.setCursorStyle('crosshair');\n                }\n            }\n        }\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, isEnd) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(controller.group.transformCoordToLocal(x, y));\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.__brushPanelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, x, y) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.__defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.__defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, x, y);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [this.group.transformCoordToLocal(x, y)];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            // set Cursor\n            resetCursor(this, e);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var eventParams = updateCoverByMouse(this, e, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var brushWidth = brushOption.brushStyle.width;\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                if (brushWidth == null) {\n                    var panel = getPanelByCover(controller, cover);\n                    var base = 0;\n                    if (panel !== true) {\n                        var rect = panel.getBoundingRect();\n                        brushWidth = xyIndex ? rect.width : rect.height;\n                        base = xyIndex ? rect.x : rect.y;\n                    }\n                    // FIXME\n                    // do not support global panel yet.\n                    otherExtent = [base, base + (brushWidth || 0)];\n                }\n                else {\n                    otherExtent = [-brushWidth / 2, brushWidth / 2];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(7);\n    var modelUtil = __webpack_require__(5);\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            return {\n                panelId: targetInfo.panelId,\n                rect: targetInfo.getPanelRect(),\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = {};\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            each(gridModelMap, function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    __webpack_require__(2).registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(31);\n    var formatUtil = __webpack_require__(9);\n    var graphic = __webpack_require__(7);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(0);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(127);\n    __webpack_require__(128);\n\n    __webpack_require__(133);\n    __webpack_require__(131);\n    __webpack_require__(129);\n    __webpack_require__(130);\n    __webpack_require__(132);\n\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(14);\n    var zrUtil = __webpack_require__(0);\n\n    var ToolboxModel = __webpack_require__(2).extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var featureManager = __webpack_require__(14);\n    var zrUtil = __webpack_require__(0);\n    var graphic = __webpack_require__(7);\n    var Model = __webpack_require__(10);\n    var DataDiffer = __webpack_require__(37);\n    var listComponentHelper = __webpack_require__(124);\n    var textContain = __webpack_require__(11);\n\n    module.exports = __webpack_require__(2).extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var eventTool = __webpack_require__(19);\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    __webpack_require__(14).register('dataView', DataView);\n\n    __webpack_require__(2).registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var BrushController = __webpack_require__(121);\n    var BrushTargetManager = __webpack_require__(122);\n    var history = __webpack_require__(56);\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    __webpack_require__(120);\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var dataZoomModel = findDataZoom(dimName, coordSys.getAxis(dimName).model, ecModel);\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    __webpack_require__(14).register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    __webpack_require__(2).registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = __webpack_require__(2);\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    __webpack_require__(14).register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var history = __webpack_require__(56);\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    __webpack_require__(14).register('restore', Restore);\n\n\n    __webpack_require__(2).registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var env = __webpack_require__(3);\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    __webpack_require__(14).register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(108);\n\n    __webpack_require__(136);\n\n    __webpack_require__(137);\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(2).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(2).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var zrColor = __webpack_require__(16);\n    var eventUtil = __webpack_require__(19);\n    var formatUtil = __webpack_require__(9);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(3);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(2).extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(135);\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(9);\n    var numberUtil = __webpack_require__(6);\n    var findPointFromSeries = __webpack_require__(51);\n    var layoutUtil = __webpack_require__(31);\n    var env = __webpack_require__(3);\n    var Model = __webpack_require__(10);\n    var globalListener = __webpack_require__(52);\n    var axisHelper = __webpack_require__(29);\n    var axisPointerViewHelper = __webpack_require__(53);\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    __webpack_require__(2).extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n            if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().handler.findHover(payload.x, payload.y),\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? 0 : 20, vAlign ? 0 : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (x + width + gapH > viewWidth) {\n            x -= width + gapH;\n        }\n        else {\n            x += gapH;\n        }\n        if (y + height + gapV > viewHeight) {\n            y -= height + gapV;\n        }\n        else {\n            y += gapV;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(6);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(0);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var axisHelper = __webpack_require__(29);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var createListFromArray = __webpack_require__(99);\n    var symbolUtil = __webpack_require__(157);\n    var axisHelper = __webpack_require__(29);\n    var axisModelCommonMixin = __webpack_require__(139);\n    var Model = __webpack_require__(10);\n    var util = __webpack_require__(0);\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: __webpack_require__(39),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(7);\n    var zrUtil = __webpack_require__(0);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(5);\n    var Model = __webpack_require__(10);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(23);\n\n    var globalDefault = __webpack_require__(145);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(57));\n\n    module.exports = GlobalModel;\n\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var modelUtil = __webpack_require__(5);\n    var ComponentModel = __webpack_require__(23);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n\n    var zrUtil = __webpack_require__(0);\n    var formatUtil = __webpack_require__(9);\n    var classUtil = __webpack_require__(12);\n    var modelUtil = __webpack_require__(5);\n    var ComponentModel = __webpack_require__(23);\n    var colorPaletteMixin = __webpack_require__(57);\n    var env = __webpack_require__(3);\n    var layout = __webpack_require__(31);\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(40)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ }),\n/* 147 */\n/***/ (function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ }),\n/* 148 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(40)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ }),\n/* 149 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(40)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ }),\n/* 150 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(11);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ }),\n/* 151 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(0);\n    var compatStyle = __webpack_require__(152);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 152 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(0);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ }),\n/* 153 */\n/***/ (function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ }),\n/* 154 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(30);\n    var numberUtil = __webpack_require__(6);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(41);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ }),\n/* 155 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(0);\n    var Scale = __webpack_require__(30);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ }),\n/* 156 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = __webpack_require__(0);\n    var numberUtil = __webpack_require__(6);\n    var formatUtil = __webpack_require__(9);\n    var scaleHelper = __webpack_require__(58);\n\n    var IntervalScale = __webpack_require__(41);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ }),\n/* 157 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Symbol factory\n\n\n    var graphic = __webpack_require__(7);\n    var BoundingRect = __webpack_require__(8);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ }),\n/* 158 */\n/***/ (function(module, exports) {\n\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ }),\n/* 159 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(34);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ }),\n/* 160 */,\n/* 161 */,\n/* 162 */,\n/* 163 */,\n/* 164 */,\n/* 165 */,\n/* 166 */,\n/* 167 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 168 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24), __webpack_require__(167)))\n\n/***/ }),\n/* 169 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(168);\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(24)))\n\n/***/ }),\n/* 170 */,\n/* 171 */,\n/* 172 */,\n/* 173 */,\n/* 174 */,\n/* 175 */,\n/* 176 */,\n/* 177 */,\n/* 178 */,\n/* 179 */,\n/* 180 */,\n/* 181 */,\n/* 182 */,\n/* 183 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.8.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (false) {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.8.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 184 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 185 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _zrender = __webpack_require__(48);\n\n(function () {\n  for (var key in _zrender) {\n    if (_zrender == null || !_zrender.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _zrender[key];\n  }\n})();\n\nvar _export = __webpack_require__(203);\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\n__webpack_require__(220);\n\n__webpack_require__(224);\n\n/***/ }),\n/* 186 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(0);\n\nvar vec2 = __webpack_require__(4);\n\nvar Draggable = __webpack_require__(215);\n\nvar Eventful = __webpack_require__(22);\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n/***/ }),\n/* 187 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(0);\n\nvar _config = __webpack_require__(32);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = __webpack_require__(71);\n\nvar Pattern = __webpack_require__(44);\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n/***/ }),\n/* 188 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _config = __webpack_require__(32);\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = __webpack_require__(0);\n\nvar log = __webpack_require__(26);\n\nvar BoundingRect = __webpack_require__(8);\n\nvar timsort = __webpack_require__(43);\n\nvar Layer = __webpack_require__(187);\n\nvar requestAnimationFrame = __webpack_require__(64);\n\nvar Image = __webpack_require__(20);\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n/***/ }),\n/* 189 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(0);\n\nvar env = __webpack_require__(3);\n\nvar Group = __webpack_require__(25);\n\nvar timsort = __webpack_require__(43);\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n/***/ }),\n/* 190 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar util = __webpack_require__(0);\n\nvar _event = __webpack_require__(19);\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = __webpack_require__(64);\n\nvar Animator = __webpack_require__(63);\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n/***/ }),\n/* 191 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar easingFuncs = __webpack_require__(192);\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n/***/ }),\n/* 192 */\n/***/ (function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n/***/ }),\n/* 193 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _util = __webpack_require__(65);\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 194 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar curve = __webpack_require__(18);\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 195 */\n/***/ (function(module, exports) {\n\n/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 196 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(17);\n\nvar line = __webpack_require__(195);\n\nvar cubic = __webpack_require__(194);\n\nvar quadratic = __webpack_require__(197);\n\nvar arc = __webpack_require__(193);\n\nvar _util = __webpack_require__(65);\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = __webpack_require__(18);\n\nvar windingLine = __webpack_require__(198);\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 197 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _curve = __webpack_require__(18);\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n/***/ }),\n/* 198 */\n/***/ (function(module, exports) {\n\nfunction windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n/***/ }),\n/* 199 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar eventUtil = __webpack_require__(19);\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n/***/ }),\n/* 200 */\n/***/ (function(module, exports) {\n\n// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 201 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar vec2 = __webpack_require__(4);\n\nvar curve = __webpack_require__(18);\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n/***/ }),\n/* 202 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _event = __webpack_require__(19);\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = __webpack_require__(0);\n\nvar Eventful = __webpack_require__(22);\n\nvar env = __webpack_require__(3);\n\nvar GestureMgr = __webpack_require__(199);\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n/***/ }),\n/* 203 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrUtil = __webpack_require__(0);\n\nexports.util = zrUtil;\n\nvar matrix = __webpack_require__(13);\n\nexports.matrix = matrix;\n\nvar vector = __webpack_require__(4);\n\nexports.vector = vector;\n\nvar colorTool = __webpack_require__(16);\n\nexports.color = colorTool;\n\nvar pathTool = __webpack_require__(85);\n\nexports.path = pathTool;\n\nvar _Group = __webpack_require__(25);\n\nexports.Group = _Group;\n\nvar _Path = __webpack_require__(1);\n\nexports.Path = _Path;\n\nvar _Image = __webpack_require__(20);\n\nexports.Image = _Image;\n\nvar _CompoundPath = __webpack_require__(68);\n\nexports.CompoundPath = _CompoundPath;\n\nvar _Text = __webpack_require__(21);\n\nexports.Text = _Text;\n\nvar _Arc = __webpack_require__(75);\n\nexports.Arc = _Arc;\n\nvar _BezierCurve = __webpack_require__(76);\n\nexports.BezierCurve = _BezierCurve;\n\nvar _Circle = __webpack_require__(77);\n\nexports.Circle = _Circle;\n\nvar _Droplet = __webpack_require__(207);\n\nexports.Droplet = _Droplet;\n\nvar _Ellipse = __webpack_require__(208);\n\nexports.Ellipse = _Ellipse;\n\nvar _Heart = __webpack_require__(209);\n\nexports.Heart = _Heart;\n\nvar _Isogon = __webpack_require__(210);\n\nexports.Isogon = _Isogon;\n\nvar _Line = __webpack_require__(78);\n\nexports.Line = _Line;\n\nvar _Polygon = __webpack_require__(79);\n\nexports.Polygon = _Polygon;\n\nvar _Polyline = __webpack_require__(80);\n\nexports.Polyline = _Polyline;\n\nvar _Rect = __webpack_require__(81);\n\nexports.Rect = _Rect;\n\nvar _Ring = __webpack_require__(82);\n\nexports.Ring = _Ring;\n\nvar _Rose = __webpack_require__(211);\n\nexports.Rose = _Rose;\n\nvar _Sector = __webpack_require__(83);\n\nexports.Sector = _Sector;\n\nvar _Star = __webpack_require__(212);\n\nexports.Star = _Star;\n\nvar _Trochoid = __webpack_require__(213);\n\nexports.Trochoid = _Trochoid;\n\nvar _LinearGradient = __webpack_require__(69);\n\nexports.LinearGradient = _LinearGradient;\n\nvar _RadialGradient = __webpack_require__(70);\n\nexports.RadialGradient = _RadialGradient;\n\nvar _Pattern = __webpack_require__(44);\n\nexports.Pattern = _Pattern;\n\nvar _BoundingRect = __webpack_require__(8);\n\nexports.BoundingRect = _BoundingRect;\n\n/***/ }),\n/* 204 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(3);\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 205 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(4);\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 206 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _vector = __webpack_require__(4);\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 207 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 水滴形状\n * @module zrender/graphic/shape/Droplet\n */\nvar _default = Path.extend({\n  type: 'droplet',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y + a);\n    ctx.bezierCurveTo(x + a, y + a, x + a * 3 / 2, y - a / 3, x, y - b);\n    ctx.bezierCurveTo(x - a * 3 / 2, y - a / 3, x - a, y + a, x, y + a);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 208 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 椭圆形状\n * @module zrender/graphic/shape/Ellipse\n */\nvar _default = Path.extend({\n  type: 'ellipse',\n  shape: {\n    cx: 0,\n    cy: 0,\n    rx: 0,\n    ry: 0\n  },\n  buildPath: function (ctx, shape) {\n    var k = 0.5522848;\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.rx;\n    var b = shape.ry;\n    var ox = a * k; // 水平控制点偏移量\n\n    var oy = b * k; // 垂直控制点偏移量\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\n\n    ctx.moveTo(x - a, y);\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 209 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 心形\n * @module zrender/graphic/shape/Heart\n */\nvar _default = Path.extend({\n  type: 'heart',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(x + a / 2, y - b * 2 / 3, x + a * 2, y + b / 3, x, y + b);\n    ctx.bezierCurveTo(x - a * 2, y + b / 3, x - a / 2, y - b * 2 / 3, x, y);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 210 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 正多边形\n * @module zrender/shape/Isogon\n */\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar _default = Path.extend({\n  type: 'isogon',\n  shape: {\n    x: 0,\n    y: 0,\n    r: 0,\n    n: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 211 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 玫瑰线\n * @module zrender/graphic/shape/Rose\n */\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar radian = Math.PI / 180;\n\nvar _default = Path.extend({\n  type: 'rose',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: [],\n    k: 0,\n    n: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x;\n    var y;\n    var R = shape.r;\n    var r;\n    var k = shape.k;\n    var n = shape.n;\n    var x0 = shape.cx;\n    var y0 = shape.cy;\n    ctx.moveTo(x0, y0);\n\n    for (var i = 0, len = R.length; i < len; i++) {\n      r = R[i];\n\n      for (var j = 0; j <= 360 * n; j++) {\n        x = r * sin(k / n * j % 360 * radian) * cos(j * radian) + x0;\n        y = r * sin(k / n * j % 360 * radian) * sin(j * radian) + y0;\n        ctx.lineTo(x, y);\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 212 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * n角星（n>3）\n * @module zrender/graphic/shape/Star\n */\nvar PI = Math.PI;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'star',\n  shape: {\n    cx: 0,\n    cy: 0,\n    n: 3,\n    r0: null,\n    r: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = shape.r;\n    var r0 = shape.r0; // 如果未指定内部顶点外接圆半径，则自动计算\n\n    if (r0 == null) {\n      r0 = n > 4 // 相隔的外部顶点的连线的交点，\n      // 被取为内部交点，以此计算r0\n      ? r * cos(2 * PI / n) / cos(PI / n) // 二三四角星的特殊处理\n      : r / 3;\n    }\n\n    var dStep = PI / n;\n    var deg = -PI / 2;\n    var xStart = x + r * cos(deg);\n    var yStart = y + r * sin(deg);\n    deg += dStep; // 记录边界点，用于判断inside\n\n    ctx.moveTo(xStart, yStart);\n\n    for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\n      ri = i % 2 === 0 ? r0 : r;\n      ctx.lineTo(x + ri * cos(deg), y + ri * sin(deg));\n      deg += dStep;\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 213 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Path = __webpack_require__(1);\n\n/**\n * 内外旋轮曲线\n * @module zrender/graphic/shape/Trochold\n */\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'trochoid',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0,\n    d: 0,\n    location: 'out'\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var R = shape.r;\n    var r = shape.r0;\n    var d = shape.d;\n    var offsetX = shape.cx;\n    var offsetY = shape.cy;\n    var delta = shape.location == 'out' ? 1 : -1;\n\n    if (shape.location && R <= r) {\n      return;\n    }\n\n    var num = 0;\n    var i = 1;\n    var theta;\n    x1 = (R + delta * r) * cos(0) - delta * d * cos(0) + offsetX;\n    y1 = (R + delta * r) * sin(0) - d * sin(0) + offsetY;\n    ctx.moveTo(x1, y1); // 计算结束时的i\n\n    do {\n      num++;\n    } while (r * num % (R + delta * r) !== 0);\n\n    do {\n      theta = Math.PI / 180 * i;\n      x2 = (R + delta * r) * cos(theta) - delta * d * cos((R / r + delta) * theta) + offsetX;\n      y2 = (R + delta * r) * sin(theta) - d * sin((R / r + delta) * theta) + offsetY;\n      ctx.lineTo(x2, y2);\n      i++;\n    } while (i <= r * num / (R + delta * r) * 360);\n  }\n});\n\nmodule.exports = _default;\n\n/***/ }),\n/* 214 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Animator = __webpack_require__(63);\n\nvar log = __webpack_require__(26);\n\nvar _util = __webpack_require__(0);\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n/***/ }),\n/* 215 */\n/***/ (function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n/***/ }),\n/* 216 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar matrix = __webpack_require__(13);\n\nvar vector = __webpack_require__(4);\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n/***/ }),\n/* 217 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar _core = __webpack_require__(46);\n\nvar createElement = _core.createElement;\n\nvar util = __webpack_require__(0);\n\nvar each = util.each;\n\nvar zrLog = __webpack_require__(26);\n\nvar Path = __webpack_require__(1);\n\nvar ZImage = __webpack_require__(20);\n\nvar ZText = __webpack_require__(21);\n\nvar arrayDiff = __webpack_require__(200);\n\nvar GradientManager = __webpack_require__(219);\n\nvar ClippathManager = __webpack_require__(218);\n\nvar _graphic = __webpack_require__(47);\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n/***/ }),\n/* 218 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(84);\n\nvar zrUtil = __webpack_require__(0);\n\nvar matrix = __webpack_require__(13);\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 219 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar Definable = __webpack_require__(84);\n\nvar zrUtil = __webpack_require__(0);\n\nvar zrLog = __webpack_require__(26);\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n/***/ }),\n/* 220 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(47);\n\nvar _zrender = __webpack_require__(48);\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(217);\n\nregisterPainter('svg', Painter);\n\n/***/ }),\n/* 221 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar PathProxy = __webpack_require__(17);\n\nvar _vector = __webpack_require__(4);\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n/***/ }),\n/* 222 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar zrLog = __webpack_require__(26);\n\nvar vmlCore = __webpack_require__(86);\n\nvar _util = __webpack_require__(0);\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n/***/ }),\n/* 223 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar env = __webpack_require__(3);\n\nvar _vector = __webpack_require__(4);\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = __webpack_require__(8);\n\nvar colorTool = __webpack_require__(16);\n\nvar textContain = __webpack_require__(11);\n\nvar textHelper = __webpack_require__(35);\n\nvar RectText = __webpack_require__(74);\n\nvar Displayable = __webpack_require__(33);\n\nvar ZImage = __webpack_require__(20);\n\nvar Text = __webpack_require__(21);\n\nvar Path = __webpack_require__(1);\n\nvar PathProxy = __webpack_require__(17);\n\nvar Gradient = __webpack_require__(34);\n\nvar vmlCore = __webpack_require__(86);\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n/***/ }),\n/* 224 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(223);\n\nvar _zrender = __webpack_require__(48);\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = __webpack_require__(222);\n\nregisterPainter('vml', Painter);\n\n/***/ }),\n/* 225 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 226 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(184)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.fa9f690ac68ea160a20d.js","/**\n * @module zrender/core/util\n */\n// 用于处理merge时无法遍历Date等对象的问题\nvar BUILTIN_OBJECT = {\n  '[object Function]': 1,\n  '[object RegExp]': 1,\n  '[object Date]': 1,\n  '[object Error]': 1,\n  '[object CanvasGradient]': 1,\n  '[object CanvasPattern]': 1,\n  // For node-canvas\n  '[object Image]': 1,\n  '[object Canvas]': 1\n};\nvar TYPED_ARRAY = {\n  '[object Int8Array]': 1,\n  '[object Uint8Array]': 1,\n  '[object Uint8ClampedArray]': 1,\n  '[object Int16Array]': 1,\n  '[object Uint16Array]': 1,\n  '[object Int32Array]': 1,\n  '[object Uint32Array]': 1,\n  '[object Float32Array]': 1,\n  '[object Float64Array]': 1\n};\nvar objToString = Object.prototype.toString;\nvar arrayProto = Array.prototype;\nvar nativeForEach = arrayProto.forEach;\nvar nativeFilter = arrayProto.filter;\nvar nativeSlice = arrayProto.slice;\nvar nativeMap = arrayProto.map;\nvar nativeReduce = arrayProto.reduce; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * Those data types can be cloned:\n *     Plain object, Array, TypedArray, number, string, null, undefined.\n * Those data types will be assgined using the orginal data:\n *     BUILTIN_OBJECT\n * Instance of user defined class will be cloned to a plain object, without\n * properties in prototype.\n * Other data types is not supported (not sure what will happen).\n *\n * Caution: do not support clone Date, for performance consideration.\n * (There might be a large number of date in `series.data`).\n * So date should not be modified in and out of echarts.\n *\n * @param {*} source\n * @return {*} new\n */\n\n\nfunction clone(source) {\n  if (source == null || typeof source != 'object') {\n    return source;\n  }\n\n  var result = source;\n  var typeStr = objToString.call(source);\n\n  if (typeStr === '[object Array]') {\n    result = [];\n\n    for (var i = 0, len = source.length; i < len; i++) {\n      result[i] = clone(source[i]);\n    }\n  } else if (TYPED_ARRAY[typeStr]) {\n    var Ctor = source.constructor;\n\n    if (source.constructor.from) {\n      result = Ctor.from(source);\n    } else {\n      result = new Ctor(source.length);\n\n      for (var i = 0, len = source.length; i < len; i++) {\n        result[i] = clone(source[i]);\n      }\n    }\n  } else if (!BUILTIN_OBJECT[typeStr] && !isPrimitive(source) && !isDom(source)) {\n    result = {};\n\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) {\n        result[key] = clone(source[key]);\n      }\n    }\n  }\n\n  return result;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overwrite=false]\n */\n\n\nfunction merge(target, source, overwrite) {\n  // We should escapse that source is string\n  // and enter for ... in ...\n  if (!isObject(source) || !isObject(target)) {\n    return overwrite ? clone(source) : target;\n  }\n\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      var targetProp = target[key];\n      var sourceProp = source[key];\n\n      if (isObject(sourceProp) && isObject(targetProp) && !isArray(sourceProp) && !isArray(targetProp) && !isDom(sourceProp) && !isDom(targetProp) && !isBuiltInObject(sourceProp) && !isBuiltInObject(targetProp) && !isPrimitive(sourceProp) && !isPrimitive(targetProp)) {\n        // 如果需要递归覆盖，就递归调用merge\n        merge(targetProp, sourceProp, overwrite);\n      } else if (overwrite || !(key in target)) {\n        // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n        // NOTE，在 target[key] 不存在的时候也是直接覆盖\n        target[key] = clone(source[key], true);\n      }\n    }\n  }\n\n  return target;\n}\n/**\n * @param {Array} targetAndSources The first item is target, and the rests are source.\n * @param {boolean} [overwrite=false]\n * @return {*} target\n */\n\n\nfunction mergeAll(targetAndSources, overwrite) {\n  var result = targetAndSources[0];\n\n  for (var i = 1, len = targetAndSources.length; i < len; i++) {\n    result = merge(result, targetAndSources[i], overwrite);\n  }\n\n  return result;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @memberOf module:zrender/core/util\n */\n\n\nfunction extend(target, source) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/**\n * @param {*} target\n * @param {*} source\n * @param {boolean} [overlay=false]\n * @memberOf module:zrender/core/util\n */\n\n\nfunction defaults(target, source, overlay) {\n  for (var key in source) {\n    if (source.hasOwnProperty(key) && (overlay ? source[key] != null : target[key] == null)) {\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar createCanvas = function () {\n  return methods.createCanvas();\n};\n\nmethods.createCanvas = function () {\n  return document.createElement('canvas');\n}; // FIXME\n\n\nvar _ctx;\n\nfunction getContext() {\n  if (!_ctx) {\n    // Use util.createCanvas instead of createCanvas\n    // because createCanvas may be overwritten in different environment\n    _ctx = createCanvas().getContext('2d');\n  }\n\n  return _ctx;\n}\n/**\n * 查询数组中元素的index\n * @memberOf module:zrender/core/util\n */\n\n\nfunction indexOf(array, value) {\n  if (array) {\n    if (array.indexOf) {\n      return array.indexOf(value);\n    }\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (array[i] === value) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\n/**\n * 构造类继承关系\n *\n * @memberOf module:zrender/core/util\n * @param {Function} clazz 源类\n * @param {Function} baseClazz 基类\n */\n\n\nfunction inherits(clazz, baseClazz) {\n  var clazzPrototype = clazz.prototype;\n\n  function F() {}\n\n  F.prototype = baseClazz.prototype;\n  clazz.prototype = new F();\n\n  for (var prop in clazzPrototype) {\n    clazz.prototype[prop] = clazzPrototype[prop];\n  }\n\n  clazz.prototype.constructor = clazz;\n  clazz.superClass = baseClazz;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Object|Function} target\n * @param {Object|Function} sorce\n * @param {boolean} overlay\n */\n\n\nfunction mixin(target, source, overlay) {\n  target = 'prototype' in target ? target.prototype : target;\n  source = 'prototype' in source ? source.prototype : source;\n  defaults(target, source, overlay);\n}\n/**\n * Consider typed array.\n * @param {Array|TypedArray} data\n */\n\n\nfunction isArrayLike(data) {\n  if (!data) {\n    return;\n  }\n\n  if (typeof data == 'string') {\n    return false;\n  }\n\n  return typeof data.length == 'number';\n}\n/**\n * 数组或对象遍历\n * @memberOf module:zrender/core/util\n * @param {Object|Array} obj\n * @param {Function} cb\n * @param {*} [context]\n */\n\n\nfunction each(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.forEach && obj.forEach === nativeForEach) {\n    obj.forEach(cb, context);\n  } else if (obj.length === +obj.length) {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      cb.call(context, obj[i], i, obj);\n    }\n  } else {\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        cb.call(context, obj[key], key, obj);\n      }\n    }\n  }\n}\n/**\n * 数组映射\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction map(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.map && obj.map === nativeMap) {\n    return obj.map(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      result.push(cb.call(context, obj[i], i, obj));\n    }\n\n    return result;\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {Object} [memo]\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction reduce(obj, cb, memo, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.reduce && obj.reduce === nativeReduce) {\n    return obj.reduce(cb, memo, context);\n  } else {\n    for (var i = 0, len = obj.length; i < len; i++) {\n      memo = cb.call(context, memo, obj[i], i, obj);\n    }\n\n    return memo;\n  }\n}\n/**\n * 数组过滤\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {Array}\n */\n\n\nfunction filter(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  if (obj.filter && obj.filter === nativeFilter) {\n    return obj.filter(cb, context);\n  } else {\n    var result = [];\n\n    for (var i = 0, len = obj.length; i < len; i++) {\n      if (cb.call(context, obj[i], i, obj)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * 数组项查找\n * @memberOf module:zrender/core/util\n * @param {Array} obj\n * @param {Function} cb\n * @param {*} [context]\n * @return {*}\n */\n\n\nfunction find(obj, cb, context) {\n  if (!(obj && cb)) {\n    return;\n  }\n\n  for (var i = 0, len = obj.length; i < len; i++) {\n    if (cb.call(context, obj[i], i, obj)) {\n      return obj[i];\n    }\n  }\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @param {*} context\n * @return {Function}\n */\n\n\nfunction bind(func, context) {\n  var args = nativeSlice.call(arguments, 2);\n  return function () {\n    return func.apply(context, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Function} func\n * @return {Function}\n */\n\n\nfunction curry(func) {\n  var args = nativeSlice.call(arguments, 1);\n  return function () {\n    return func.apply(this, args.concat(nativeSlice.call(arguments)));\n  };\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isArray(value) {\n  return objToString.call(value) === '[object Array]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isString(value) {\n  return objToString.call(value) === '[object String]';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return type === 'function' || !!value && type == 'object';\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isBuiltInObject(value) {\n  return !!BUILTIN_OBJECT[objToString.call(value)];\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction isDom(value) {\n  return typeof value === 'object' && typeof value.nodeType === 'number' && typeof value.ownerDocument === 'object';\n}\n/**\n * Whether is exactly NaN. Notice isNaN('a') returns true.\n * @param {*} value\n * @return {boolean}\n */\n\n\nfunction eqNaN(value) {\n  return value !== value;\n}\n/**\n * If value1 is not null, then return value1, otherwise judget rest of values.\n * Low performance.\n * @memberOf module:zrender/core/util\n * @return {*} Final value\n */\n\n\nfunction retrieve(values) {\n  for (var i = 0, len = arguments.length; i < len; i++) {\n    if (arguments[i] != null) {\n      return arguments[i];\n    }\n  }\n}\n\nfunction retrieve2(value0, value1) {\n  return value0 != null ? value0 : value1;\n}\n\nfunction retrieve3(value0, value1, value2) {\n  return value0 != null ? value0 : value1 != null ? value1 : value2;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {Array} arr\n * @param {number} startIndex\n * @param {number} endIndex\n * @return {Array}\n */\n\n\nfunction slice() {\n  return Function.call.apply(nativeSlice, arguments);\n}\n/**\n * Normalize css liked array configuration\n * e.g.\n *  3 => [3, 3, 3, 3]\n *  [4, 2] => [4, 2, 4, 2]\n *  [4, 3, 2] => [4, 3, 2, 3]\n * @param {number|Array.<number>} val\n * @return {Array.<number>}\n */\n\n\nfunction normalizeCssArray(val) {\n  if (typeof val === 'number') {\n    return [val, val, val, val];\n  }\n\n  var len = val.length;\n\n  if (len === 2) {\n    // vertical | horizontal\n    return [val[0], val[1], val[0], val[1]];\n  } else if (len === 3) {\n    // top | horizontal | bottom\n    return [val[0], val[1], val[2], val[1]];\n  }\n\n  return val;\n}\n/**\n * @memberOf module:zrender/core/util\n * @param {boolean} condition\n * @param {string} message\n */\n\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar primitiveKey = '__ec_primitive__';\n/**\n * Set an object as primitive to be ignored traversing children in clone or merge\n */\n\nfunction setAsPrimitive(obj) {\n  obj[primitiveKey] = true;\n}\n\nfunction isPrimitive(obj) {\n  return obj[primitiveKey];\n}\n/**\n * @constructor\n * @param {Object} obj Only apply `ownProperty`.\n */\n\n\nfunction HashMap(obj) {\n  obj && each(obj, function (value, key) {\n    this.set(key, value);\n  }, this);\n} // Add prefix to avoid conflict with Object.prototype.\n\n\nvar HASH_MAP_PREFIX = '_ec_';\nvar HASH_MAP_PREFIX_LENGTH = 4;\nHashMap.prototype = {\n  constructor: HashMap,\n  // Do not provide `has` method to avoid defining what is `has`.\n  // (We usually treat `null` and `undefined` as the same, different\n  // from ES6 Map).\n  get: function (key) {\n    return this[HASH_MAP_PREFIX + key];\n  },\n  set: function (key, value) {\n    this[HASH_MAP_PREFIX + key] = value; // Comparing with invocation chaining, `return value` is more commonly\n    // used in this case: `var someVal = map.set('a', genVal());`\n\n    return value;\n  },\n  // Although util.each can be performed on this hashMap directly, user\n  // should not use the exposed keys, who are prefixed.\n  each: function (cb, context) {\n    context !== void 0 && (cb = bind(cb, context));\n\n    for (var prefixedKey in this) {\n      this.hasOwnProperty(prefixedKey) && cb(this[prefixedKey], prefixedKey.slice(HASH_MAP_PREFIX_LENGTH));\n    }\n  },\n  // Do not use this method if performance sensitive.\n  removeKey: function (key) {\n    delete this[HASH_MAP_PREFIX + key];\n  }\n};\n\nfunction createHashMap(obj) {\n  return new HashMap(obj);\n}\n\nfunction noop() {}\n\nexports.$override = $override;\nexports.clone = clone;\nexports.merge = merge;\nexports.mergeAll = mergeAll;\nexports.extend = extend;\nexports.defaults = defaults;\nexports.createCanvas = createCanvas;\nexports.getContext = getContext;\nexports.indexOf = indexOf;\nexports.inherits = inherits;\nexports.mixin = mixin;\nexports.isArrayLike = isArrayLike;\nexports.each = each;\nexports.map = map;\nexports.reduce = reduce;\nexports.filter = filter;\nexports.find = find;\nexports.bind = bind;\nexports.curry = curry;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isString = isString;\nexports.isObject = isObject;\nexports.isBuiltInObject = isBuiltInObject;\nexports.isDom = isDom;\nexports.eqNaN = eqNaN;\nexports.retrieve = retrieve;\nexports.retrieve2 = retrieve2;\nexports.retrieve3 = retrieve3;\nexports.slice = slice;\nexports.normalizeCssArray = normalizeCssArray;\nexports.assert = assert;\nexports.setAsPrimitive = setAsPrimitive;\nexports.isPrimitive = isPrimitive;\nexports.createHashMap = createHashMap;\nexports.noop = noop;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 0\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar pathContain = require(\"../contain/path\");\n\nvar Pattern = require(\"./Pattern\");\n\nvar getCanvasPattern = Pattern.prototype.getCanvasPattern;\nvar abs = Math.abs;\nvar pathProxyForDraw = new PathProxy(true);\n/**\n * @alias module:zrender/graphic/Path\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\n\nfunction Path(opts) {\n  Displayable.call(this, opts);\n  /**\n   * @type {module:zrender/core/PathProxy}\n   * @readOnly\n   */\n\n  this.path = null;\n}\n\nPath.prototype = {\n  constructor: Path,\n  type: 'path',\n  __dirtyPath: true,\n  strokeContainThreshold: 5,\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var path = this.path || pathProxyForDraw;\n    var hasStroke = style.hasStroke();\n    var hasFill = style.hasFill();\n    var fill = style.fill;\n    var stroke = style.stroke;\n    var hasFillGradient = hasFill && !!fill.colorStops;\n    var hasStrokeGradient = hasStroke && !!stroke.colorStops;\n    var hasFillPattern = hasFill && !!fill.image;\n    var hasStrokePattern = hasStroke && !!stroke.image;\n    style.bind(ctx, this, prevEl);\n    this.setTransform(ctx);\n\n    if (this.__dirty) {\n      var rect; // Update gradient because bounding rect may changed\n\n      if (hasFillGradient) {\n        rect = rect || this.getBoundingRect();\n        this._fillGradient = style.getGradient(ctx, fill, rect);\n      }\n\n      if (hasStrokeGradient) {\n        rect = rect || this.getBoundingRect();\n        this._strokeGradient = style.getGradient(ctx, stroke, rect);\n      }\n    } // Use the gradient or pattern\n\n\n    if (hasFillGradient) {\n      // PENDING If may have affect the state\n      ctx.fillStyle = this._fillGradient;\n    } else if (hasFillPattern) {\n      ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n    }\n\n    if (hasStrokeGradient) {\n      ctx.strokeStyle = this._strokeGradient;\n    } else if (hasStrokePattern) {\n      ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n    }\n\n    var lineDash = style.lineDash;\n    var lineDashOffset = style.lineDashOffset;\n    var ctxLineDash = !!ctx.setLineDash; // Update path sx, sy\n\n    var scale = this.getGlobalScale();\n    path.setScale(scale[0], scale[1]); // Proxy context\n    // Rebuild path in following 2 cases\n    // 1. Path is dirty\n    // 2. Path needs javascript implemented lineDash stroking.\n    //    In this case, lineDash information will not be saved in PathProxy\n\n    if (this.__dirtyPath || lineDash && !ctxLineDash && hasStroke) {\n      path.beginPath(ctx); // Setting line dash before build path\n\n      if (lineDash && !ctxLineDash) {\n        path.setLineDash(lineDash);\n        path.setLineDashOffset(lineDashOffset);\n      }\n\n      this.buildPath(path, this.shape, false); // Clear path dirty flag\n\n      if (this.path) {\n        this.__dirtyPath = false;\n      }\n    } else {\n      // Replay path building\n      ctx.beginPath();\n      this.path.rebuildPath(ctx);\n    }\n\n    hasFill && path.fill(ctx);\n\n    if (lineDash && ctxLineDash) {\n      ctx.setLineDash(lineDash);\n      ctx.lineDashOffset = lineDashOffset;\n    }\n\n    hasStroke && path.stroke(ctx);\n\n    if (lineDash && ctxLineDash) {\n      // PENDING\n      // Remove lineDash\n      ctx.setLineDash([]);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n  // Like in circle\n  buildPath: function (ctx, shapeCfg, inBundle) {},\n  createPathProxy: function () {\n    this.path = new PathProxy();\n  },\n  getBoundingRect: function () {\n    var rect = this._rect;\n    var style = this.style;\n    var needsUpdateRect = !rect;\n\n    if (needsUpdateRect) {\n      var path = this.path;\n\n      if (!path) {\n        // Create path on demand.\n        path = this.path = new PathProxy();\n      }\n\n      if (this.__dirtyPath) {\n        path.beginPath();\n        this.buildPath(path, this.shape, false);\n      }\n\n      rect = path.getBoundingRect();\n    }\n\n    this._rect = rect;\n\n    if (style.hasStroke()) {\n      // Needs update rect with stroke lineWidth when\n      // 1. Element changes scale or lineWidth\n      // 2. Shape is changed\n      var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n\n      if (this.__dirty || needsUpdateRect) {\n        rectWithStroke.copy(rect); // FIXME Must after updateTransform\n\n        var w = style.lineWidth; // PENDING, Min line width is needed when line is horizontal or vertical\n\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Only add extra hover lineWidth when there are no fill\n\n        if (!style.hasFill()) {\n          w = Math.max(w, this.strokeContainThreshold || 4);\n        } // Consider line width\n        // Line scale can't be 0;\n\n\n        if (lineScale > 1e-10) {\n          rectWithStroke.width += w / lineScale;\n          rectWithStroke.height += w / lineScale;\n          rectWithStroke.x -= w / lineScale / 2;\n          rectWithStroke.y -= w / lineScale / 2;\n        }\n      } // Return rect with stroke\n\n\n      return rectWithStroke;\n    }\n\n    return rect;\n  },\n  contain: function (x, y) {\n    var localPos = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    var style = this.style;\n    x = localPos[0];\n    y = localPos[1];\n\n    if (rect.contain(x, y)) {\n      var pathData = this.path.data;\n\n      if (style.hasStroke()) {\n        var lineWidth = style.lineWidth;\n        var lineScale = style.strokeNoScale ? this.getLineScale() : 1; // Line scale can't be 0;\n\n        if (lineScale > 1e-10) {\n          // Only add extra hover lineWidth when there are no fill\n          if (!style.hasFill()) {\n            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n          }\n\n          if (pathContain.containStroke(pathData, lineWidth / lineScale, x, y)) {\n            return true;\n          }\n        }\n      }\n\n      if (style.hasFill()) {\n        return pathContain.contain(pathData, x, y);\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @param  {boolean} dirtyPath\n   */\n  dirty: function (dirtyPath) {\n    if (dirtyPath == null) {\n      dirtyPath = true;\n    } // Only mark dirty, not mark clean\n\n\n    if (dirtyPath) {\n      this.__dirtyPath = dirtyPath;\n      this._rect = null;\n    }\n\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh(); // Used as a clipping path\n\n    if (this.__clipTarget) {\n      this.__clipTarget.dirty();\n    }\n  },\n\n  /**\n   * Alias for animate('shape')\n   * @param {boolean} loop\n   */\n  animateShape: function (loop) {\n    return this.animate('shape', loop);\n  },\n  // Overwrite attrKV\n  attrKV: function (key, value) {\n    // FIXME\n    if (key === 'shape') {\n      this.setShape(value);\n      this.__dirtyPath = true;\n      this._rect = null;\n    } else {\n      Displayable.prototype.attrKV.call(this, key, value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setShape: function (key, value) {\n    var shape = this.shape; // Path from string may not have shape\n\n    if (shape) {\n      if (zrUtil.isObject(key)) {\n        for (var name in key) {\n          if (key.hasOwnProperty(name)) {\n            shape[name] = key[name];\n          }\n        }\n      } else {\n        shape[key] = value;\n      }\n\n      this.dirty(true);\n    }\n\n    return this;\n  },\n  getLineScale: function () {\n    var m = this.transform; // Get the line scale.\n    // Determinant of `m` means how much the area is enlarged by the\n    // transformation. So its square root can be used as a scale factor\n    // for width.\n\n    return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10 ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1])) : 1;\n  }\n};\n/**\n * 扩展一个 Path element, 比如星形，圆等。\n * Extend a path element\n * @param {Object} props\n * @param {string} props.type Path type\n * @param {Function} props.init Initialize\n * @param {Function} props.buildPath Overwrite buildPath method\n * @param {Object} [props.style] Extended default style config\n * @param {Object} [props.shape] Extended default shape config\n */\n\nPath.extend = function (defaults) {\n  var Sub = function (opts) {\n    Path.call(this, opts);\n\n    if (defaults.style) {\n      // Extend default style\n      this.style.extendFrom(defaults.style, false);\n    } // Extend default shape\n\n\n    var defaultShape = defaults.shape;\n\n    if (defaultShape) {\n      this.shape = this.shape || {};\n      var thisShape = this.shape;\n\n      for (var name in defaultShape) {\n        if (!thisShape.hasOwnProperty(name) && defaultShape.hasOwnProperty(name)) {\n          thisShape[name] = defaultShape[name];\n        }\n      }\n    }\n\n    defaults.init && defaults.init.call(this, opts);\n  };\n\n  zrUtil.inherits(Sub, Path); // FIXME 不能 extend position, rotation 等引用对象\n\n  for (var name in defaults) {\n    // Extending prototype values and methods\n    if (name !== 'style' && name !== 'shape') {\n      Sub.prototype[name] = defaults[name];\n    }\n  }\n\n  return Sub;\n};\n\nzrUtil.inherits(Path, Displayable);\nvar _default = Path;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 1\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n    var parseClassType = ComponentModel.parseClassType;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    // FIXME\n    // necessary?\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n    var ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts(dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this, this._coordSysMgr);\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n\n        // ECharts instance can be used as value.\n        zrUtil.setAsPrimitive(this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n            var silent = this[OPTION_UPDATED].silent;\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n\n            flushPendingActions.call(this, silent);\n\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * Usage:\n     * chart.setOption(option, notMerge, lazyUpdate);\n     * chart.setOption(option, {\n     *     notMerge: ...,\n     *     lazyUpdate: ...,\n     *     silent: ...\n     * });\n     *\n     * @param {Object} option\n     * @param {Object|boolean} [opts] opts or notMerge.\n     * @param {boolean} [opts.notMerge=false]\n     * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        var silent;\n        if (zrUtil.isObject(notMerge)) {\n            lazyUpdate = notMerge.lazyUpdate;\n            silent = notMerge.silent;\n            notMerge = notMerge.notMerge;\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs, this.__lastOnlyGraphic);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = {silent: silent};\n            this[IN_MAIN_PROCESS] = false;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n\n            this[OPTION_UPDATED] = false;\n            this[IN_MAIN_PROCESS] = false;\n\n            flushPendingActions.call(this, silent);\n            triggerUpdatedEvent.call(this, silent);\n        }\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getDevicePixelRatio = function () {\n        return this._zr.painter.dpr || window.devicePixelRatio || 1;\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n    /**\n     * Get view of corresponding component model\n     * @param  {module:echarts/model/Component} componentModel\n     * @return {module:echarts/view/Component}\n     */\n    echartsProto.getViewOfComponentModel = function (componentModel) {\n        return this._componentsMap[componentModel.__viewId];\n    };\n\n    /**\n     * Get view of corresponding series model\n     * @param  {module:echarts/model/Series} seriesModel\n     * @return {module:echarts/view/Chart}\n     */\n    echartsProto.getViewOfSeriesModel = function (seriesModel) {\n        return this._chartsMap[seriesModel.__viewId];\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.profile && console.profile('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            each(postUpdateFuncs, function (func) {\n                func(ecModel, api);\n            });\n\n            // console.profile && console.profileEnd('update');\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload, true);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @private\n     */\n    function updateDirectly(ecIns, method, payload, mainType, subType) {\n        var ecModel = ecIns._model;\n\n        // broadcast\n        if (!mainType) {\n            each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n            return;\n        }\n\n        var query = {};\n        query[mainType + 'Id'] = payload[mainType + 'Id'];\n        query[mainType + 'Index'] = payload[mainType + 'Index'];\n        query[mainType + 'Name'] = payload[mainType + 'Name'];\n\n        var condition = {mainType: mainType, query: query};\n        subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n        // If dispatchAction before setOption, do nothing.\n        ecModel && ecModel.eachComponent(condition, function (model, index) {\n            callView(ecIns[\n                mainType === 'series' ? '_chartsMap' : '_componentsMap'\n            ][model.__viewId]);\n        }, ecIns);\n\n        function callView(view) {\n            view && view.__alive && view[method] && view[method](\n                view.__model, ecModel, ecIns._api, payload\n            );\n        }\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @param {boolean} [opts.silent=false]\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        var updateMethod = optionChanged ? 'prepareAndUpdate' : 'update';\n\n        updateMethods[updateMethod].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        var silent = opts && opts.silent;\n\n        flushPendingActions.call(this, silent);\n\n        triggerUpdatedEvent.call(this, silent);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n\n        triggerUpdatedEvent.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var payloadType = payload.type;\n        var escapeConnect = payload.escapeConnect;\n        var actionWrap = actions[payloadType];\n        var actionInfo = actionWrap.actionInfo;\n\n        var cptType = (actionInfo.update || 'update').split(':');\n        var updateMethod = cptType.pop();\n        cptType = cptType[0] != null && parseClassType(cptType[0]);\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n\n        each(payloads, function (batchItem) {\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model, this._api);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // light update does not perform data process, layout and visual.\n            if (isHighDown) {\n                // method, payload, mainType, subType\n                updateDirectly(this, updateMethod, batchItem, 'series');\n            }\n            else if (cptType) {\n                updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n            }\n        }, this);\n\n        if (updateMethod !== 'none' && !isHighDown && !cptType) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payloadType,\n                escapeConnect: escapeConnect,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    function triggerUpdatedEvent(silent) {\n        !silent && this.trigger('updated');\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Post render\n        each(postUpdateFuncs, function (func) {\n            func(ecModel, api);\n        });\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @param {object} layout\n     * @param {boolean} [excludesLayout]\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload, excludesLayout) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            (!excludesLayout || !visual.isLayout)\n                && visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Object} key: actionType.\n     * @inner\n     */\n    var actions = {};\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var postUpdateFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.5.2',\n        dependencies: {\n            zrender: '3.4.2'\n        }\n    };\n\n    function enableConnect(chart) {\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    if (event && event.escapeConnect) {\n                        return;\n                    }\n\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n    }\n\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom)\n                && dom.nodeName.toUpperCase() !== 'CANVAS'\n                && (\n                    (!dom.clientWidth && (!opts || opts.width == null))\n                    || (!dom.clientHeight && (!opts || opts.height == null))\n                )\n            ) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @DEPRECATED\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disconnect = echarts.disConnect;\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Register postUpdater\n     * @param {Function} postUpdateFunc\n     */\n    echarts.registerPostUpdate = function (postUpdateFunc) {\n        postUpdateFuncs.push(postUpdateFunc);\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        // Validate action type and event name.\n        zrUtil.assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts/*, superClass*/) {\n        // var Clazz = ComponentModel;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts/*, superClass*/) {\n        // var Clazz = ComponentView;\n        // if (superClass) {\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        // }\n        return ComponentView.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts/*, superClass*/) {\n        // var Clazz = SeriesModel;\n        // if (superClass) {\n        //     superClass = 'series.' + superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        // }\n        return SeriesModel.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts/*, superClass*/) {\n        // var Clazz = ChartView;\n        // if (superClass) {\n        //     superClass = superClass.replace('series.', '');\n        //     var classType = parseClassType(superClass);\n        //     Clazz = ChartView.getClass(classType.main, true);\n        // }\n        return ChartView.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    echarts.zrender = zrender;\n\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.Axis = require('./coord/Axis');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.throttle = throttle.throttle;\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone', 'merge'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    echarts.helper = require('./helper');\n\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 2\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\nvar env = {};\n\nif (typeof navigator === 'undefined') {\n  // In node\n  env = {\n    browser: {},\n    os: {},\n    node: true,\n    // Assume canvas is supported\n    canvasSupported: true,\n    svgSupported: true\n  };\n} else {\n  env = detect(navigator.userAgent);\n}\n\nvar _default = env; // Zepto.js\n// (c) 2010-2013 Thomas Fuchs\n// Zepto.js may be freely distributed under the MIT license.\n\nfunction detect(ua) {\n  var os = {};\n  var browser = {}; // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n  // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n  // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n  // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n  // var touchpad = webos && ua.match(/TouchPad/);\n  // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n  // var silk = ua.match(/Silk\\/([\\d._]+)/);\n  // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n  // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n  // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n  // var playbook = ua.match(/PlayBook/);\n  // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n\n  var firefox = ua.match(/Firefox\\/([\\d.]+)/); // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n  // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n\n  var ie = ua.match(/MSIE\\s([\\d.]+)/) // IE 11 Trident/7.0; rv:11.0\n  || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n  var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n  var weChat = /micromessenger/i.test(ua); // Todo: clean this up with a better OS/browser seperation:\n  // - discern (more) between multiple browsers on android\n  // - decide if kindle fire in silk mode is android or not\n  // - Firefox on Android doesn't specify the Android version\n  // - possibly devide in os, device and browser hashes\n  // if (browser.webkit = !!webkit) browser.version = webkit[1];\n  // if (android) os.android = true, os.version = android[2];\n  // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n  // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n  // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n  // if (webos) os.webos = true, os.version = webos[2];\n  // if (touchpad) os.touchpad = true;\n  // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n  // if (bb10) os.bb10 = true, os.version = bb10[2];\n  // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n  // if (playbook) browser.playbook = true;\n  // if (kindle) os.kindle = true, os.version = kindle[1];\n  // if (silk) browser.silk = true, browser.version = silk[1];\n  // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n  // if (chrome) browser.chrome = true, browser.version = chrome[1];\n\n  if (firefox) {\n    browser.firefox = true;\n    browser.version = firefox[1];\n  } // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n  // if (webview) browser.webview = true;\n\n\n  if (ie) {\n    browser.ie = true;\n    browser.version = ie[1];\n  }\n\n  if (edge) {\n    browser.edge = true;\n    browser.version = edge[1];\n  } // It is difficult to detect WeChat in Win Phone precisely, because ua can\n  // not be set on win phone. So we do not consider Win Phone.\n\n\n  if (weChat) {\n    browser.weChat = true;\n  } // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n  //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n  // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n  //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n  //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n\n  return {\n    browser: browser,\n    os: os,\n    node: false,\n    // 原生canvas支持，改极端点了\n    // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n    canvasSupported: !!document.createElement('canvas').getContext,\n    svgSupported: typeof SVGRect !== 'undefined',\n    // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n    // works on most browsers\n    // IE10/11 does not support touch event, and MS Edge supports them but not by\n    // default, so we dont check navigator.maxTouchPoints for them here.\n    touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n    // <http://caniuse.com/#search=pointer%20event>.\n    pointerEventsSupported: 'onpointerdown' in window // Firefox supports pointer but not by default, only MS browsers are reliable on pointer\n    // events currently. So we dont use that on other browsers unless tested sufficiently.\n    // Although IE 10 supports pointer event, it use old style and is different from the\n    // standard. So we exclude that. (IE 10 is hardly used on touch device)\n    && (browser.edge || browser.ie && browser.version >= 11)\n  };\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 3\n// module chunks = 0","var ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个向量\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @return {Vector2}\n */\n\nfunction create(x, y) {\n  var out = new ArrayCtor(2);\n\n  if (x == null) {\n    x = 0;\n  }\n\n  if (y == null) {\n    y = 0;\n  }\n\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * 复制向量数据\n * @param {Vector2} out\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction copy(out, v) {\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 克隆一个向量\n * @param {Vector2} v\n * @return {Vector2}\n */\n\n\nfunction clone(v) {\n  var out = new ArrayCtor(2);\n  out[0] = v[0];\n  out[1] = v[1];\n  return out;\n}\n/**\n * 设置向量的两个项\n * @param {Vector2} out\n * @param {number} a\n * @param {number} b\n * @return {Vector2} 结果\n */\n\n\nfunction set(out, a, b) {\n  out[0] = a;\n  out[1] = b;\n  return out;\n}\n/**\n * 向量相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction add(out, v1, v2) {\n  out[0] = v1[0] + v2[0];\n  out[1] = v1[1] + v2[1];\n  return out;\n}\n/**\n * 向量缩放后相加\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} a\n */\n\n\nfunction scaleAndAdd(out, v1, v2, a) {\n  out[0] = v1[0] + v2[0] * a;\n  out[1] = v1[1] + v2[1] * a;\n  return out;\n}\n/**\n * 向量相减\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction sub(out, v1, v2) {\n  out[0] = v1[0] - v2[0];\n  out[1] = v1[1] - v2[1];\n  return out;\n}\n/**\n * 向量长度\n * @param {Vector2} v\n * @return {number}\n */\n\n\nfunction len(v) {\n  return Math.sqrt(lenSquare(v));\n}\n\nvar length = len; // jshint ignore:line\n\n/**\n * 向量长度平方\n * @param {Vector2} v\n * @return {number}\n */\n\nfunction lenSquare(v) {\n  return v[0] * v[0] + v[1] * v[1];\n}\n\nvar lengthSquare = lenSquare;\n/**\n * 向量乘法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\nfunction mul(out, v1, v2) {\n  out[0] = v1[0] * v2[0];\n  out[1] = v1[1] * v2[1];\n  return out;\n}\n/**\n * 向量除法\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n */\n\n\nfunction div(out, v1, v2) {\n  out[0] = v1[0] / v2[0];\n  out[1] = v1[1] / v2[1];\n  return out;\n}\n/**\n * 向量点乘\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction dot(v1, v2) {\n  return v1[0] * v2[0] + v1[1] * v2[1];\n}\n/**\n * 向量缩放\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {number} s\n */\n\n\nfunction scale(out, v, s) {\n  out[0] = v[0] * s;\n  out[1] = v[1] * s;\n  return out;\n}\n/**\n * 向量归一化\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\n\nfunction normalize(out, v) {\n  var d = len(v);\n\n  if (d === 0) {\n    out[0] = 0;\n    out[1] = 0;\n  } else {\n    out[0] = v[0] / d;\n    out[1] = v[1] / d;\n  }\n\n  return out;\n}\n/**\n * 计算向量间距离\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\n\nfunction distance(v1, v2) {\n  return Math.sqrt((v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]));\n}\n\nvar dist = distance;\n/**\n * 向量距离平方\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @return {number}\n */\n\nfunction distanceSquare(v1, v2) {\n  return (v1[0] - v2[0]) * (v1[0] - v2[0]) + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n}\n\nvar distSquare = distanceSquare;\n/**\n * 求负向量\n * @param {Vector2} out\n * @param {Vector2} v\n */\n\nfunction negate(out, v) {\n  out[0] = -v[0];\n  out[1] = -v[1];\n  return out;\n}\n/**\n * 插值两个点\n * @param {Vector2} out\n * @param {Vector2} v1\n * @param {Vector2} v2\n * @param {number} t\n */\n\n\nfunction lerp(out, v1, v2, t) {\n  out[0] = v1[0] + t * (v2[0] - v1[0]);\n  out[1] = v1[1] + t * (v2[1] - v1[1]);\n  return out;\n}\n/**\n * 矩阵左乘向量\n * @param {Vector2} out\n * @param {Vector2} v\n * @param {Vector2} m\n */\n\n\nfunction applyTransform(out, v, m) {\n  var x = v[0];\n  var y = v[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * 求两个向量最小值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction min(out, v1, v2) {\n  out[0] = Math.min(v1[0], v2[0]);\n  out[1] = Math.min(v1[1], v2[1]);\n  return out;\n}\n/**\n * 求两个向量最大值\n * @param  {Vector2} out\n * @param  {Vector2} v1\n * @param  {Vector2} v2\n */\n\n\nfunction max(out, v1, v2) {\n  out[0] = Math.max(v1[0], v2[0]);\n  out[1] = Math.max(v1[1], v2[1]);\n  return out;\n}\n\nexports.create = create;\nexports.copy = copy;\nexports.clone = clone;\nexports.set = set;\nexports.add = add;\nexports.scaleAndAdd = scaleAndAdd;\nexports.sub = sub;\nexports.len = len;\nexports.length = length;\nexports.lenSquare = lenSquare;\nexports.lengthSquare = lengthSquare;\nexports.mul = mul;\nexports.div = div;\nexports.dot = dot;\nexports.scale = scale;\nexports.normalize = normalize;\nexports.distance = distance;\nexports.dist = dist;\nexports.distanceSquare = distanceSquare;\nexports.distSquare = distSquare;\nexports.negate = negate;\nexports.lerp = lerp;\nexports.applyTransform = applyTransform;\nexports.min = min;\nexports.max = max;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 4\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'offset', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time'\n            // spead up when using timestamp\n            && typeof value !== 'number'\n            && value != null\n            && value !== '-'\n        ) {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: this.seriesIndex,\n                seriesId: this.id,\n                seriesName: this.name,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-'; // name may be displayed on screen, so use '-'.\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * Enable property storage to any host object.\n     * Notice: Serialization is not supported.\n     *\n     * For example:\n     * var get = modelUitl.makeGetter();\n     *\n     * function some(hostObj) {\n     *      get(hostObj)._someProperty = 1212;\n     *      ...\n     * }\n     *\n     * @return {Function}\n     */\n    modelUtil.makeGetter = (function () {\n        var index = 0;\n        return function () {\n            var key = '\\0__ec_prop_getter_' + index++;\n            return function (hostObj) {\n                return hostObj[key] || (hostObj[key] = {});\n            };\n        };\n    })();\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, geoName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n     *        If nothing or null/undefined specified, return nothing.\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @param {Array.<string>} [opt.includeMainTypes]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = (parsedKey[2] || '').toLowerCase();\n\n            if (!mainType\n                || !queryType\n                || value == null\n                || (queryType === 'index' && value === 'none')\n                || (opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0)\n            ) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            if (queryType !== 'index' || value !== 'all') {\n                queryParam[queryType] = value;\n            }\n\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 5\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * (1) Fix rounding error of float numbers.\n     * (2) Support return string to avoid scientific notation like '3.5e-7'.\n     *\n     * @param {number} x\n     * @param {number} [precision]\n     * @param {boolean} [returnStr]\n     * @return {number|string}\n     */\n    number.round = function (x, precision, returnStr) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        x = (+x).toFixed(precision);\n        return returnStr ? x : +x;\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    /**\n     * @param {string|number} val\n     * @return {number}\n     */\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n\n        // Consider scientific notation: '3.4e-12' '3.4e+12'\n        var eIndex = str.indexOf('e');\n        if (eIndex > 0) {\n            var precision = +str.slice(eIndex + 1);\n            return precision < 0 ? -precision : 0;\n        }\n        else {\n            var dotIndex = str.indexOf('.');\n            return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n        }\n    };\n\n    /**\n     * Minimal dicernible data precisioin according to a single pixel.\n     *\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number} precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        // toFixed() digits argument must be between 0 and 20.\n        var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n        return !isFinite(precision) ? 20 : precision;\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    var TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n    /**\n     * @return {number} in minutes\n     */\n    number.getTimezoneOffset = function () {\n        return (new Date()).getTimezoneOffset();\n    };\n\n    /**\n     * @param {string|Date|number} value These values can be accepted:\n     *   + An instance of Date, represent a time in its own time zone.\n     *   + Or string in a subset of ISO 8601, only including:\n     *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n     *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n     *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n     *     all of which will be treated as local time if time zone is not specified\n     *     (see <https://momentjs.com/>).\n     *   + Or other string format, including (all of which will be treated as loacal time):\n     *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n     *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n     *   + a timestamp, which represent a time in UTC.\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Different browsers parse date in different way, so we parse it manually.\n            // Some other issues:\n            // new Date('1970-01-01') is UTC,\n            // new Date('1970/01/01') and new Date('1970-1-01') is local.\n            // See issue #3623\n            var match = TIME_REG.exec(value);\n\n            if (!match) {\n                // return Invalid Date.\n                return new Date(NaN);\n            }\n\n            var timezoneOffset = number.getTimezoneOffset();\n            var timeOffset = !match[8]\n                ? 0\n                : match[8].toUpperCase() === 'Z'\n                ? timezoneOffset\n                : +match[8].slice(0, 3) * 60 + timezoneOffset;\n\n            // match[n] can only be string or undefined.\n            // But take care of '12' + 1 => '121'.\n            return new Date(\n                +match[1],\n                +(match[2] || 1) - 1,\n                +match[3] || 1,\n                +match[4] || 0,\n                +(match[5] || 0) - timeOffset,\n                +match[6] || 0,\n                +match[7] || 0\n            );\n        }\n        else if (value == null) {\n            return new Date(NaN);\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     *\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, quantityExponent(val));\n    };\n\n    function quantityExponent(val) {\n        return Math.floor(Math.log(val) / Math.LN10);\n    }\n\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true,\n     * take ceiling if round = false. The primary observation is that the “nicest”\n     * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     *\n     * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n     *\n     * @param  {number} val Non-negative value.\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exponent = quantityExponent(val);\n        var exp10 = Math.pow(10, exponent);\n        var f = val / exp10; // 1 <= f < 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        val = nf * exp10;\n\n        // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n        // 20 is the uppper bound of toFixed.\n        return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    /**\n     * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n     * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n     * subtraction forces infinities to NaN\n     *\n     * @param {*} v\n     * @return {boolean}\n     */\n    number.isNumeric = function (v) {\n        return v - parseFloat(v) >= 0;\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 6\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            graphic.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element.\n     * This method can be called repeatly without side-effects.\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelOffset = labelModel.getShallow('offset');\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textOffset: labelOffset,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        // Do not check 'animation' property directly here. Consider this case:\n        // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n        // but its parent model (`seriesModel`) does.\n        var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(\n                    dataIndex,\n                    animatableModel.getAnimationDelayParams\n                        ? animatableModel.getAnimationDelayParams(el, dataIndex)\n                        : null\n                );\n            }\n            if (typeof duration === 'function') {\n                duration = duration(dataIndex);\n            }\n\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 7\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar matrix = require(\"./matrix\");\n\n/**\n * @module echarts/core/BoundingRect\n */\nvar v2ApplyTransform = vec2.applyTransform;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\n/**\n * @alias module:echarts/core/BoundingRect\n */\n\nfunction BoundingRect(x, y, width, height) {\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n  /**\n   * @type {number}\n   */\n\n\n  this.x = x;\n  /**\n   * @type {number}\n   */\n\n  this.y = y;\n  /**\n   * @type {number}\n   */\n\n  this.width = width;\n  /**\n   * @type {number}\n   */\n\n  this.height = height;\n}\n\nBoundingRect.prototype = {\n  constructor: BoundingRect,\n\n  /**\n   * @param {module:echarts/core/BoundingRect} other\n   */\n  union: function (other) {\n    var x = mathMin(other.x, this.x);\n    var y = mathMin(other.y, this.y);\n    this.width = mathMax(other.x + other.width, this.x + this.width) - x;\n    this.height = mathMax(other.y + other.height, this.y + this.height) - y;\n    this.x = x;\n    this.y = y;\n  },\n\n  /**\n   * @param {Array.<number>} m\n   * @methods\n   */\n  applyTransform: function () {\n    var lt = [];\n    var rb = [];\n    var lb = [];\n    var rt = [];\n    return function (m) {\n      // In case usage like this\n      // el.getBoundingRect().applyTransform(el.transform)\n      // And element has no transform\n      if (!m) {\n        return;\n      }\n\n      lt[0] = lb[0] = this.x;\n      lt[1] = rt[1] = this.y;\n      rb[0] = rt[0] = this.x + this.width;\n      rb[1] = lb[1] = this.y + this.height;\n      v2ApplyTransform(lt, lt, m);\n      v2ApplyTransform(rb, rb, m);\n      v2ApplyTransform(lb, lb, m);\n      v2ApplyTransform(rt, rt, m);\n      this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n      this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n      var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n      var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n      this.width = maxX - this.x;\n      this.height = maxY - this.y;\n    };\n  }(),\n\n  /**\n   * Calculate matrix of transforming from self to target rect\n   * @param  {module:zrender/core/BoundingRect} b\n   * @return {Array.<number>}\n   */\n  calculateTransform: function (b) {\n    var a = this;\n    var sx = b.width / a.width;\n    var sy = b.height / a.height;\n    var m = matrix.create(); // 矩阵右乘\n\n    matrix.translate(m, m, [-a.x, -a.y]);\n    matrix.scale(m, m, [sx, sy]);\n    matrix.translate(m, m, [b.x, b.y]);\n    return m;\n  },\n\n  /**\n   * @param {(module:echarts/core/BoundingRect|Object)} b\n   * @return {boolean}\n   */\n  intersect: function (b) {\n    if (!b) {\n      return false;\n    }\n\n    if (!(b instanceof BoundingRect)) {\n      // Normalize negative width/height.\n      b = BoundingRect.create(b);\n    }\n\n    var a = this;\n    var ax0 = a.x;\n    var ax1 = a.x + a.width;\n    var ay0 = a.y;\n    var ay1 = a.y + a.height;\n    var bx0 = b.x;\n    var bx1 = b.x + b.width;\n    var by0 = b.y;\n    var by1 = b.y + b.height;\n    return !(ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n  },\n  contain: function (x, y) {\n    var rect = this;\n    return x >= rect.x && x <= rect.x + rect.width && y >= rect.y && y <= rect.y + rect.height;\n  },\n\n  /**\n   * @return {module:echarts/core/BoundingRect}\n   */\n  clone: function () {\n    return new BoundingRect(this.x, this.y, this.width, this.height);\n  },\n\n  /**\n   * Copy from another rect\n   */\n  copy: function (other) {\n    this.x = other.x;\n    this.y = other.y;\n    this.width = other.width;\n    this.height = other.height;\n  },\n  plain: function () {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n};\n/**\n * @param {Object|module:zrender/core/BoundingRect} rect\n * @param {number} rect.x\n * @param {number} rect.y\n * @param {number} rect.width\n * @param {number} rect.height\n * @return {module:zrender/core/BoundingRect}\n */\n\nBoundingRect.create = function (rect) {\n  return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n};\n\nvar _default = BoundingRect;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 8\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n\n    /**\n     * 每三位默认加,格式化\n     * @param {string|number} x\n     * @return {string}\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    var encodeHTML = formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param {string} tpl\n     * @param {Array.<Object>|Object} paramsList\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList, encode) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            var val = wrapVar(alias, 0);\n            tpl = tpl.replace(wrapVar(alias), encode ? encodeHTML(val) : val);\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                var val = paramsList[seriesIdx][$vars[k]];\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    encode ? encodeHTML(val) : val\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n    /**\n     * simple Template formatter\n     *\n     * @param {string} tpl\n     * @param {Object} param\n     * @param {boolean} [encode=false]\n     * @return {string}\n     */\n    formatUtil.formatTplSimple = function (tpl, param, encode) {\n        zrUtil.each(param, function (value, key) {\n            tpl = tpl.replace(\n                '{' + key + '}',\n                encode ? encodeHTML(value) : value\n            );\n        });\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @param {boolean} [isUTC=false] Default in local time.\n     *           see `module:echarts/scale/Time`\n     *           and `module:echarts/util/number#parseDate`.\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value, isUTC) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var utc = isUTC ? 'UTC' : '';\n        var y = date['get' + utc + 'FullYear']();\n        var M = date['get' + utc + 'Month']() + 1;\n        var d = date['get' + utc + 'Date']();\n        var h = date['get' + utc + 'Hours']();\n        var m = date['get' + utc + 'Minutes']();\n        var s = date['get' + utc + 'Seconds']();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 9\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n    var env = require('zrender/lib/core/env');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (path == null) {\n                return this.option;\n            }\n\n            return doGet(\n                this.option,\n                this.parsePath(path),\n                !ignoreParent && getParent(this, path)\n            );\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = !ignoreParent && getParent(this, key);\n            if (val == null && parentModel) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string|Array.<string>} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = path == null\n                ? this.option\n                : doGet(this.option, path = this.parsePath(path));\n\n            var thisParentModel;\n            parentModel = parentModel || (\n                (thisParentModel = getParent(this, path))\n                    && thisParentModel.getModel(path)\n            );\n\n            return new Model(obj, parentModel, this.ecModel);\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        },\n\n        // If path is null/undefined, return null/undefined.\n        parsePath: function(path) {\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n            return path;\n        },\n\n        /**\n         * @param {Function} getParentMethod\n         *        param {Array.<string>|string} path\n         *        return {module:echarts/model/Model}\n         */\n        customizeGetParent: function (getParentMethod) {\n            clazzUtil.set(this, 'getParent', getParentMethod);\n        },\n\n        isAnimationEnabled: function () {\n            if (!env.node) {\n                if (this.option.animation != null) {\n                    return !!this.option.animation;\n                }\n                else if (this.parentModel) {\n                    return this.parentModel.isAnimationEnabled();\n                }\n            }\n        }\n    };\n\n    function doGet(obj, pathArr, parentModel) {\n        for (var i = 0; i < pathArr.length; i++) {\n            // Ignore empty\n            if (!pathArr[i]) {\n                continue;\n            }\n            // obj could be number/string/... (like 0)\n            obj = (obj && typeof obj === 'object') ? obj[pathArr[i]] : null;\n            if (obj == null) {\n                break;\n            }\n        }\n        if (obj == null && parentModel) {\n            obj = parentModel.get(pathArr);\n        }\n        return obj;\n    }\n\n    function getParent(model, path) {\n        var getParentMethod = clazzUtil.get(model, 'getParent');\n        return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n    }\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 10\n// module chunks = 0","var BoundingRect = require(\"../core/BoundingRect\");\n\nvar imageHelper = require(\"../graphic/helper/image\");\n\nvar _util = require(\"../core/util\");\n\nvar getContext = _util.getContext;\nvar extend = _util.extend;\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar textWidthCache = {};\nvar textWidthCacheCounter = 0;\nvar TEXT_CACHE_MAX = 5000;\nvar STYLE_REG = /\\{([a-zA-Z0-9_]+)\\|([^}]*)\\}/g;\nvar DEFAULT_FONT = '12px sans-serif'; // Avoid assign to an exported variable, for transforming to cjs.\n\nvar methods = {};\n\nfunction $override(name, fn) {\n  methods[name] = fn;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {number} width\n */\n\n\nfunction getWidth(text, font) {\n  font = font || DEFAULT_FONT;\n  var key = text + ':' + font;\n\n  if (textWidthCache[key]) {\n    return textWidthCache[key];\n  }\n\n  var textLines = (text + '').split('\\n');\n  var width = 0;\n\n  for (var i = 0, l = textLines.length; i < l; i++) {\n    // textContain.measureText may be overrided in SVG or VML\n    width = Math.max(measureText(textLines[i], font).width, width);\n  }\n\n  if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n    textWidthCacheCounter = 0;\n    textWidthCache = {};\n  }\n\n  textWidthCacheCounter++;\n  textWidthCache[key] = width;\n  return width;\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {string} [textAlign='left']\n * @param {string} [textVerticalAlign='top']\n * @param {Array.<number>} [textPadding]\n * @param {Object} [rich]\n * @param {Object} [truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\n\nfunction getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  return rich ? getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) : getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate);\n}\n\nfunction getPlainTextRect(text, font, textAlign, textVerticalAlign, textPadding, truncate) {\n  var contentBlock = parsePlainText(text, font, textPadding, truncate);\n  var outerWidth = getWidth(text, font);\n\n  if (textPadding) {\n    outerWidth += textPadding[1] + textPadding[3];\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  var rect = new BoundingRect(x, y, outerWidth, outerHeight);\n  rect.lineHeight = contentBlock.lineHeight;\n  return rect;\n}\n\nfunction getRichTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate) {\n  var contentBlock = parseRichText(text, {\n    rich: rich,\n    truncate: truncate,\n    font: font,\n    textAlign: textAlign,\n    textPadding: textPadding\n  });\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var x = adjustTextX(0, outerWidth, textAlign);\n  var y = adjustTextY(0, outerHeight, textVerticalAlign);\n  return new BoundingRect(x, y, outerWidth, outerHeight);\n}\n/**\n * @public\n * @param {number} x\n * @param {number} width\n * @param {string} [textAlign='left']\n * @return {number} Adjusted x.\n */\n\n\nfunction adjustTextX(x, width, textAlign) {\n  // FIXME Right to left language\n  if (textAlign === 'right') {\n    x -= width;\n  } else if (textAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n/**\n * @public\n * @param {number} y\n * @param {number} height\n * @param {string} [textVerticalAlign='top']\n * @return {number} Adjusted y.\n */\n\n\nfunction adjustTextY(y, height, textVerticalAlign) {\n  if (textVerticalAlign === 'middle') {\n    y -= height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y -= height;\n  }\n\n  return y;\n}\n/**\n * @public\n * @param {stirng} textPosition\n * @param {Object} rect {x, y, width, height}\n * @param {number} distance\n * @return {Object} {x, y, textAlign, textVerticalAlign}\n */\n\n\nfunction adjustTextPositionOnRect(textPosition, rect, distance) {\n  var x = rect.x;\n  var y = rect.y;\n  var height = rect.height;\n  var width = rect.width;\n  var halfHeight = height / 2;\n  var textAlign = 'left';\n  var textVerticalAlign = 'top';\n\n  switch (textPosition) {\n    case 'left':\n      x -= distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'right':\n      x += distance + width;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'top':\n      x += width / 2;\n      y -= distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'bottom':\n      x += width / 2;\n      y += height + distance;\n      textAlign = 'center';\n      break;\n\n    case 'inside':\n      x += width / 2;\n      y += halfHeight;\n      textAlign = 'center';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideLeft':\n      x += distance;\n      y += halfHeight;\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideRight':\n      x += width - distance;\n      y += halfHeight;\n      textAlign = 'right';\n      textVerticalAlign = 'middle';\n      break;\n\n    case 'insideTop':\n      x += width / 2;\n      y += distance;\n      textAlign = 'center';\n      break;\n\n    case 'insideBottom':\n      x += width / 2;\n      y += height - distance;\n      textAlign = 'center';\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideTopLeft':\n      x += distance;\n      y += distance;\n      break;\n\n    case 'insideTopRight':\n      x += width - distance;\n      y += distance;\n      textAlign = 'right';\n      break;\n\n    case 'insideBottomLeft':\n      x += distance;\n      y += height - distance;\n      textVerticalAlign = 'bottom';\n      break;\n\n    case 'insideBottomRight':\n      x += width - distance;\n      y += height - distance;\n      textAlign = 'right';\n      textVerticalAlign = 'bottom';\n      break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n/**\n * Show ellipsis if overflow.\n *\n * @public\n * @param  {string} text\n * @param  {string} containerWidth\n * @param  {string} font\n * @param  {number} [ellipsis='...']\n * @param  {Object} [options]\n * @param  {number} [options.maxIterations=3]\n * @param  {number} [options.minChar=0] If truncate result are less\n *                  then minChar, ellipsis will not show, which is\n *                  better for user hint in some cases.\n * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n * @return {string}\n */\n\n\nfunction truncateText(text, containerWidth, font, ellipsis, options) {\n  if (!containerWidth) {\n    return '';\n  }\n\n  var textLines = (text + '').split('\\n');\n  options = prepareTruncateOptions(containerWidth, font, ellipsis, options); // FIXME\n  // It is not appropriate that every line has '...' when truncate multiple lines.\n\n  for (var i = 0, len = textLines.length; i < len; i++) {\n    textLines[i] = truncateSingleLine(textLines[i], options);\n  }\n\n  return textLines.join('\\n');\n}\n\nfunction prepareTruncateOptions(containerWidth, font, ellipsis, options) {\n  options = extend({}, options);\n  options.font = font;\n  var ellipsis = retrieve2(ellipsis, '...');\n  options.maxIterations = retrieve2(options.maxIterations, 2);\n  var minChar = options.minChar = retrieve2(options.minChar, 0); // FIXME\n  // Other languages?\n\n  options.cnCharWidth = getWidth('国', font); // FIXME\n  // Consider proportional font?\n\n  var ascCharWidth = options.ascCharWidth = getWidth('a', font);\n  options.placeholder = retrieve2(options.placeholder, ''); // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n  // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n\n  var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n\n  for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n    contentWidth -= ascCharWidth;\n  }\n\n  var ellipsisWidth = getWidth(ellipsis);\n\n  if (ellipsisWidth > contentWidth) {\n    ellipsis = '';\n    ellipsisWidth = 0;\n  }\n\n  contentWidth = containerWidth - ellipsisWidth;\n  options.ellipsis = ellipsis;\n  options.ellipsisWidth = ellipsisWidth;\n  options.contentWidth = contentWidth;\n  options.containerWidth = containerWidth;\n  return options;\n}\n\nfunction truncateSingleLine(textLine, options) {\n  var containerWidth = options.containerWidth;\n  var font = options.font;\n  var contentWidth = options.contentWidth;\n\n  if (!containerWidth) {\n    return '';\n  }\n\n  var lineWidth = getWidth(textLine, font);\n\n  if (lineWidth <= containerWidth) {\n    return textLine;\n  }\n\n  for (var j = 0;; j++) {\n    if (lineWidth <= contentWidth || j >= options.maxIterations) {\n      textLine += options.ellipsis;\n      break;\n    }\n\n    var subLength = j === 0 ? estimateLength(textLine, contentWidth, options.ascCharWidth, options.cnCharWidth) : lineWidth > 0 ? Math.floor(textLine.length * contentWidth / lineWidth) : 0;\n    textLine = textLine.substr(0, subLength);\n    lineWidth = getWidth(textLine, font);\n  }\n\n  if (textLine === '') {\n    textLine = options.placeholder;\n  }\n\n  return textLine;\n}\n\nfunction estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n  var width = 0;\n  var i = 0;\n\n  for (var len = text.length; i < len && width < contentWidth; i++) {\n    var charCode = text.charCodeAt(i);\n    width += 0 <= charCode && charCode <= 127 ? ascCharWidth : cnCharWidth;\n  }\n\n  return i;\n}\n/**\n * @public\n * @param {string} font\n * @return {number} line height\n */\n\n\nfunction getLineHeight(font) {\n  // FIXME A rough approach.\n  return getWidth('国', font);\n}\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @return {Object} width\n */\n\n\nfunction measureText(text, font) {\n  return methods.measureText(text, font);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nmethods.measureText = function (text, font) {\n  var ctx = getContext();\n  ctx.font = font || DEFAULT_FONT;\n  return ctx.measureText(text);\n};\n/**\n * @public\n * @param {string} text\n * @param {string} font\n * @param {Object} [truncate]\n * @return {Object} block: {lineHeight, lines, height, outerHeight}\n *  Notice: for performance, do not calculate outerWidth util needed.\n */\n\n\nfunction parsePlainText(text, font, padding, truncate) {\n  text != null && (text += '');\n  var lineHeight = getLineHeight(font);\n  var lines = text ? text.split('\\n') : [];\n  var height = lines.length * lineHeight;\n  var outerHeight = height;\n\n  if (padding) {\n    outerHeight += padding[0] + padding[2];\n  }\n\n  if (text && truncate) {\n    var truncOuterHeight = truncate.outerHeight;\n    var truncOuterWidth = truncate.outerWidth;\n\n    if (truncOuterHeight != null && outerHeight > truncOuterHeight) {\n      text = '';\n      lines = [];\n    } else if (truncOuterWidth != null) {\n      var options = prepareTruncateOptions(truncOuterWidth - (padding ? padding[1] + padding[3] : 0), font, truncate.ellipsis, {\n        minChar: truncate.minChar,\n        placeholder: truncate.placeholder\n      }); // FIXME\n      // It is not appropriate that every line has '...' when truncate multiple lines.\n\n      for (var i = 0, len = lines.length; i < len; i++) {\n        lines[i] = truncateSingleLine(lines[i], options);\n      }\n    }\n  }\n\n  return {\n    lines: lines,\n    height: height,\n    outerHeight: outerHeight,\n    lineHeight: lineHeight\n  };\n}\n/**\n * For example: 'some text {a|some text}other text{b|some text}xxx{c|}xxx'\n * Also consider 'bbbb{a|xxx\\nzzz}xxxx\\naaaa'.\n *\n * @public\n * @param {string} text\n * @param {Object} style\n * @return {Object} block\n * {\n *      width,\n *      height,\n *      lines: [{\n *          lineHeight,\n *          width,\n *          tokens: [[{\n *              styleName,\n *              text,\n *              width,      // include textPadding\n *              height,     // include textPadding\n *              textWidth, // pure text width\n *              textHeight, // pure text height\n *              lineHeihgt,\n *              font,\n *              textAlign,\n *              textVerticalAlign\n *          }], [...], ...]\n *      }, ...]\n * }\n * If styleName is undefined, it is plain text.\n */\n\n\nfunction parseRichText(text, style) {\n  var contentBlock = {\n    lines: [],\n    width: 0,\n    height: 0\n  };\n  text != null && (text += '');\n\n  if (!text) {\n    return contentBlock;\n  }\n\n  var lastIndex = STYLE_REG.lastIndex = 0;\n  var result;\n\n  while ((result = STYLE_REG.exec(text)) != null) {\n    var matchedIndex = result.index;\n\n    if (matchedIndex > lastIndex) {\n      pushTokens(contentBlock, text.substring(lastIndex, matchedIndex));\n    }\n\n    pushTokens(contentBlock, result[2], result[1]);\n    lastIndex = STYLE_REG.lastIndex;\n  }\n\n  if (lastIndex < text.length) {\n    pushTokens(contentBlock, text.substring(lastIndex, text.length));\n  }\n\n  var lines = contentBlock.lines;\n  var contentHeight = 0;\n  var contentWidth = 0; // For `textWidth: 100%`\n\n  var pendingList = [];\n  var stlPadding = style.textPadding;\n  var truncate = style.truncate;\n  var truncateWidth = truncate && truncate.outerWidth;\n  var truncateHeight = truncate && truncate.outerHeight;\n\n  if (stlPadding) {\n    truncateWidth != null && (truncateWidth -= stlPadding[1] + stlPadding[3]);\n    truncateHeight != null && (truncateHeight -= stlPadding[0] + stlPadding[2]);\n  } // Calculate layout info of tokens.\n\n\n  for (var i = 0; i < lines.length; i++) {\n    var line = lines[i];\n    var lineHeight = 0;\n    var lineWidth = 0;\n\n    for (var j = 0; j < line.tokens.length; j++) {\n      var token = line.tokens[j];\n      var tokenStyle = token.styleName && style.rich[token.styleName] || {}; // textPadding should not inherit from style.\n\n      var textPadding = token.textPadding = tokenStyle.textPadding; // textFont has been asigned to font by `normalizeStyle`.\n\n      var font = token.font = tokenStyle.font || style.font; // textHeight can be used when textVerticalAlign is specified in token.\n\n      var tokenHeight = token.textHeight = retrieve2( // textHeight should not be inherited, consider it can be specified\n      // as box height of the block.\n      tokenStyle.textHeight, getLineHeight(font));\n      textPadding && (tokenHeight += textPadding[0] + textPadding[2]);\n      token.height = tokenHeight;\n      token.lineHeight = retrieve3(tokenStyle.textLineHeight, style.textLineHeight, tokenHeight);\n      token.textAlign = tokenStyle && tokenStyle.textAlign || style.textAlign;\n      token.textVerticalAlign = tokenStyle && tokenStyle.textVerticalAlign || 'middle';\n\n      if (truncateHeight != null && contentHeight + token.lineHeight > truncateHeight) {\n        return {\n          lines: [],\n          width: 0,\n          height: 0\n        };\n      }\n\n      token.textWidth = getWidth(token.text, font);\n      var tokenWidth = tokenStyle.textWidth;\n      var tokenWidthNotSpecified = tokenWidth == null || tokenWidth === 'auto'; // Percent width, can be `100%`, can be used in drawing separate\n      // line when box width is needed to be auto.\n\n      if (typeof tokenWidth === 'string' && tokenWidth.charAt(tokenWidth.length - 1) === '%') {\n        token.percentWidth = tokenWidth;\n        pendingList.push(token);\n        tokenWidth = 0; // Do not truncate in this case, because there is no user case\n        // and it is too complicated.\n      } else {\n        if (tokenWidthNotSpecified) {\n          tokenWidth = token.textWidth; // FIXME: If image is not loaded and textWidth is not specified, calling\n          // `getBoundingRect()` will not get correct result.\n\n          var textBackgroundColor = tokenStyle.textBackgroundColor;\n          var bgImg = textBackgroundColor && textBackgroundColor.image; // Use cases:\n          // (1) If image is not loaded, it will be loaded at render phase and call\n          // `dirty()` and `textBackgroundColor.image` will be replaced with the loaded\n          // image, and then the right size will be calculated here at the next tick.\n          // See `graphic/helper/text.js`.\n          // (2) If image loaded, and `textBackgroundColor.image` is image src string,\n          // use `imageHelper.findExistImage` to find cached image.\n          // `imageHelper.findExistImage` will always be called here before\n          // `imageHelper.createOrUpdateImage` in `graphic/helper/text.js#renderRichText`\n          // which ensures that image will not be rendered before correct size calcualted.\n\n          if (bgImg) {\n            bgImg = imageHelper.findExistImage(bgImg);\n\n            if (imageHelper.isImageReady(bgImg)) {\n              tokenWidth = Math.max(tokenWidth, bgImg.width * tokenHeight / bgImg.height);\n            }\n          }\n        }\n\n        var paddingW = textPadding ? textPadding[1] + textPadding[3] : 0;\n        tokenWidth += paddingW;\n        var remianTruncWidth = truncateWidth != null ? truncateWidth - lineWidth : null;\n\n        if (remianTruncWidth != null && remianTruncWidth < tokenWidth) {\n          if (!tokenWidthNotSpecified || remianTruncWidth < paddingW) {\n            token.text = '';\n            token.textWidth = tokenWidth = 0;\n          } else {\n            token.text = truncateText(token.text, remianTruncWidth - paddingW, font, truncate.ellipsis, {\n              minChar: truncate.minChar\n            });\n            token.textWidth = getWidth(token.text, font);\n            tokenWidth = token.textWidth + paddingW;\n          }\n        }\n      }\n\n      lineWidth += token.width = tokenWidth;\n      tokenStyle && (lineHeight = Math.max(lineHeight, token.lineHeight));\n    }\n\n    line.width = lineWidth;\n    line.lineHeight = lineHeight;\n    contentHeight += lineHeight;\n    contentWidth = Math.max(contentWidth, lineWidth);\n  }\n\n  contentBlock.outerWidth = contentBlock.width = retrieve2(style.textWidth, contentWidth);\n  contentBlock.outerHeight = contentBlock.height = retrieve2(style.textHeight, contentHeight);\n\n  if (stlPadding) {\n    contentBlock.outerWidth += stlPadding[1] + stlPadding[3];\n    contentBlock.outerHeight += stlPadding[0] + stlPadding[2];\n  }\n\n  for (var i = 0; i < pendingList.length; i++) {\n    var token = pendingList[i];\n    var percentWidth = token.percentWidth; // Should not base on outerWidth, because token can not be placed out of padding.\n\n    token.width = parseInt(percentWidth, 10) / 100 * contentWidth;\n  }\n\n  return contentBlock;\n}\n\nfunction pushTokens(block, str, styleName) {\n  var isEmptyStr = str === '';\n  var strs = str.split('\\n');\n  var lines = block.lines;\n\n  for (var i = 0; i < strs.length; i++) {\n    var text = strs[i];\n    var token = {\n      styleName: styleName,\n      text: text,\n      isLineHolder: !text && !isEmptyStr\n    }; // The first token should be appended to the last line.\n\n    if (!i) {\n      var tokens = (lines[lines.length - 1] || (lines[0] = {\n        tokens: []\n      })).tokens; // Consider cases:\n      // (1) ''.split('\\n') => ['', '\\n', ''], the '' at the first item\n      // (which is a placeholder) should be replaced by new token.\n      // (2) A image backage, where token likes {a|}.\n      // (3) A redundant '' will affect textAlign in line.\n      // (4) tokens with the same tplName should not be merged, because\n      // they should be displayed in different box (with border and padding).\n\n      var tokensLen = tokens.length;\n      tokensLen === 1 && tokens[0].isLineHolder ? tokens[0] = token : // Consider text is '', only insert when it is the \"lineHolder\" or\n      // \"emptyStr\". Otherwise a redundant '' will affect textAlign in line.\n      (text || !tokensLen || isEmptyStr) && tokens.push(token);\n    } // Other tokens always start a new line.\n    else {\n        // If there is '', insert it as a placeholder.\n        lines.push({\n          tokens: [token]\n        });\n      }\n  }\n}\n\nfunction makeFont(style) {\n  // FIXME in node-canvas fontWeight is before fontStyle\n  // Use `fontSize` `fontFamily` to check whether font properties are defined.\n  return (style.fontSize || style.fontFamily) && [style.fontStyle, style.fontWeight, (style.fontSize || 12) + 'px', // If font properties are defined, `fontFamily` should not be ignored.\n  style.fontFamily || 'sans-serif'].join(' ') || style.textFont || style.font;\n}\n\nexports.DEFAULT_FONT = DEFAULT_FONT;\nexports.$override = $override;\nexports.getWidth = getWidth;\nexports.getBoundingRect = getBoundingRect;\nexports.adjustTextX = adjustTextX;\nexports.adjustTextY = adjustTextY;\nexports.adjustTextPositionOnRect = adjustTextPositionOnRect;\nexports.truncateText = truncateText;\nexports.getLineHeight = getLineHeight;\nexports.measureText = measureText;\nexports.parsePlainText = parsePlainText;\nexports.parseRichText = parseRichText;\nexports.makeFont = makeFont;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 11\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    var MEMBER_PRIFIX = '\\0ec_\\0';\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name] = value;` (can be right-value)\n     * @public\n     */\n    clazz.set = function (host, name, value) {\n        return (host[MEMBER_PRIFIX + name] = value);\n    };\n\n    /**\n     * Hide private class member.\n     * The same behavior as `host[name];`\n     * @public\n     */\n    clazz.get = function (host, name) {\n        return host[MEMBER_PRIFIX + name];\n    };\n\n    /**\n     * For hidden private class member.\n     * The same behavior as `host.hasOwnProperty(name);`\n     * @public\n     */\n    clazz.hasOwn = function (host, name) {\n        return host.hasOwnProperty(MEMBER_PRIFIX + name);\n    };\n\n    /**\n     * Notice, parseClassType('') should returns {main: '', sub: ''}\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n\n    /**\n     * @public\n     */\n    function checkClassType(componentType) {\n        zrUtil.assert(\n            /^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType),\n            'componentType \"' + componentType + '\" illegal'\n        );\n    }\n\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                checkClassType(componentType);\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n            var Clazz = storage[componentMainType];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    !subType\n                        ? componentMainType + '.' + 'type should be specified.'\n                        : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 12\n// module chunks = 0","/**\n * 3x2矩阵操作类\n * @exports zrender/tool/matrix\n */\nvar ArrayCtor = typeof Float32Array === 'undefined' ? Array : Float32Array;\n/**\n * 创建一个单位矩阵\n * @return {Float32Array|Array.<number>}\n */\n\nfunction create() {\n  var out = new ArrayCtor(6);\n  identity(out);\n  return out;\n}\n/**\n * 设置矩阵为单位矩阵\n * @param {Float32Array|Array.<number>} out\n */\n\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\n * 复制矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m\n */\n\n\nfunction copy(out, m) {\n  out[0] = m[0];\n  out[1] = m[1];\n  out[2] = m[2];\n  out[3] = m[3];\n  out[4] = m[4];\n  out[5] = m[5];\n  return out;\n}\n/**\n * 矩阵相乘\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} m1\n * @param {Float32Array|Array.<number>} m2\n */\n\n\nfunction mul(out, m1, m2) {\n  // Consider matrix.mul(m, m2, m);\n  // where out is the same as m2.\n  // So use temp variable to escape error.\n  var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n  var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n  var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n  var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n  var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n  var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = out3;\n  out[4] = out4;\n  out[5] = out5;\n  return out;\n}\n/**\n * 平移变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction translate(out, a, v) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4] + v[0];\n  out[5] = a[5] + v[1];\n  return out;\n}\n/**\n * 旋转变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {number} rad\n */\n\n\nfunction rotate(out, a, rad) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var st = Math.sin(rad);\n  var ct = Math.cos(rad);\n  out[0] = aa * ct + ab * st;\n  out[1] = -aa * st + ab * ct;\n  out[2] = ac * ct + ad * st;\n  out[3] = -ac * st + ct * ad;\n  out[4] = ct * atx + st * aty;\n  out[5] = ct * aty - st * atx;\n  return out;\n}\n/**\n * 缩放变换\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n * @param {Float32Array|Array.<number>} v\n */\n\n\nfunction scale(out, a, v) {\n  var vx = v[0];\n  var vy = v[1];\n  out[0] = a[0] * vx;\n  out[1] = a[1] * vy;\n  out[2] = a[2] * vx;\n  out[3] = a[3] * vy;\n  out[4] = a[4] * vx;\n  out[5] = a[5] * vy;\n  return out;\n}\n/**\n * 求逆矩阵\n * @param {Float32Array|Array.<number>} out\n * @param {Float32Array|Array.<number>} a\n */\n\n\nfunction invert(out, a) {\n  var aa = a[0];\n  var ac = a[2];\n  var atx = a[4];\n  var ab = a[1];\n  var ad = a[3];\n  var aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n\nexports.create = create;\nexports.identity = identity;\nexports.copy = copy;\nexports.mul = mul;\nexports.translate = translate;\nexports.rotate = rotate;\nexports.scale = scale;\nexports.invert = invert;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 13\n// module chunks = 0","'use strict';\n\n\n    var features = {};\n\n    module.exports = {\n        register: function (name, ctor) {\n            features[name] = ctor;\n        },\n\n        get: function (name) {\n            return features[name];\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/featureManager.js\n// module id = 14\n// module chunks = 0","// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = Object.create(options.computed || null)\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n    options.computed = computed\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 15\n// module chunks = 0","var LRU = require(\"../core/LRU\");\n\nvar kCSSColorTable = {\n  'transparent': [0, 0, 0, 0],\n  'aliceblue': [240, 248, 255, 1],\n  'antiquewhite': [250, 235, 215, 1],\n  'aqua': [0, 255, 255, 1],\n  'aquamarine': [127, 255, 212, 1],\n  'azure': [240, 255, 255, 1],\n  'beige': [245, 245, 220, 1],\n  'bisque': [255, 228, 196, 1],\n  'black': [0, 0, 0, 1],\n  'blanchedalmond': [255, 235, 205, 1],\n  'blue': [0, 0, 255, 1],\n  'blueviolet': [138, 43, 226, 1],\n  'brown': [165, 42, 42, 1],\n  'burlywood': [222, 184, 135, 1],\n  'cadetblue': [95, 158, 160, 1],\n  'chartreuse': [127, 255, 0, 1],\n  'chocolate': [210, 105, 30, 1],\n  'coral': [255, 127, 80, 1],\n  'cornflowerblue': [100, 149, 237, 1],\n  'cornsilk': [255, 248, 220, 1],\n  'crimson': [220, 20, 60, 1],\n  'cyan': [0, 255, 255, 1],\n  'darkblue': [0, 0, 139, 1],\n  'darkcyan': [0, 139, 139, 1],\n  'darkgoldenrod': [184, 134, 11, 1],\n  'darkgray': [169, 169, 169, 1],\n  'darkgreen': [0, 100, 0, 1],\n  'darkgrey': [169, 169, 169, 1],\n  'darkkhaki': [189, 183, 107, 1],\n  'darkmagenta': [139, 0, 139, 1],\n  'darkolivegreen': [85, 107, 47, 1],\n  'darkorange': [255, 140, 0, 1],\n  'darkorchid': [153, 50, 204, 1],\n  'darkred': [139, 0, 0, 1],\n  'darksalmon': [233, 150, 122, 1],\n  'darkseagreen': [143, 188, 143, 1],\n  'darkslateblue': [72, 61, 139, 1],\n  'darkslategray': [47, 79, 79, 1],\n  'darkslategrey': [47, 79, 79, 1],\n  'darkturquoise': [0, 206, 209, 1],\n  'darkviolet': [148, 0, 211, 1],\n  'deeppink': [255, 20, 147, 1],\n  'deepskyblue': [0, 191, 255, 1],\n  'dimgray': [105, 105, 105, 1],\n  'dimgrey': [105, 105, 105, 1],\n  'dodgerblue': [30, 144, 255, 1],\n  'firebrick': [178, 34, 34, 1],\n  'floralwhite': [255, 250, 240, 1],\n  'forestgreen': [34, 139, 34, 1],\n  'fuchsia': [255, 0, 255, 1],\n  'gainsboro': [220, 220, 220, 1],\n  'ghostwhite': [248, 248, 255, 1],\n  'gold': [255, 215, 0, 1],\n  'goldenrod': [218, 165, 32, 1],\n  'gray': [128, 128, 128, 1],\n  'green': [0, 128, 0, 1],\n  'greenyellow': [173, 255, 47, 1],\n  'grey': [128, 128, 128, 1],\n  'honeydew': [240, 255, 240, 1],\n  'hotpink': [255, 105, 180, 1],\n  'indianred': [205, 92, 92, 1],\n  'indigo': [75, 0, 130, 1],\n  'ivory': [255, 255, 240, 1],\n  'khaki': [240, 230, 140, 1],\n  'lavender': [230, 230, 250, 1],\n  'lavenderblush': [255, 240, 245, 1],\n  'lawngreen': [124, 252, 0, 1],\n  'lemonchiffon': [255, 250, 205, 1],\n  'lightblue': [173, 216, 230, 1],\n  'lightcoral': [240, 128, 128, 1],\n  'lightcyan': [224, 255, 255, 1],\n  'lightgoldenrodyellow': [250, 250, 210, 1],\n  'lightgray': [211, 211, 211, 1],\n  'lightgreen': [144, 238, 144, 1],\n  'lightgrey': [211, 211, 211, 1],\n  'lightpink': [255, 182, 193, 1],\n  'lightsalmon': [255, 160, 122, 1],\n  'lightseagreen': [32, 178, 170, 1],\n  'lightskyblue': [135, 206, 250, 1],\n  'lightslategray': [119, 136, 153, 1],\n  'lightslategrey': [119, 136, 153, 1],\n  'lightsteelblue': [176, 196, 222, 1],\n  'lightyellow': [255, 255, 224, 1],\n  'lime': [0, 255, 0, 1],\n  'limegreen': [50, 205, 50, 1],\n  'linen': [250, 240, 230, 1],\n  'magenta': [255, 0, 255, 1],\n  'maroon': [128, 0, 0, 1],\n  'mediumaquamarine': [102, 205, 170, 1],\n  'mediumblue': [0, 0, 205, 1],\n  'mediumorchid': [186, 85, 211, 1],\n  'mediumpurple': [147, 112, 219, 1],\n  'mediumseagreen': [60, 179, 113, 1],\n  'mediumslateblue': [123, 104, 238, 1],\n  'mediumspringgreen': [0, 250, 154, 1],\n  'mediumturquoise': [72, 209, 204, 1],\n  'mediumvioletred': [199, 21, 133, 1],\n  'midnightblue': [25, 25, 112, 1],\n  'mintcream': [245, 255, 250, 1],\n  'mistyrose': [255, 228, 225, 1],\n  'moccasin': [255, 228, 181, 1],\n  'navajowhite': [255, 222, 173, 1],\n  'navy': [0, 0, 128, 1],\n  'oldlace': [253, 245, 230, 1],\n  'olive': [128, 128, 0, 1],\n  'olivedrab': [107, 142, 35, 1],\n  'orange': [255, 165, 0, 1],\n  'orangered': [255, 69, 0, 1],\n  'orchid': [218, 112, 214, 1],\n  'palegoldenrod': [238, 232, 170, 1],\n  'palegreen': [152, 251, 152, 1],\n  'paleturquoise': [175, 238, 238, 1],\n  'palevioletred': [219, 112, 147, 1],\n  'papayawhip': [255, 239, 213, 1],\n  'peachpuff': [255, 218, 185, 1],\n  'peru': [205, 133, 63, 1],\n  'pink': [255, 192, 203, 1],\n  'plum': [221, 160, 221, 1],\n  'powderblue': [176, 224, 230, 1],\n  'purple': [128, 0, 128, 1],\n  'red': [255, 0, 0, 1],\n  'rosybrown': [188, 143, 143, 1],\n  'royalblue': [65, 105, 225, 1],\n  'saddlebrown': [139, 69, 19, 1],\n  'salmon': [250, 128, 114, 1],\n  'sandybrown': [244, 164, 96, 1],\n  'seagreen': [46, 139, 87, 1],\n  'seashell': [255, 245, 238, 1],\n  'sienna': [160, 82, 45, 1],\n  'silver': [192, 192, 192, 1],\n  'skyblue': [135, 206, 235, 1],\n  'slateblue': [106, 90, 205, 1],\n  'slategray': [112, 128, 144, 1],\n  'slategrey': [112, 128, 144, 1],\n  'snow': [255, 250, 250, 1],\n  'springgreen': [0, 255, 127, 1],\n  'steelblue': [70, 130, 180, 1],\n  'tan': [210, 180, 140, 1],\n  'teal': [0, 128, 128, 1],\n  'thistle': [216, 191, 216, 1],\n  'tomato': [255, 99, 71, 1],\n  'turquoise': [64, 224, 208, 1],\n  'violet': [238, 130, 238, 1],\n  'wheat': [245, 222, 179, 1],\n  'white': [255, 255, 255, 1],\n  'whitesmoke': [245, 245, 245, 1],\n  'yellow': [255, 255, 0, 1],\n  'yellowgreen': [154, 205, 50, 1]\n};\n\nfunction clampCssByte(i) {\n  // Clamp to integer 0 .. 255.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clampCssAngle(i) {\n  // Clamp to integer 0 .. 360.\n  i = Math.round(i); // Seems to be what Chrome does (vs truncation).\n\n  return i < 0 ? 0 : i > 360 ? 360 : i;\n}\n\nfunction clampCssFloat(f) {\n  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parseCssInt(str) {\n  // int or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssByte(parseFloat(str) / 100 * 255);\n  }\n\n  return clampCssByte(parseInt(str, 10));\n}\n\nfunction parseCssFloat(str) {\n  // float or percentage.\n  if (str.length && str.charAt(str.length - 1) === '%') {\n    return clampCssFloat(parseFloat(str) / 100);\n  }\n\n  return clampCssFloat(parseFloat(str));\n}\n\nfunction cssHueToRgb(m1, m2, h) {\n  if (h < 0) {\n    h += 1;\n  } else if (h > 1) {\n    h -= 1;\n  }\n\n  if (h * 6 < 1) {\n    return m1 + (m2 - m1) * h * 6;\n  }\n\n  if (h * 2 < 1) {\n    return m2;\n  }\n\n  if (h * 3 < 2) {\n    return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n  }\n\n  return m1;\n}\n\nfunction lerpNumber(a, b, p) {\n  return a + (b - a) * p;\n}\n\nfunction setRgba(out, r, g, b, a) {\n  out[0] = r;\n  out[1] = g;\n  out[2] = b;\n  out[3] = a;\n  return out;\n}\n\nfunction copyRgba(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n\nvar colorCache = new LRU(20);\nvar lastRemovedArr = null;\n\nfunction putToCache(colorStr, rgbaArr) {\n  // Reuse removed array\n  if (lastRemovedArr) {\n    copyRgba(lastRemovedArr, rgbaArr);\n  }\n\n  lastRemovedArr = colorCache.put(colorStr, lastRemovedArr || rgbaArr.slice());\n}\n/**\n * @param {string} colorStr\n * @param {Array.<number>} out\n * @return {Array.<number>}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction parse(colorStr, rgbaArr) {\n  if (!colorStr) {\n    return;\n  }\n\n  rgbaArr = rgbaArr || [];\n  var cached = colorCache.get(colorStr);\n\n  if (cached) {\n    return copyRgba(rgbaArr, cached);\n  } // colorStr may be not string\n\n\n  colorStr = colorStr + ''; // Remove all whitespace, not compliant, but should just be more accepting.\n\n  var str = colorStr.replace(/ /g, '').toLowerCase(); // Color keywords (and transparent) lookup.\n\n  if (str in kCSSColorTable) {\n    copyRgba(rgbaArr, kCSSColorTable[str]);\n    putToCache(colorStr, rgbaArr);\n    return rgbaArr;\n  } // #abc and #abc123 syntax.\n\n\n  if (str.charAt(0) === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xfff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xf00) >> 4 | (iv & 0xf00) >> 8, iv & 0xf0 | (iv & 0xf0) >> 4, iv & 0xf | (iv & 0xf) << 4, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16); // TODO(deanm): Stricter parsing.\n\n      if (!(iv >= 0 && iv <= 0xffffff)) {\n        setRgba(rgbaArr, 0, 0, 0, 1);\n        return; // Covers NaN.\n      }\n\n      setRgba(rgbaArr, (iv & 0xff0000) >> 16, (iv & 0xff00) >> 8, iv & 0xff, 1);\n      putToCache(colorStr, rgbaArr);\n      return rgbaArr;\n    }\n\n    return;\n  }\n\n  var op = str.indexOf('('),\n      ep = str.indexOf(')');\n\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op + 1, ep - (op + 1)).split(',');\n    var alpha = 1; // To allow case fallthrough.\n\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        alpha = parseCssFloat(params.pop());\n      // jshint ignore:line\n      // Fall through.\n\n      case 'rgb':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        setRgba(rgbaArr, parseCssInt(params[0]), parseCssInt(params[1]), parseCssInt(params[2]), alpha);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsla':\n        if (params.length !== 4) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        params[3] = parseCssFloat(params[3]);\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      case 'hsl':\n        if (params.length !== 3) {\n          setRgba(rgbaArr, 0, 0, 0, 1);\n          return;\n        }\n\n        hsla2rgba(params, rgbaArr);\n        putToCache(colorStr, rgbaArr);\n        return rgbaArr;\n\n      default:\n        return;\n    }\n  }\n\n  setRgba(rgbaArr, 0, 0, 0, 1);\n  return;\n}\n/**\n * @param {Array.<number>} hsla\n * @param {Array.<number>} rgba\n * @return {Array.<number>} rgba\n */\n\n\nfunction hsla2rgba(hsla, rgba) {\n  var h = (parseFloat(hsla[0]) % 360 + 360) % 360 / 360; // 0 .. 1\n  // NOTE(deanm): According to the CSS spec s/l should only be\n  // percentages, but we don't bother and let float or percentage.\n\n  var s = parseCssFloat(hsla[1]);\n  var l = parseCssFloat(hsla[2]);\n  var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n  var m1 = l * 2 - m2;\n  rgba = rgba || [];\n  setRgba(rgba, clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255), clampCssByte(cssHueToRgb(m1, m2, h) * 255), clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255), 1);\n\n  if (hsla.length === 4) {\n    rgba[3] = hsla[3];\n  }\n\n  return rgba;\n}\n/**\n * @param {Array.<number>} rgba\n * @return {Array.<number>} hsla\n */\n\n\nfunction rgba2hsla(rgba) {\n  if (!rgba) {\n    return;\n  } // RGB from 0 to 255\n\n\n  var R = rgba[0] / 255;\n  var G = rgba[1] / 255;\n  var B = rgba[2] / 255;\n  var vMin = Math.min(R, G, B); // Min. value of RGB\n\n  var vMax = Math.max(R, G, B); // Max. value of RGB\n\n  var delta = vMax - vMin; // Delta RGB value\n\n  var L = (vMax + vMin) / 2;\n  var H;\n  var S; // HSL results from 0 to 1\n\n  if (delta === 0) {\n    H = 0;\n    S = 0;\n  } else {\n    if (L < 0.5) {\n      S = delta / (vMax + vMin);\n    } else {\n      S = delta / (2 - vMax - vMin);\n    }\n\n    var deltaR = ((vMax - R) / 6 + delta / 2) / delta;\n    var deltaG = ((vMax - G) / 6 + delta / 2) / delta;\n    var deltaB = ((vMax - B) / 6 + delta / 2) / delta;\n\n    if (R === vMax) {\n      H = deltaB - deltaG;\n    } else if (G === vMax) {\n      H = 1 / 3 + deltaR - deltaB;\n    } else if (B === vMax) {\n      H = 2 / 3 + deltaG - deltaR;\n    }\n\n    if (H < 0) {\n      H += 1;\n    }\n\n    if (H > 1) {\n      H -= 1;\n    }\n  }\n\n  var hsla = [H * 360, S, L];\n\n  if (rgba[3] != null) {\n    hsla.push(rgba[3]);\n  }\n\n  return hsla;\n}\n/**\n * @param {string} color\n * @param {number} level\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction lift(color, level) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    for (var i = 0; i < 3; i++) {\n      if (level < 0) {\n        colorArr[i] = colorArr[i] * (1 - level) | 0;\n      } else {\n        colorArr[i] = (255 - colorArr[i]) * level + colorArr[i] | 0;\n      }\n    }\n\n    return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n  }\n}\n/**\n * @param {string} color\n * @return {string}\n * @memberOf module:zrender/util/color\n */\n\n\nfunction toHex(color) {\n  var colorArr = parse(color);\n\n  if (colorArr) {\n    return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + +colorArr[2]).toString(16).slice(1);\n  }\n}\n/**\n * Map value to color. Faster than lerp methods because color is represented by rgba array.\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<Array.<number>>} colors List of rgba color array\n * @param {Array.<number>} [out] Mapped gba color array\n * @return {Array.<number>} will be null/undefined if input illegal.\n */\n\n\nfunction fastLerp(normalizedValue, colors, out) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  out = out || [];\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = colors[leftIndex];\n  var rightColor = colors[rightIndex];\n  var dv = value - leftIndex;\n  out[0] = clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv));\n  out[1] = clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv));\n  out[2] = clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv));\n  out[3] = clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv));\n  return out;\n}\n/**\n * @deprecated\n */\n\n\nvar fastMapToColor = fastLerp;\n/**\n * @param {number} normalizedValue A float between 0 and 1.\n * @param {Array.<string>} colors Color list.\n * @param {boolean=} fullOutput Default false.\n * @return {(string|Object)} Result color. If fullOutput,\n *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n * @memberOf module:zrender/util/color\n */\n\nfunction lerp(normalizedValue, colors, fullOutput) {\n  if (!(colors && colors.length) || !(normalizedValue >= 0 && normalizedValue <= 1)) {\n    return;\n  }\n\n  var value = normalizedValue * (colors.length - 1);\n  var leftIndex = Math.floor(value);\n  var rightIndex = Math.ceil(value);\n  var leftColor = parse(colors[leftIndex]);\n  var rightColor = parse(colors[rightIndex]);\n  var dv = value - leftIndex;\n  var color = stringify([clampCssByte(lerpNumber(leftColor[0], rightColor[0], dv)), clampCssByte(lerpNumber(leftColor[1], rightColor[1], dv)), clampCssByte(lerpNumber(leftColor[2], rightColor[2], dv)), clampCssFloat(lerpNumber(leftColor[3], rightColor[3], dv))], 'rgba');\n  return fullOutput ? {\n    color: color,\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    value: value\n  } : color;\n}\n/**\n * @deprecated\n */\n\n\nvar mapToColor = lerp;\n/**\n * @param {string} color\n * @param {number=} h 0 ~ 360, ignore when null.\n * @param {number=} s 0 ~ 1, ignore when null.\n * @param {number=} l 0 ~ 1, ignore when null.\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\nfunction modifyHSL(color, h, s, l) {\n  color = parse(color);\n\n  if (color) {\n    color = rgba2hsla(color);\n    h != null && (color[0] = clampCssAngle(h));\n    s != null && (color[1] = parseCssFloat(s));\n    l != null && (color[2] = parseCssFloat(l));\n    return stringify(hsla2rgba(color), 'rgba');\n  }\n}\n/**\n * @param {string} color\n * @param {number=} alpha 0 ~ 1\n * @return {string} Color string in rgba format.\n * @memberOf module:zrender/util/color\n */\n\n\nfunction modifyAlpha(color, alpha) {\n  color = parse(color);\n\n  if (color && alpha != null) {\n    color[3] = clampCssFloat(alpha);\n    return stringify(color, 'rgba');\n  }\n}\n/**\n * @param {Array.<number>} arrColor like [12,33,44,0.4]\n * @param {string} type 'rgba', 'hsva', ...\n * @return {string} Result color. (If input illegal, return undefined).\n */\n\n\nfunction stringify(arrColor, type) {\n  if (!arrColor || !arrColor.length) {\n    return;\n  }\n\n  var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n\n  if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n    colorStr += ',' + arrColor[3];\n  }\n\n  return type + '(' + colorStr + ')';\n}\n\nexports.parse = parse;\nexports.lift = lift;\nexports.toHex = toHex;\nexports.fastLerp = fastLerp;\nexports.fastMapToColor = fastMapToColor;\nexports.lerp = lerp;\nexports.mapToColor = mapToColor;\nexports.modifyHSL = modifyHSL;\nexports.modifyAlpha = modifyAlpha;\nexports.stringify = stringify;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 16\n// module chunks = 0","var curve = require(\"./curve\");\n\nvar vec2 = require(\"./vector\");\n\nvar bbox = require(\"./bbox\");\n\nvar BoundingRect = require(\"./BoundingRect\");\n\nvar _config = require(\"../config\");\n\nvar dpr = _config.devicePixelRatio;\n\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n// TODO getTotalLength, getPointAtLength\nvar CMD = {\n  M: 1,\n  L: 2,\n  C: 3,\n  Q: 4,\n  A: 5,\n  Z: 6,\n  // Rect\n  R: 7\n}; // var CMD_MEM_SIZE = {\n//     M: 3,\n//     L: 3,\n//     C: 7,\n//     Q: 5,\n//     A: 9,\n//     R: 5,\n//     Z: 1\n// };\n\nvar min = [];\nvar max = [];\nvar min2 = [];\nvar max2 = [];\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathCos = Math.cos;\nvar mathSin = Math.sin;\nvar mathSqrt = Math.sqrt;\nvar mathAbs = Math.abs;\nvar hasTypedArray = typeof Float32Array != 'undefined';\n/**\n * @alias module:zrender/core/PathProxy\n * @constructor\n */\n\nvar PathProxy = function (notSaveData) {\n  this._saveData = !(notSaveData || false);\n\n  if (this._saveData) {\n    /**\n     * Path data. Stored as flat array\n     * @type {Array.<Object>}\n     */\n    this.data = [];\n  }\n\n  this._ctx = null;\n};\n/**\n * 快速计算Path包围盒（并不是最小包围盒）\n * @return {Object}\n */\n\n\nPathProxy.prototype = {\n  constructor: PathProxy,\n  _xi: 0,\n  _yi: 0,\n  _x0: 0,\n  _y0: 0,\n  // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n  _ux: 0,\n  _uy: 0,\n  _len: 0,\n  _lineDash: null,\n  _dashOffset: 0,\n  _dashIdx: 0,\n  _dashSum: 0,\n\n  /**\n   * @readOnly\n   */\n  setScale: function (sx, sy) {\n    this._ux = mathAbs(1 / dpr / sx) || 0;\n    this._uy = mathAbs(1 / dpr / sy) || 0;\n  },\n  getContext: function () {\n    return this._ctx;\n  },\n\n  /**\n   * @param  {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  beginPath: function (ctx) {\n    this._ctx = ctx;\n    ctx && ctx.beginPath();\n    ctx && (this.dpr = ctx.dpr); // Reset\n\n    if (this._saveData) {\n      this._len = 0;\n    }\n\n    if (this._lineDash) {\n      this._lineDash = null;\n      this._dashOffset = 0;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  moveTo: function (x, y) {\n    this.addData(CMD.M, x, y);\n    this._ctx && this._ctx.moveTo(x, y); // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n    // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n    // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n    // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n\n    this._x0 = x;\n    this._y0 = y;\n    this._xi = x;\n    this._yi = y;\n    return this;\n  },\n\n  /**\n   * @param  {number} x\n   * @param  {number} y\n   * @return {module:zrender/core/PathProxy}\n   */\n  lineTo: function (x, y) {\n    var exceedUnit = mathAbs(x - this._xi) > this._ux || mathAbs(y - this._yi) > this._uy // Force draw the first segment\n    || this._len < 5;\n    this.addData(CMD.L, x, y);\n\n    if (this._ctx && exceedUnit) {\n      this._needsDash() ? this._dashedLineTo(x, y) : this._ctx.lineTo(x, y);\n    }\n\n    if (exceedUnit) {\n      this._xi = x;\n      this._yi = y;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @param  {number} x3\n   * @param  {number} y3\n   * @return {module:zrender/core/PathProxy}\n   */\n  bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n    this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3) : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n    }\n\n    this._xi = x3;\n    this._yi = y3;\n    return this;\n  },\n\n  /**\n   * @param  {number} x1\n   * @param  {number} y1\n   * @param  {number} x2\n   * @param  {number} y2\n   * @return {module:zrender/core/PathProxy}\n   */\n  quadraticCurveTo: function (x1, y1, x2, y2) {\n    this.addData(CMD.Q, x1, y1, x2, y2);\n\n    if (this._ctx) {\n      this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2) : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n    }\n\n    this._xi = x2;\n    this._yi = y2;\n    return this;\n  },\n\n  /**\n   * @param  {number} cx\n   * @param  {number} cy\n   * @param  {number} r\n   * @param  {number} startAngle\n   * @param  {number} endAngle\n   * @param  {boolean} anticlockwise\n   * @return {module:zrender/core/PathProxy}\n   */\n  arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n    this.addData(CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1);\n    this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n    this._xi = mathCos(endAngle) * r + cx;\n    this._yi = mathSin(endAngle) * r + cx;\n    return this;\n  },\n  // TODO\n  arcTo: function (x1, y1, x2, y2, radius) {\n    if (this._ctx) {\n      this._ctx.arcTo(x1, y1, x2, y2, radius);\n    }\n\n    return this;\n  },\n  // TODO\n  rect: function (x, y, w, h) {\n    this._ctx && this._ctx.rect(x, y, w, h);\n    this.addData(CMD.R, x, y, w, h);\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/PathProxy}\n   */\n  closePath: function () {\n    this.addData(CMD.Z);\n    var ctx = this._ctx;\n    var x0 = this._x0;\n    var y0 = this._y0;\n\n    if (ctx) {\n      this._needsDash() && this._dashedLineTo(x0, y0);\n      ctx.closePath();\n    }\n\n    this._xi = x0;\n    this._yi = y0;\n    return this;\n  },\n\n  /**\n   * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n   * stroke 同样\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  fill: function (ctx) {\n    ctx && ctx.fill();\n    this.toStatic();\n  },\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   * @return {module:zrender/core/PathProxy}\n   */\n  stroke: function (ctx) {\n    ctx && ctx.stroke();\n    this.toStatic();\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDash: function (lineDash) {\n    if (lineDash instanceof Array) {\n      this._lineDash = lineDash;\n      this._dashIdx = 0;\n      var lineDashSum = 0;\n\n      for (var i = 0; i < lineDash.length; i++) {\n        lineDashSum += lineDash[i];\n      }\n\n      this._dashSum = lineDashSum;\n    }\n\n    return this;\n  },\n\n  /**\n   * 必须在其它绘制命令前调用\n   * Must be invoked before all other path drawing methods\n   * @return {module:zrender/core/PathProxy}\n   */\n  setLineDashOffset: function (offset) {\n    this._dashOffset = offset;\n    return this;\n  },\n\n  /**\n   *\n   * @return {boolean}\n   */\n  len: function () {\n    return this._len;\n  },\n\n  /**\n   * 直接设置 Path 数据\n   */\n  setData: function (data) {\n    var len = data.length;\n\n    if (!(this.data && this.data.length == len) && hasTypedArray) {\n      this.data = new Float32Array(len);\n    }\n\n    for (var i = 0; i < len; i++) {\n      this.data[i] = data[i];\n    }\n\n    this._len = len;\n  },\n\n  /**\n   * 添加子路径\n   * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n   */\n  appendPath: function (path) {\n    if (!(path instanceof Array)) {\n      path = [path];\n    }\n\n    var len = path.length;\n    var appendSize = 0;\n    var offset = this._len;\n\n    for (var i = 0; i < len; i++) {\n      appendSize += path[i].len();\n    }\n\n    if (hasTypedArray && this.data instanceof Float32Array) {\n      this.data = new Float32Array(offset + appendSize);\n    }\n\n    for (var i = 0; i < len; i++) {\n      var appendPathData = path[i].data;\n\n      for (var k = 0; k < appendPathData.length; k++) {\n        this.data[offset++] = appendPathData[k];\n      }\n    }\n\n    this._len = offset;\n  },\n\n  /**\n   * 填充 Path 数据。\n   * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n   */\n  addData: function (cmd) {\n    if (!this._saveData) {\n      return;\n    }\n\n    var data = this.data;\n\n    if (this._len + arguments.length > data.length) {\n      // 因为之前的数组已经转换成静态的 Float32Array\n      // 所以不够用时需要扩展一个新的动态数组\n      this._expandData();\n\n      data = this.data;\n    }\n\n    for (var i = 0; i < arguments.length; i++) {\n      data[this._len++] = arguments[i];\n    }\n\n    this._prevCmd = cmd;\n  },\n  _expandData: function () {\n    // Only if data is Float32Array\n    if (!(this.data instanceof Array)) {\n      var newData = [];\n\n      for (var i = 0; i < this._len; i++) {\n        newData[i] = this.data[i];\n      }\n\n      this.data = newData;\n    }\n  },\n\n  /**\n   * If needs js implemented dashed line\n   * @return {boolean}\n   * @private\n   */\n  _needsDash: function () {\n    return this._lineDash;\n  },\n  _dashedLineTo: function (x1, y1) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    var dist = mathSqrt(dx * dx + dy * dy);\n    var x = x0;\n    var y = y0;\n    var dash;\n    var nDash = lineDash.length;\n    var idx;\n    dx /= dist;\n    dy /= dist;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum;\n    x -= offset * dx;\n    y -= offset * dy;\n\n    while (dx > 0 && x <= x1 || dx < 0 && x >= x1 || dx == 0 && (dy > 0 && y <= y1 || dy < 0 && y >= y1)) {\n      idx = this._dashIdx;\n      dash = lineDash[idx];\n      x += dx * dash;\n      y += dy * dash;\n      this._dashIdx = (idx + 1) % nDash; // Skip positive offset\n\n      if (dx > 0 && x < x0 || dx < 0 && x > x0 || dy > 0 && y < y0 || dy < 0 && y > y0) {\n        continue;\n      }\n\n      ctx[idx % 2 ? 'moveTo' : 'lineTo'](dx >= 0 ? mathMin(x, x1) : mathMax(x, x1), dy >= 0 ? mathMin(y, y1) : mathMax(y, y1));\n    } // Offset for next lineTo\n\n\n    dx = x - x1;\n    dy = y - y1;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  // Not accurate dashed line to\n  _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n    var dashSum = this._dashSum;\n    var offset = this._dashOffset;\n    var lineDash = this._lineDash;\n    var ctx = this._ctx;\n    var x0 = this._xi;\n    var y0 = this._yi;\n    var t;\n    var dx;\n    var dy;\n    var cubicAt = curve.cubicAt;\n    var bezierLen = 0;\n    var idx = this._dashIdx;\n    var nDash = lineDash.length;\n    var x;\n    var y;\n    var tmpLen = 0;\n\n    if (offset < 0) {\n      // Convert to positive offset\n      offset = dashSum + offset;\n    }\n\n    offset %= dashSum; // Bezier approx length\n\n    for (t = 0; t < 1; t += 0.1) {\n      dx = cubicAt(x0, x1, x2, x3, t + 0.1) - cubicAt(x0, x1, x2, x3, t);\n      dy = cubicAt(y0, y1, y2, y3, t + 0.1) - cubicAt(y0, y1, y2, y3, t);\n      bezierLen += mathSqrt(dx * dx + dy * dy);\n    } // Find idx after add offset\n\n\n    for (; idx < nDash; idx++) {\n      tmpLen += lineDash[idx];\n\n      if (tmpLen > offset) {\n        break;\n      }\n    }\n\n    t = (tmpLen - offset) / bezierLen;\n\n    while (t <= 1) {\n      x = cubicAt(x0, x1, x2, x3, t);\n      y = cubicAt(y0, y1, y2, y3, t); // Use line to approximate dashed bezier\n      // Bad result if dash is long\n\n      idx % 2 ? ctx.moveTo(x, y) : ctx.lineTo(x, y);\n      t += lineDash[idx] / bezierLen;\n      idx = (idx + 1) % nDash;\n    } // Finish the last segment and calculate the new offset\n\n\n    idx % 2 !== 0 && ctx.lineTo(x3, y3);\n    dx = x3 - x;\n    dy = y3 - y;\n    this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n  },\n  _dashedQuadraticTo: function (x1, y1, x2, y2) {\n    // Convert quadratic to cubic using degree elevation\n    var x3 = x2;\n    var y3 = y2;\n    x2 = (x2 + 2 * x1) / 3;\n    y2 = (y2 + 2 * y1) / 3;\n    x1 = (this._xi + 2 * x1) / 3;\n    y1 = (this._yi + 2 * y1) / 3;\n\n    this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n  },\n\n  /**\n   * 转成静态的 Float32Array 减少堆内存占用\n   * Convert dynamic array to static Float32Array\n   */\n  toStatic: function () {\n    var data = this.data;\n\n    if (data instanceof Array) {\n      data.length = this._len;\n\n      if (hasTypedArray) {\n        this.data = new Float32Array(data);\n      }\n    }\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n    max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n    var data = this.data;\n    var xi = 0;\n    var yi = 0;\n    var x0 = 0;\n    var y0 = 0;\n\n    for (var i = 0; i < data.length;) {\n      var cmd = data[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = data[i];\n        yi = data[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n          // 在 closePath 的时候使用\n          x0 = data[i++];\n          y0 = data[i++];\n          xi = x0;\n          yi = y0;\n          min2[0] = x0;\n          min2[1] = y0;\n          max2[0] = x0;\n          max2[1] = y0;\n          break;\n\n        case CMD.L:\n          bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.C:\n          bbox.fromCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.Q:\n          bbox.fromQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], min2, max2);\n          xi = data[i++];\n          yi = data[i++];\n          break;\n\n        case CMD.A:\n          // TODO Arc 判断的开销比较大\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++];\n          var endAngle = data[i++] + startAngle; // TODO Arc 旋转\n\n          var psi = data[i++];\n          var anticlockwise = 1 - data[i++];\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(startAngle) * rx + cx;\n            y0 = mathSin(startAngle) * ry + cy;\n          }\n\n          bbox.fromArc(cx, cy, rx, ry, startAngle, endAngle, anticlockwise, min2, max2);\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = data[i++];\n          y0 = yi = data[i++];\n          var width = data[i++];\n          var height = data[i++]; // Use fromLine\n\n          bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n          break;\n\n        case CMD.Z:\n          xi = x0;\n          yi = y0;\n          break;\n      } // Union\n\n\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * Rebuild path from current data\n   * Rebuild path will not consider javascript implemented line dash.\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  rebuildPath: function (ctx) {\n    var d = this.data;\n    var x0, y0;\n    var xi, yi;\n    var x, y;\n    var ux = this._ux;\n    var uy = this._uy;\n    var len = this._len;\n\n    for (var i = 0; i < len;) {\n      var cmd = d[i++];\n\n      if (i == 1) {\n        // 如果第一个命令是 L, C, Q\n        // 则 previous point 同绘制命令的第一个 point\n        //\n        // 第一个命令为 Arc 的情况下会在后面特殊处理\n        xi = d[i];\n        yi = d[i + 1];\n        x0 = xi;\n        y0 = yi;\n      }\n\n      switch (cmd) {\n        case CMD.M:\n          x0 = xi = d[i++];\n          y0 = yi = d[i++];\n          ctx.moveTo(xi, yi);\n          break;\n\n        case CMD.L:\n          x = d[i++];\n          y = d[i++]; // Not draw too small seg between\n\n          if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n            ctx.lineTo(x, y);\n            xi = x;\n            yi = y;\n          }\n\n          break;\n\n        case CMD.C:\n          ctx.bezierCurveTo(d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.Q:\n          ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n          xi = d[i - 2];\n          yi = d[i - 1];\n          break;\n\n        case CMD.A:\n          var cx = d[i++];\n          var cy = d[i++];\n          var rx = d[i++];\n          var ry = d[i++];\n          var theta = d[i++];\n          var dTheta = d[i++];\n          var psi = d[i++];\n          var fs = d[i++];\n          var r = rx > ry ? rx : ry;\n          var scaleX = rx > ry ? 1 : rx / ry;\n          var scaleY = rx > ry ? ry / rx : 1;\n          var isEllipse = Math.abs(rx - ry) > 1e-3;\n          var endAngle = theta + dTheta;\n\n          if (isEllipse) {\n            ctx.translate(cx, cy);\n            ctx.rotate(psi);\n            ctx.scale(scaleX, scaleY);\n            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n            ctx.scale(1 / scaleX, 1 / scaleY);\n            ctx.rotate(-psi);\n            ctx.translate(-cx, -cy);\n          } else {\n            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n          }\n\n          if (i == 1) {\n            // 直接使用 arc 命令\n            // 第一个命令起点还未定义\n            x0 = mathCos(theta) * rx + cx;\n            y0 = mathSin(theta) * ry + cy;\n          }\n\n          xi = mathCos(endAngle) * rx + cx;\n          yi = mathSin(endAngle) * ry + cy;\n          break;\n\n        case CMD.R:\n          x0 = xi = d[i];\n          y0 = yi = d[i + 1];\n          ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n          break;\n\n        case CMD.Z:\n          ctx.closePath();\n          xi = x0;\n          yi = y0;\n      }\n    }\n  }\n};\nPathProxy.CMD = CMD;\nvar _default = PathProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 17\n// module chunks = 0","var _vector = require(\"./vector\");\n\nvar v2Create = _vector.create;\nvar v2DistSquare = _vector.distSquare;\n\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\nvar mathPow = Math.pow;\nvar mathSqrt = Math.sqrt;\nvar EPSILON = 1e-8;\nvar EPSILON_NUMERIC = 1e-4;\nvar THREE_SQRT = mathSqrt(3);\nvar ONE_THIRD = 1 / 3; // 临时变量\n\nvar _v0 = v2Create();\n\nvar _v1 = v2Create();\n\nvar _v2 = v2Create();\n\nfunction isAroundZero(val) {\n  return val > -EPSILON && val < EPSILON;\n}\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * 计算三次贝塞尔值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return onet * onet * (onet * p0 + 3 * t * p1) + t * t * (t * p3 + 3 * onet * p2);\n}\n/**\n * 计算三次贝塞尔导数值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction cubicDerivativeAt(p0, p1, p2, p3, t) {\n  var onet = 1 - t;\n  return 3 * (((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet + (p3 - p2) * t * t);\n}\n/**\n * 计算三次贝塞尔方程根，使用盛金公式\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} val\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction cubicRootAt(p0, p1, p2, p3, val, roots) {\n  // Evaluate roots of cubic functions\n  var a = p3 + 3 * (p1 - p2) - p0;\n  var b = 3 * (p2 - p1 * 2 + p0);\n  var c = 3 * (p1 - p0);\n  var d = p0 - val;\n  var A = b * b - 3 * a * c;\n  var B = b * c - 9 * a * d;\n  var C = c * c - 3 * b * d;\n  var n = 0;\n\n  if (isAroundZero(A) && isAroundZero(B)) {\n    if (isAroundZero(b)) {\n      roots[0] = 0;\n    } else {\n      var t1 = -c / b; //t1, t2, t3, b is not zero\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = B * B - 4 * A * C;\n\n    if (isAroundZero(disc)) {\n      var K = B / A;\n      var t1 = -b / a + K; // t1, a is not zero\n\n      var t2 = -K / 2; // t2, t3\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n      var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n\n      if (Y1 < 0) {\n        Y1 = -mathPow(-Y1, ONE_THIRD);\n      } else {\n        Y1 = mathPow(Y1, ONE_THIRD);\n      }\n\n      if (Y2 < 0) {\n        Y2 = -mathPow(-Y2, ONE_THIRD);\n      } else {\n        Y2 = mathPow(Y2, ONE_THIRD);\n      }\n\n      var t1 = (-b - (Y1 + Y2)) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else {\n      var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n      var theta = Math.acos(T) / 3;\n      var ASqrt = mathSqrt(A);\n      var tmp = Math.cos(theta);\n      var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n      var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n      var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n\n      if (t3 >= 0 && t3 <= 1) {\n        roots[n++] = t3;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算三次贝塞尔方程极限值的位置\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {Array.<number>} extrema\n * @return {number} 有效数目\n */\n\n\nfunction cubicExtrema(p0, p1, p2, p3, extrema) {\n  var b = 6 * p2 - 12 * p1 + 6 * p0;\n  var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n  var c = 3 * p1 - 3 * p0;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      extrema[0] = -b / (2 * a);\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        extrema[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        extrema[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 细分三次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction cubicSubdivide(p0, p1, p2, p3, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p23 = (p3 - p2) * t + p2;\n  var p012 = (p12 - p01) * t + p01;\n  var p123 = (p23 - p12) * t + p12;\n  var p0123 = (p123 - p012) * t + p012; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012;\n  out[3] = p0123; // Seg1\n\n  out[4] = p0123;\n  out[5] = p123;\n  out[6] = p23;\n  out[7] = p3;\n}\n/**\n * 投射点到三次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} [out] 投射点\n * @return {number}\n */\n\n\nfunction cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  var prev;\n  var next;\n  var d1;\n  var d2;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n    _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n    d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    prev = t - interval;\n    next = t + interval; // t - interval\n\n    _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n    _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n    d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = cubicAt(x0, x1, x2, x3, next);\n      _v2[1] = cubicAt(y0, y1, y2, y3, next);\n      d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = cubicAt(x0, x1, x2, x3, t);\n    out[1] = cubicAt(y0, y1, y2, y3, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n/**\n * 计算二次方贝塞尔值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticAt(p0, p1, p2, t) {\n  var onet = 1 - t;\n  return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n}\n/**\n * 计算二次方贝塞尔导数值\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @return {number}\n */\n\n\nfunction quadraticDerivativeAt(p0, p1, p2, t) {\n  return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n}\n/**\n * 计算二次方贝塞尔方程根\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} roots\n * @return {number} 有效根数目\n */\n\n\nfunction quadraticRootAt(p0, p1, p2, val, roots) {\n  var a = p0 - 2 * p1 + p2;\n  var b = 2 * (p1 - p0);\n  var c = p0 - val;\n  var n = 0;\n\n  if (isAroundZero(a)) {\n    if (isNotAroundZero(b)) {\n      var t1 = -c / b;\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    }\n  } else {\n    var disc = b * b - 4 * a * c;\n\n    if (isAroundZero(disc)) {\n      var t1 = -b / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n    } else if (disc > 0) {\n      var discSqrt = mathSqrt(disc);\n      var t1 = (-b + discSqrt) / (2 * a);\n      var t2 = (-b - discSqrt) / (2 * a);\n\n      if (t1 >= 0 && t1 <= 1) {\n        roots[n++] = t1;\n      }\n\n      if (t2 >= 0 && t2 <= 1) {\n        roots[n++] = t2;\n      }\n    }\n  }\n\n  return n;\n}\n/**\n * 计算二次贝塞尔方程极限值\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @return {number}\n */\n\n\nfunction quadraticExtremum(p0, p1, p2) {\n  var divider = p0 + p2 - 2 * p1;\n\n  if (divider === 0) {\n    // p1 is center of p0 and p2\n    return 0.5;\n  } else {\n    return (p0 - p1) / divider;\n  }\n}\n/**\n * 细分二次贝塞尔曲线\n * @memberOf module:zrender/core/curve\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} t\n * @param  {Array.<number>} out\n */\n\n\nfunction quadraticSubdivide(p0, p1, p2, t, out) {\n  var p01 = (p1 - p0) * t + p0;\n  var p12 = (p2 - p1) * t + p1;\n  var p012 = (p12 - p01) * t + p01; // Seg0\n\n  out[0] = p0;\n  out[1] = p01;\n  out[2] = p012; // Seg1\n\n  out[3] = p012;\n  out[4] = p12;\n  out[5] = p2;\n}\n/**\n * 投射点到二次贝塞尔曲线上，返回投射距离。\n * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x\n * @param {number} y\n * @param {Array.<number>} out 投射点\n * @return {number}\n */\n\n\nfunction quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, out) {\n  // http://pomax.github.io/bezierinfo/#projections\n  var t;\n  var interval = 0.005;\n  var d = Infinity;\n  _v0[0] = x;\n  _v0[1] = y; // 先粗略估计一下可能的最小距离的 t 值\n  // PENDING\n\n  for (var _t = 0; _t < 1; _t += 0.05) {\n    _v1[0] = quadraticAt(x0, x1, x2, _t);\n    _v1[1] = quadraticAt(y0, y1, y2, _t);\n    var d1 = v2DistSquare(_v0, _v1);\n\n    if (d1 < d) {\n      t = _t;\n      d = d1;\n    }\n  }\n\n  d = Infinity; // At most 32 iteration\n\n  for (var i = 0; i < 32; i++) {\n    if (interval < EPSILON_NUMERIC) {\n      break;\n    }\n\n    var prev = t - interval;\n    var next = t + interval; // t - interval\n\n    _v1[0] = quadraticAt(x0, x1, x2, prev);\n    _v1[1] = quadraticAt(y0, y1, y2, prev);\n    var d1 = v2DistSquare(_v1, _v0);\n\n    if (prev >= 0 && d1 < d) {\n      t = prev;\n      d = d1;\n    } else {\n      // t + interval\n      _v2[0] = quadraticAt(x0, x1, x2, next);\n      _v2[1] = quadraticAt(y0, y1, y2, next);\n      var d2 = v2DistSquare(_v2, _v0);\n\n      if (next <= 1 && d2 < d) {\n        t = next;\n        d = d2;\n      } else {\n        interval *= 0.5;\n      }\n    }\n  } // t\n\n\n  if (out) {\n    out[0] = quadraticAt(x0, x1, x2, t);\n    out[1] = quadraticAt(y0, y1, y2, t);\n  } // console.log(interval, i);\n\n\n  return mathSqrt(d);\n}\n\nexports.cubicAt = cubicAt;\nexports.cubicDerivativeAt = cubicDerivativeAt;\nexports.cubicRootAt = cubicRootAt;\nexports.cubicExtrema = cubicExtrema;\nexports.cubicSubdivide = cubicSubdivide;\nexports.cubicProjectPoint = cubicProjectPoint;\nexports.quadraticAt = quadraticAt;\nexports.quadraticDerivativeAt = quadraticDerivativeAt;\nexports.quadraticRootAt = quadraticRootAt;\nexports.quadraticExtremum = quadraticExtremum;\nexports.quadraticSubdivide = quadraticSubdivide;\nexports.quadraticProjectPoint = quadraticProjectPoint;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 18\n// module chunks = 0","var Eventful = require(\"../mixin/Eventful\");\n\nexports.Dispatcher = Eventful;\n\nvar env = require(\"./env\");\n\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\nvar isDomLevel2 = typeof window !== 'undefined' && !!window.addEventListener;\nvar MOUSE_EVENT_REG = /^(?:mouse|pointer|contextmenu|drag|drop)|click/;\n\nfunction getBoundingClientRect(el) {\n  // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n  return el.getBoundingClientRect ? el.getBoundingClientRect() : {\n    left: 0,\n    top: 0\n  };\n} // `calculate` is optional, default false\n\n\nfunction clientToLocal(el, e, out, calculate) {\n  out = out || {}; // According to the W3C Working Draft, offsetX and offsetY should be relative\n  // to the padding edge of the target element. The only browser using this convention\n  // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n  // not support the properties.\n  // (see http://www.jacklmoore.com/notes/mouse-position/)\n  // In zr painter.dom, padding edge equals to border edge.\n  // FIXME\n  // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n  // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n  // is too complex. So css-transfrom dont support in this case temporarily.\n\n  if (calculate || !env.canvasSupported) {\n    defaultGetZrXY(el, e, out);\n  } // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n  // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n  // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n  // zoom-factor, overflow / opacity layers, transforms ...)\n  // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n  // <https://bugs.jquery.com/ticket/8523#comment:14>\n  // BTW3, In ff, offsetX/offsetY is always 0.\n  else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n      out.zrX = e.layerX;\n      out.zrY = e.layerY;\n    } // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n    else if (e.offsetX != null) {\n        out.zrX = e.offsetX;\n        out.zrY = e.offsetY;\n      } // For some other device, e.g., IOS safari.\n      else {\n          defaultGetZrXY(el, e, out);\n        }\n\n  return out;\n}\n\nfunction defaultGetZrXY(el, e, out) {\n  // This well-known method below does not support css transform.\n  var box = getBoundingClientRect(el);\n  out.zrX = e.clientX - box.left;\n  out.zrY = e.clientY - box.top;\n}\n/**\n * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n * `calculate` is optional, default false.\n */\n\n\nfunction normalizeEvent(el, e, calculate) {\n  e = e || window.event;\n\n  if (e.zrX != null) {\n    return e;\n  }\n\n  var eventType = e.type;\n  var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n  if (!isTouch) {\n    clientToLocal(el, e, e, calculate);\n    e.zrDelta = e.wheelDelta ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n  } else {\n    var touch = eventType != 'touchend' ? e.targetTouches[0] : e.changedTouches[0];\n    touch && clientToLocal(el, touch, e, calculate);\n  } // Add which for click: 1 === left; 2 === middle; 3 === right; otherwise: 0;\n  // See jQuery: https://github.com/jquery/jquery/blob/master/src/event.js\n  // If e.which has been defined, if may be readonly,\n  // see: https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/which\n\n\n  var button = e.button;\n\n  if (e.which == null && button !== undefined && MOUSE_EVENT_REG.test(e.type)) {\n    e.which = button & 1 ? 1 : button & 2 ? 3 : button & 4 ? 2 : 0;\n  }\n\n  return e;\n}\n\nfunction addEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.addEventListener(name, handler);\n  } else {\n    el.attachEvent('on' + name, handler);\n  }\n}\n\nfunction removeEventListener(el, name, handler) {\n  if (isDomLevel2) {\n    el.removeEventListener(name, handler);\n  } else {\n    el.detachEvent('on' + name, handler);\n  }\n}\n/**\n * preventDefault and stopPropagation.\n * Notice: do not do that in zrender. Upper application\n * do that if necessary.\n *\n * @memberOf module:zrender/core/event\n * @method\n * @param {Event} e : event对象\n */\n\n\nvar stop = isDomLevel2 ? function (e) {\n  e.preventDefault();\n  e.stopPropagation();\n  e.cancelBubble = true;\n} : function (e) {\n  e.returnValue = false;\n  e.cancelBubble = true;\n};\n\nfunction notLeftMouse(e) {\n  // If e.which is undefined, considered as left mouse event.\n  return e.which > 1;\n} // 做向上兼容\n\n\nexports.clientToLocal = clientToLocal;\nexports.normalizeEvent = normalizeEvent;\nexports.addEventListener = addEventListener;\nexports.removeEventListener = removeEventListener;\nexports.stop = stop;\nexports.notLeftMouse = notLeftMouse;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 19\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar imageHelper = require(\"./helper/image\");\n\n/**\n * @alias zrender/graphic/Image\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nfunction ZImage(opts) {\n  Displayable.call(this, opts);\n}\n\nZImage.prototype = {\n  constructor: ZImage,\n  type: 'image',\n  brush: function (ctx, prevEl) {\n    var style = this.style;\n    var src = style.image; // Must bind each time\n\n    style.bind(ctx, this, prevEl);\n    var image = this._image = imageHelper.createOrUpdateImage(src, this._image, this, this.onload);\n\n    if (!image || !imageHelper.isImageReady(image)) {\n      return;\n    } // 图片已经加载完成\n    // if (image.nodeName.toUpperCase() == 'IMG') {\n    //     if (!image.complete) {\n    //         return;\n    //     }\n    // }\n    // Else is canvas\n\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var width = style.width;\n    var height = style.height;\n    var aspect = image.width / image.height;\n\n    if (width == null && height != null) {\n      // Keep image/height ratio\n      width = height * aspect;\n    } else if (height == null && width != null) {\n      height = width / aspect;\n    } else if (width == null && height == null) {\n      width = image.width;\n      height = image.height;\n    } // 设置transform\n\n\n    this.setTransform(ctx);\n\n    if (style.sWidth && style.sHeight) {\n      var sx = style.sx || 0;\n      var sy = style.sy || 0;\n      ctx.drawImage(image, sx, sy, style.sWidth, style.sHeight, x, y, width, height);\n    } else if (style.sx && style.sy) {\n      var sx = style.sx;\n      var sy = style.sy;\n      var sWidth = width - sx;\n      var sHeight = height - sy;\n      ctx.drawImage(image, sx, sy, sWidth, sHeight, x, y, width, height);\n    } else {\n      ctx.drawImage(image, x, y, width, height);\n    }\n\n    this.restoreTransform(ctx); // Draw rect text\n\n    if (style.text != null) {\n      this.drawRectText(ctx, this.getBoundingRect());\n    }\n  },\n  getBoundingRect: function () {\n    var style = this.style;\n\n    if (!this._rect) {\n      this._rect = new BoundingRect(style.x || 0, style.y || 0, style.width || 0, style.height || 0);\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(ZImage, Displayable);\nvar _default = ZImage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 20\n// module chunks = 0","var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Always bind style\n\n    style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 21\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\nvar arrySlice = Array.prototype.slice;\n/**\n * 事件分发器\n * @alias module:zrender/mixin/Eventful\n * @constructor\n */\n\nvar Eventful = function () {\n  this._$handlers = {};\n};\n\nEventful.prototype = {\n  constructor: Eventful,\n\n  /**\n   * 单次触发绑定，trigger后销毁\n   *\n   * @param {string} event 事件名\n   * @param {Function} handler 响应函数\n   * @param {Object} context\n   */\n  one: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: true,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 绑定事件\n   * @param {string} event 事件名\n   * @param {Function} handler 事件处理函数\n   * @param {Object} [context]\n   */\n  on: function (event, handler, context) {\n    var _h = this._$handlers;\n\n    if (!handler || !event) {\n      return this;\n    }\n\n    if (!_h[event]) {\n      _h[event] = [];\n    }\n\n    for (var i = 0; i < _h[event].length; i++) {\n      if (_h[event][i].h === handler) {\n        return this;\n      }\n    }\n\n    _h[event].push({\n      h: handler,\n      one: false,\n      ctx: context || this\n    });\n\n    return this;\n  },\n\n  /**\n   * 是否绑定了事件\n   * @param  {string}  event\n   * @return {boolean}\n   */\n  isSilent: function (event) {\n    var _h = this._$handlers;\n    return _h[event] && _h[event].length;\n  },\n\n  /**\n   * 解绑事件\n   * @param {string} event 事件名\n   * @param {Function} [handler] 事件处理函数\n   */\n  off: function (event, handler) {\n    var _h = this._$handlers;\n\n    if (!event) {\n      this._$handlers = {};\n      return this;\n    }\n\n    if (handler) {\n      if (_h[event]) {\n        var newList = [];\n\n        for (var i = 0, l = _h[event].length; i < l; i++) {\n          if (_h[event][i]['h'] != handler) {\n            newList.push(_h[event][i]);\n          }\n        }\n\n        _h[event] = newList;\n      }\n\n      if (_h[event] && _h[event].length === 0) {\n        delete _h[event];\n      }\n    } else {\n      delete _h[event];\n    }\n\n    return this;\n  },\n\n  /**\n   * 事件分发\n   *\n   * @param {string} type 事件类型\n   */\n  trigger: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 3) {\n        args = arrySlice.call(args, 1);\n      }\n\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(_h[i]['ctx']);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(_h[i]['ctx'], args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 带有context的事件分发, 最后一个参数是事件回调的context\n   * @param {string} type 事件类型\n   */\n  triggerWithContext: function (type) {\n    if (this._$handlers[type]) {\n      var args = arguments;\n      var argLen = args.length;\n\n      if (argLen > 4) {\n        args = arrySlice.call(args, 1, args.length - 1);\n      }\n\n      var ctx = args[args.length - 1];\n      var _h = this._$handlers[type];\n      var len = _h.length;\n\n      for (var i = 0; i < len;) {\n        // Optimize advise from backbone\n        switch (argLen) {\n          case 1:\n            _h[i]['h'].call(ctx);\n\n            break;\n\n          case 2:\n            _h[i]['h'].call(ctx, args[1]);\n\n            break;\n\n          case 3:\n            _h[i]['h'].call(ctx, args[1], args[2]);\n\n            break;\n\n          default:\n            // have more than 2 given arguments\n            _h[i]['h'].apply(ctx, args);\n\n            break;\n        }\n\n        if (_h[i]['one']) {\n          _h.splice(i, 1);\n\n          len--;\n        } else {\n          i++;\n        }\n      }\n    }\n\n    return this;\n  }\n}; // 对象可以通过 onxxxx 绑定事件\n\n/**\n * @event module:zrender/mixin/Eventful#onclick\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseout\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousemove\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousewheel\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmousedown\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#onmouseup\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrag\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragstart\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragend\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragenter\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragleave\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondragover\n * @type {Function}\n * @default null\n */\n\n/**\n * @event module:zrender/mixin/Eventful#ondrop\n * @type {Function}\n * @default null\n */\n\nvar _default = Eventful;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 22\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!clazzUtil.hasOwn(this, '__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                clazzUtil.set(this, '__defaultOption', defaultOption);\n            }\n            return clazzUtil.get(this, '__defaultOption');\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 23\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 24\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Element = require(\"../Element\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/container/Group');\n *     var Circle = require('zrender/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n/**\n * @alias module:zrender/graphic/Group\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @extends module:zrender/mixin/Eventful\n */\nvar Group = function (opts) {\n  opts = opts || {};\n  Element.call(this, opts);\n\n  for (var key in opts) {\n    if (opts.hasOwnProperty(key)) {\n      this[key] = opts[key];\n    }\n  }\n\n  this._children = [];\n  this.__storage = null;\n  this.__dirty = true;\n};\n\nGroup.prototype = {\n  constructor: Group,\n  isGroup: true,\n\n  /**\n   * @type {string}\n   */\n  type: 'group',\n\n  /**\n   * 所有子孙元素是否响应鼠标事件\n   * @name module:/zrender/container/Group#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * @return {Array.<module:zrender/Element>}\n   */\n  children: function () {\n    return this._children.slice();\n  },\n\n  /**\n   * 获取指定 index 的儿子节点\n   * @param  {number} idx\n   * @return {module:zrender/Element}\n   */\n  childAt: function (idx) {\n    return this._children[idx];\n  },\n\n  /**\n   * 获取指定名字的儿子节点\n   * @param  {string} name\n   * @return {module:zrender/Element}\n   */\n  childOfName: function (name) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      if (children[i].name === name) {\n        return children[i];\n      }\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  childCount: function () {\n    return this._children.length;\n  },\n\n  /**\n   * 添加子节点到最后\n   * @param {module:zrender/Element} child\n   */\n  add: function (child) {\n    if (child && child !== this && child.parent !== this) {\n      this._children.push(child);\n\n      this._doAdd(child);\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加子节点在 nextSibling 之前\n   * @param {module:zrender/Element} child\n   * @param {module:zrender/Element} nextSibling\n   */\n  addBefore: function (child, nextSibling) {\n    if (child && child !== this && child.parent !== this && nextSibling && nextSibling.parent === this) {\n      var children = this._children;\n      var idx = children.indexOf(nextSibling);\n\n      if (idx >= 0) {\n        children.splice(idx, 0, child);\n\n        this._doAdd(child);\n      }\n    }\n\n    return this;\n  },\n  _doAdd: function (child) {\n    if (child.parent) {\n      child.parent.remove(child);\n    }\n\n    child.parent = this;\n    var storage = this.__storage;\n    var zr = this.__zr;\n\n    if (storage && storage !== child.__storage) {\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n  },\n\n  /**\n   * 移除子节点\n   * @param {module:zrender/Element} child\n   */\n  remove: function (child) {\n    var zr = this.__zr;\n    var storage = this.__storage;\n    var children = this._children;\n    var idx = zrUtil.indexOf(children, child);\n\n    if (idx < 0) {\n      return this;\n    }\n\n    children.splice(idx, 1);\n    child.parent = null;\n\n    if (storage) {\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n\n    zr && zr.refresh();\n    return this;\n  },\n\n  /**\n   * 移除所有子节点\n   */\n  removeAll: function () {\n    var children = this._children;\n    var storage = this.__storage;\n    var child;\n    var i;\n\n    for (i = 0; i < children.length; i++) {\n      child = children[i];\n\n      if (storage) {\n        storage.delFromStorage(child);\n\n        if (child instanceof Group) {\n          child.delChildrenFromStorage(storage);\n        }\n      }\n\n      child.parent = null;\n    }\n\n    children.length = 0;\n    return this;\n  },\n\n  /**\n   * 遍历所有子节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  eachChild: function (cb, context) {\n    var children = this._children;\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n      cb.call(context, child, i);\n    }\n\n    return this;\n  },\n\n  /**\n   * 深度优先遍历所有子孙节点\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      cb.call(context, child);\n\n      if (child.type === 'group') {\n        child.traverse(cb, context);\n      }\n    }\n\n    return this;\n  },\n  addChildrenToStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.addToStorage(child);\n\n      if (child instanceof Group) {\n        child.addChildrenToStorage(storage);\n      }\n    }\n  },\n  delChildrenFromStorage: function (storage) {\n    for (var i = 0; i < this._children.length; i++) {\n      var child = this._children[i];\n      storage.delFromStorage(child);\n\n      if (child instanceof Group) {\n        child.delChildrenFromStorage(storage);\n      }\n    }\n  },\n  dirty: function () {\n    this.__dirty = true;\n    this.__zr && this.__zr.refresh();\n    return this;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function (includeChildren) {\n    // TODO Caching\n    var rect = null;\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var children = includeChildren || this._children;\n    var tmpMat = [];\n\n    for (var i = 0; i < children.length; i++) {\n      var child = children[i];\n\n      if (child.ignore || child.invisible) {\n        continue;\n      }\n\n      var childRect = child.getBoundingRect();\n      var transform = child.getLocalTransform(tmpMat); // TODO\n      // The boundingRect cacluated by transforming original\n      // rect may be bigger than the actual bundingRect when rotation\n      // is used. (Consider a circle rotated aginst its center, where\n      // the actual boundingRect should be the same as that not be\n      // rotated.) But we can not find better approach to calculate\n      // actual boundingRect yet, considering performance.\n\n      if (transform) {\n        tmpRect.copy(childRect);\n        tmpRect.applyTransform(transform);\n        rect = rect || tmpRect.clone();\n        rect.union(tmpRect);\n      } else {\n        rect = rect || childRect.clone();\n        rect.union(childRect);\n      }\n    }\n\n    return rect || tmpRect;\n  }\n};\nzrUtil.inherits(Group, Element);\nvar _default = Group;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 25\n// module chunks = 0","var _config = require(\"../config\");\n\nvar debugMode = _config.debugMode;\n\nvar log = function () {};\n\nif (debugMode === 1) {\n  log = function () {\n    for (var k in arguments) {\n      throw new Error(arguments[k]);\n    }\n  };\n} else if (debugMode > 1) {\n  log = function () {\n    for (var k in arguments) {\n      console.log(arguments[k]);\n    }\n  };\n}\n\nvar _default = log;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 26\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n\n    var helper = {};\n\n    // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n    // allAxesInfo should be updated when setOption performed.\n    helper.collect = function (ecModel, api) {\n        var result = {\n            /**\n             * key: makeKey(axis.model)\n             * value: {\n             *      axis,\n             *      coordSys,\n             *      axisPointerModel,\n             *      triggerTooltip,\n             *      involveSeries,\n             *      snap,\n             *      seriesModels,\n             *      seriesDataCount\n             * }\n             */\n            axesInfo: {},\n            seriesInvolved: false,\n            /**\n             * key: makeKey(coordSys.model)\n             * value: Object: key makeKey(axis.model), value: axisInfo\n             */\n            coordSysAxesInfo: {},\n            coordSysMap: {}\n        };\n\n        collectAxesInfo(result, ecModel, api);\n\n        // Check seriesInvolved for performance, in case too many series in some chart.\n        result.seriesInvolved && collectSeriesInfo(result, ecModel);\n\n        return result;\n    };\n\n    function collectAxesInfo(result, ecModel, api) {\n        var globalTooltipModel = ecModel.getComponent('tooltip');\n        var globalAxisPointerModel = ecModel.getComponent('axisPointer');\n        // links can only be set on global.\n        var linksOption = globalAxisPointerModel.get('link', true) || [];\n        var linkGroups = [];\n\n        // Collect axes info.\n        each(api.getCoordinateSystems(), function (coordSys) {\n            // Some coordinate system do not support axes, like geo.\n            if (!coordSys.axisPointerEnabled) {\n                return;\n            }\n\n            var coordSysKey = makeKey(coordSys.model);\n            var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n            result.coordSysMap[coordSysKey] = coordSys;\n\n            // Set tooltip (like 'cross') is a convienent way to show axisPointer\n            // for user. So we enable seting tooltip on coordSys model.\n            var coordSysModel = coordSys.model;\n            var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n\n            each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null));\n\n            // If axis tooltip used, choose tooltip axis for each coordSys.\n            // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n            if (coordSys.getTooltipAxes\n                && globalTooltipModel\n                // If tooltip.showContent is set as false, tooltip will not\n                // show but axisPointer will show as normal.\n                && baseTooltipModel.get('show')\n            ) {\n                // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n                // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n                var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n                var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n                var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n                if (triggerAxis || cross) {\n                    each(tooltipAxes.baseAxes, curry(\n                        saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis\n                    ));\n                }\n                if (cross) {\n                    each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n                }\n            }\n\n            // fromTooltip: true | false | 'cross'\n            // triggerTooltip: true | false | null\n            function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n                var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n\n                var axisPointerShow = axisPointerModel.get('show');\n                if (!axisPointerShow || (\n                    axisPointerShow === 'auto'\n                    && !fromTooltip\n                    && !isHandleTrigger(axisPointerModel)\n                )) {\n                    return;\n                }\n\n                if (triggerTooltip == null) {\n                    triggerTooltip = axisPointerModel.get('triggerTooltip');\n                }\n\n                axisPointerModel = fromTooltip\n                    ? makeAxisPointerModel(\n                        axis, baseTooltipModel, globalAxisPointerModel, ecModel,\n                        fromTooltip, triggerTooltip\n                    )\n                    : axisPointerModel;\n\n                var snap = axisPointerModel.get('snap');\n                var key = makeKey(axis.model);\n                var involveSeries = triggerTooltip || snap || axis.type === 'category';\n\n                // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n                var axisInfo = result.axesInfo[key] = {\n                    key: key,\n                    axis: axis,\n                    coordSys: coordSys,\n                    axisPointerModel: axisPointerModel,\n                    triggerTooltip: triggerTooltip,\n                    involveSeries: involveSeries,\n                    snap: snap,\n                    useHandle: isHandleTrigger(axisPointerModel),\n                    seriesModels: []\n                };\n                axesInfoInCoordSys[key] = axisInfo;\n                result.seriesInvolved |= involveSeries;\n\n                var groupIndex = getLinkGroupIndex(linksOption, axis);\n                if (groupIndex != null) {\n                    var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {axesInfo: {}});\n                    linkGroup.axesInfo[key] = axisInfo;\n                    linkGroup.mapper = linksOption[groupIndex].mapper;\n                    axisInfo.linkGroup = linkGroup;\n                }\n            }\n        });\n    }\n\n    function makeAxisPointerModel(\n        axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip\n    ) {\n        var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n        var volatileOption = {};\n\n        each(\n            [\n                'type', 'snap', 'lineStyle', 'shadowStyle', 'label',\n                'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'\n            ],\n            function (field) {\n                volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n            }\n        );\n\n        // category axis do not auto snap, otherwise some tick that do not\n        // has value can not be hovered. value/time/log axis default snap if\n        // triggered from tooltip and trigger tooltip.\n        volatileOption.snap = axis.type !== 'category' && !!triggerTooltip;\n\n        // Compatibel with previous behavior, tooltip axis do not show label by default.\n        // Only these properties can be overrided from tooltip to axisPointer.\n        if (tooltipAxisPointerModel.get('type') === 'cross') {\n            volatileOption.type = 'line';\n        }\n        var labelOption = volatileOption.label || (volatileOption.label = {});\n        // Follow the convention, do not show label when triggered by tooltip by default.\n        labelOption.show == null && (labelOption.show = false);\n\n        if (fromTooltip === 'cross') {\n            // When 'cross', both axes show labels.\n            labelOption.show = true;\n            // If triggerTooltip, this is a base axis, which should better not use cross style\n            // (cross style is dashed by default)\n            if (!triggerTooltip) {\n                var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n                crossStyle && zrUtil.defaults(\n                    labelOption.textStyle || (labelOption.textStyle = {}),\n                    crossStyle.textStyle\n                );\n            }\n        }\n\n        return axis.model.getModel(\n            'axisPointer',\n            new Model(volatileOption, globalAxisPointerModel, ecModel)\n        );\n    }\n\n    function collectSeriesInfo(result, ecModel) {\n        // Prepare data for axis trigger\n        ecModel.eachSeries(function (seriesModel) {\n\n            // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n            var coordSys = seriesModel.coordinateSystem;\n            var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n            if (!coordSys\n                || seriesTooltipTrigger === 'none'\n                || seriesTooltipTrigger === false\n                || seriesTooltipTrigger === 'item'\n                || seriesModel.get('axisPointer.show', true) === false\n            ) {\n                return;\n            }\n\n            each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n                var axis = axisInfo.axis;\n                if (coordSys.getAxis(axis.dim) === axis) {\n                    axisInfo.seriesModels.push(seriesModel);\n                    axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n                    axisInfo.seriesDataCount += seriesModel.getData().count();\n                }\n            });\n\n        }, this);\n    }\n\n    /**\n     * For example:\n     * {\n     *     axisPointer: {\n     *         links: [{\n     *             xAxisIndex: [2, 4],\n     *             yAxisIndex: 'all'\n     *         }, {\n     *             xAxisId: ['a5', 'a7'],\n     *             xAxisName: 'xxx'\n     *         }]\n     *     }\n     * }\n     */\n    function getLinkGroupIndex(linksOption, axis) {\n        var axisModel = axis.model;\n        var dim = axis.dim;\n        for (var i = 0; i < linksOption.length; i++) {\n            var linkOption = linksOption[i] || {};\n            if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id)\n                || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex)\n                || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)\n            ) {\n                return i;\n            }\n        }\n    }\n\n    function checkPropInLink(linkPropValue, axisPropValue) {\n        return linkPropValue === 'all'\n            || (zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0)\n            || linkPropValue === axisPropValue;\n    }\n\n    helper.fixValue = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        if (!axisInfo) {\n            return;\n        }\n\n        var axisPointerModel = axisInfo.axisPointerModel;\n        var scale = axisInfo.axis.scale;\n        var option = axisPointerModel.option;\n        var status = axisPointerModel.get('status');\n        var value = axisPointerModel.get('value');\n\n        // Parse init value for category and time axis.\n        if (value != null) {\n            value = scale.parse(value);\n        }\n\n        var useHandle = isHandleTrigger(axisPointerModel);\n        // If `handle` used, `axisPointer` will always be displayed, so value\n        // and status should be initialized.\n        if (status == null) {\n            option.status = useHandle ? 'show' : 'hide';\n        }\n\n        var extent = scale.getExtent().slice();\n        extent[0] > extent[1] && extent.reverse();\n\n        if (// Pick a value on axis when initializing.\n            value == null\n            // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n            // where we should re-pick a value to keep `handle` displaying normally.\n            || value > extent[1]\n        ) {\n            // Make handle displayed on the end of the axis when init, which looks better.\n            value = extent[1];\n        }\n        if (value < extent[0]) {\n            value = extent[0];\n        }\n\n        option.value = value;\n\n        if (useHandle) {\n            option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n        }\n    };\n\n    helper.getAxisInfo = function (axisModel) {\n        var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n        return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n    };\n\n    helper.getAxisPointerModel = function (axisModel) {\n        var axisInfo = helper.getAxisInfo(axisModel);\n        return axisInfo && axisInfo.axisPointerModel;\n    };\n\n    function isHandleTrigger(axisPointerModel) {\n        return !!axisPointerModel.get('handle.show');\n    }\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @return {string} unique key\n     */\n    var makeKey = helper.makeKey = function (model) {\n        return model.type + '||' + model.id;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/modelHelper.js\n// module id = 28\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     * Item of returned array can only be number (including Infinity and NaN).\n     */\n    axisHelper.getScaleExtent = function (scale, model) {\n        var scaleType = scale.type;\n\n        var min = model.getMin();\n        var max = model.getMax();\n        var fixMin = min != null;\n        var fixMax = max != null;\n        var originalExtent = scale.getExtent();\n\n        var axisDataLen;\n        var boundaryGap;\n        var span;\n        if (scaleType === 'ordinal') {\n            axisDataLen = (model.get('data') || []).length;\n        }\n        else {\n            boundaryGap = model.get('boundaryGap');\n            if (!zrUtil.isArray(boundaryGap)) {\n                boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n            }\n            boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n            boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n            span = originalExtent[1] - originalExtent[0];\n        }\n\n        if (min == null) {\n            min = scaleType === 'ordinal'\n                ? (axisDataLen ? 0 : NaN)\n                : originalExtent[0] - boundaryGap[0] * span;\n        }\n        if (max == null) {\n            max = scaleType === 'ordinal'\n                ? (axisDataLen ? axisDataLen - 1 : NaN)\n                : originalExtent[1] + boundaryGap[1] * span;\n        }\n\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n\n        (min == null || !isFinite(min)) && (min = NaN);\n        (max == null || !isFinite(max)) && (max = NaN);\n\n        scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max));\n\n        // Evaluate if axis needs cross zero\n        if (model.getNeedCrossZero()) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (scale, model) {\n        var extent = axisHelper.getScaleExtent(scale, model);\n        var fixMin = model.getMin() != null;\n        var fixMax = model.getMax() != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axisHelper.getAxisRawValue(axis, tick),\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    axisHelper.getAxisRawValue = function (axis, value) {\n        // In category axis with data zoom, tick is not the original\n        // index of axis.data. So tick should not be exposed to user\n        // in category axis.\n        return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 29\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @param {Object} [setting]\n     */\n    function Scale(setting) {\n        this._setting = setting || {};\n\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.getSetting = function (name) {\n        return this._setting[name];\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Set extent from data\n     * @param {module:echarts/data/List} data\n     * @param {string} dim\n     */\n    scaleProto.unionExtentFromData = function (data, dim) {\n        this.unionExtent(data.getDataExtent(dim, true));\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.isBlank = function () {\n        return this._isBlank;\n    },\n\n    /**\n     * When axis extent depends on data and no data exists,\n     * axis ticks should not be drawn, which is named 'blank'.\n     */\n    scaleProto.setBlank = function (isBlank) {\n        this._isBlank = isBlank;\n    };\n\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 30\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    /**\n     * @public\n     */\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    /**\n     * @public\n     */\n    var HV_NAMES = layout.HV_NAMES = [\n        ['width', 'left', 'right'],\n        ['height', 'top', 'bottom']\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * @param {Object} option Contains some of the properties in HV_NAMES.\n     * @param {number} hvIdx 0: horizontal; 1: vertical.\n     */\n    layout.sizeCalculable = function (option, hvIdx) {\n        return option[HV_NAMES[hvIdx][0]] != null\n            || (option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n\n        var ignoreSize = opt.ignoreSize;\n        !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n\n        var hResult = merge(HV_NAMES[0], 0);\n        var vResult = merge(HV_NAMES[1], 1);\n\n        copy(HV_NAMES[0], targetOption, hResult);\n        copy(HV_NAMES[1], targetOption, vResult);\n\n        function merge(names, hvIdx) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            if (ignoreSize[hvIdx]) {\n                // Only one of left/height is premitted to exist.\n                hasValue(newOption, names[2]) && (merged[names[1]] = null);\n                hasValue(newOption, names[1]) && (merged[names[2]] = null);\n                return merged;\n            }\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 31\n// module chunks = 0","var dpr = 1; // If in browser environment\n\nif (typeof window !== 'undefined') {\n  dpr = Math.max(window.devicePixelRatio || 1, 1);\n}\n/**\n * config默认配置项\n * @exports zrender/config\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n/**\n * debug日志选项：catchBrushException为true下有效\n * 0 : 不生成debug数据，发布用\n * 1 : 异常抛出，调试用\n * 2 : 控制台输出，调试用\n */\n\n\nvar debugMode = 0; // retina 屏幕优化\n\nvar devicePixelRatio = dpr;\nexports.debugMode = debugMode;\nexports.devicePixelRatio = devicePixelRatio;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 32\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Style = require(\"./Style\");\n\nvar Element = require(\"../Element\");\n\nvar RectText = require(\"./mixin/RectText\");\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n/**\n * @alias module:zrender/graphic/Displayable\n * @extends module:zrender/Element\n * @extends module:zrender/graphic/mixin/RectText\n */\nfunction Displayable(opts) {\n  opts = opts || {};\n  Element.call(this, opts); // Extend properties\n\n  for (var name in opts) {\n    if (opts.hasOwnProperty(name) && name !== 'style') {\n      this[name] = opts[name];\n    }\n  }\n  /**\n   * @type {module:zrender/graphic/Style}\n   */\n\n\n  this.style = new Style(opts.style, this);\n  this._rect = null; // Shapes for cascade clipping.\n\n  this.__clipPaths = []; // FIXME Stateful must be mixined after style is setted\n  // Stateful.call(this, opts);\n}\n\nDisplayable.prototype = {\n  constructor: Displayable,\n  type: 'displayable',\n\n  /**\n   * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n   * Dirty flag. From which painter will determine if this displayable object needs brush\n   * @name module:zrender/graphic/Displayable#__dirty\n   * @type {boolean}\n   */\n  __dirty: true,\n\n  /**\n   * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n   * If ignore drawing of the displayable object. Mouse event will still be triggered\n   * @name module:/zrender/graphic/Displayable#invisible\n   * @type {boolean}\n   * @default false\n   */\n  invisible: false,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z: 0,\n\n  /**\n   * @name module:/zrender/graphic/Displayable#z\n   * @type {number}\n   * @default 0\n   */\n  z2: 0,\n\n  /**\n   * z层level，决定绘画在哪层canvas中\n   * @name module:/zrender/graphic/Displayable#zlevel\n   * @type {number}\n   * @default 0\n   */\n  zlevel: 0,\n\n  /**\n   * 是否可拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  draggable: false,\n\n  /**\n   * 是否正在拖拽\n   * @name module:/zrender/graphic/Displayable#draggable\n   * @type {boolean}\n   * @default false\n   */\n  dragging: false,\n\n  /**\n   * 是否相应鼠标事件\n   * @name module:/zrender/graphic/Displayable#silent\n   * @type {boolean}\n   * @default false\n   */\n  silent: false,\n\n  /**\n   * If enable culling\n   * @type {boolean}\n   * @default false\n   */\n  culling: false,\n\n  /**\n   * Mouse cursor when hovered\n   * @name module:/zrender/graphic/Displayable#cursor\n   * @type {string}\n   */\n  cursor: 'pointer',\n\n  /**\n   * If hover area is bounding rect\n   * @name module:/zrender/graphic/Displayable#rectHover\n   * @type {string}\n   */\n  rectHover: false,\n\n  /**\n   * Render the element progressively when the value >= 0,\n   * usefull for large data.\n   * @type {number}\n   */\n  progressive: -1,\n  beforeBrush: function (ctx) {},\n  afterBrush: function (ctx) {},\n\n  /**\n   * 图形绘制方法\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  // Interface\n  brush: function (ctx, prevEl) {},\n\n  /**\n   * 获取最小包围盒\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // Interface\n  getBoundingRect: function () {},\n\n  /**\n   * 判断坐标 x, y 是否在图形上\n   * If displayable element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  contain: function (x, y) {\n    return this.rectContain(x, y);\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {\n    cb.call(context, this);\n  },\n\n  /**\n   * 判断坐标 x, y 是否在图形的包围盒上\n   * If bounding rect of element contain coord x, y\n   * @param  {number} x\n   * @param  {number} y\n   * @return {boolean}\n   */\n  rectContain: function (x, y) {\n    var coord = this.transformCoordToLocal(x, y);\n    var rect = this.getBoundingRect();\n    return rect.contain(coord[0], coord[1]);\n  },\n\n  /**\n   * 标记图形元素为脏，并且在下一帧重绘\n   * Mark displayable element dirty and refresh next frame\n   */\n  dirty: function () {\n    this.__dirty = true;\n    this._rect = null;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * 图形是否会触发事件\n   * If displayable object binded any event\n   * @return {boolean}\n   */\n  // TODO, 通过 bind 绑定的事件\n  // isSilent: function () {\n  //     return !(\n  //         this.hoverable || this.draggable\n  //         || this.onmousemove || this.onmouseover || this.onmouseout\n  //         || this.onmousedown || this.onmouseup || this.onclick\n  //         || this.ondragenter || this.ondragover || this.ondragleave\n  //         || this.ondrop\n  //     );\n  // },\n\n  /**\n   * Alias for animate('style')\n   * @param {boolean} loop\n   */\n  animateStyle: function (loop) {\n    return this.animate('style', loop);\n  },\n  attrKV: function (key, value) {\n    if (key !== 'style') {\n      Element.prototype.attrKV.call(this, key, value);\n    } else {\n      this.style.set(value);\n    }\n  },\n\n  /**\n   * @param {Object|string} key\n   * @param {*} value\n   */\n  setStyle: function (key, value) {\n    this.style.set(key, value);\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * Use given style object\n   * @param  {Object} obj\n   */\n  useStyle: function (obj) {\n    this.style = new Style(obj, this);\n    this.dirty(false);\n    return this;\n  }\n};\nzrUtil.inherits(Displayable, Element);\nzrUtil.mixin(Displayable, RectText); // zrUtil.mixin(Displayable, Stateful);\n\nvar _default = Displayable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 33\n// module chunks = 0","/**\n * @param {Array.<Object>} colorStops\n */\nvar Gradient = function (colorStops) {\n  this.colorStops = colorStops || [];\n};\n\nGradient.prototype = {\n  constructor: Gradient,\n  addColorStop: function (offset, color) {\n    this.colorStops.push({\n      offset: offset,\n      color: color\n    });\n  }\n};\nvar _default = Gradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 34\n// module chunks = 0","var _util = require(\"../../core/util\");\n\nvar retrieve2 = _util.retrieve2;\nvar retrieve3 = _util.retrieve3;\nvar each = _util.each;\nvar normalizeCssArray = _util.normalizeCssArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\n\nvar textContain = require(\"../../contain/text\");\n\nvar roundRectHelper = require(\"./roundRect\");\n\nvar imageHelper = require(\"./image\");\n\n// TODO: Have not support 'start', 'end' yet.\nvar VALID_TEXT_ALIGN = {\n  left: 1,\n  right: 1,\n  center: 1\n};\nvar VALID_TEXT_VERTICAL_ALIGN = {\n  top: 1,\n  bottom: 1,\n  middle: 1\n};\n/**\n * @param {module:zrender/graphic/Style} style\n * @return {module:zrender/graphic/Style} The input style.\n */\n\nfunction normalizeTextStyle(style) {\n  normalizeStyle(style);\n  each(style.rich, normalizeStyle);\n  return style;\n}\n\nfunction normalizeStyle(style) {\n  if (style) {\n    style.font = textContain.makeFont(style);\n    var textAlign = style.textAlign;\n    textAlign === 'middle' && (textAlign = 'center');\n    style.textAlign = textAlign == null || VALID_TEXT_ALIGN[textAlign] ? textAlign : 'left'; // Compatible with textBaseline.\n\n    var textVerticalAlign = style.textVerticalAlign || style.textBaseline;\n    textVerticalAlign === 'center' && (textVerticalAlign = 'middle');\n    style.textVerticalAlign = textVerticalAlign == null || VALID_TEXT_VERTICAL_ALIGN[textVerticalAlign] ? textVerticalAlign : 'top';\n    var textPadding = style.textPadding;\n\n    if (textPadding) {\n      style.textPadding = normalizeCssArray(style.textPadding);\n    }\n  }\n}\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {string} text\n * @param {module:zrender/graphic/Style} style\n * @param {Object|boolean} [rect] {x, y, width, height}\n *                  If set false, rect text is not used.\n */\n\n\nfunction renderText(hostEl, ctx, text, style, rect) {\n  style.rich ? renderRichText(hostEl, ctx, text, style, rect) : renderPlainText(hostEl, ctx, text, style, rect);\n}\n\nfunction renderPlainText(hostEl, ctx, text, style, rect) {\n  var font = setCtx(ctx, 'font', style.font || textContain.DEFAULT_FONT);\n  var textPadding = style.textPadding;\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parsePlainText(text, font, textPadding, style.truncate);\n  }\n\n  var outerHeight = contentBlock.outerHeight;\n  var textLines = contentBlock.lines;\n  var lineHeight = contentBlock.lineHeight;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var textX = baseX;\n  var textY = boxY;\n  var needDrawBg = needDrawBackground(style);\n\n  if (needDrawBg || textPadding) {\n    // Consider performance, do not call getTextWidth util necessary.\n    var textWidth = textContain.getWidth(text, font);\n    var outerWidth = textWidth;\n    textPadding && (outerWidth += textPadding[1] + textPadding[3]);\n    var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n    needDrawBg && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n    if (textPadding) {\n      textX = getTextXForPadding(baseX, textAlign, textPadding);\n      textY += textPadding[0];\n    }\n  }\n\n  setCtx(ctx, 'textAlign', textAlign || 'left'); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle'); // Always set shadowBlur and shadowOffset to avoid leak from displayable.\n\n  setCtx(ctx, 'shadowBlur', style.textShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textShadowOffsetY || 0); // `textBaseline` is set as 'middle'.\n\n  textY += lineHeight / 2;\n  var textStrokeWidth = style.textStrokeWidth;\n  var textStroke = getStroke(style.textStroke, textStrokeWidth);\n  var textFill = getFill(style.textFill);\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n  }\n\n  for (var i = 0; i < textLines.length; i++) {\n    // Fill after stroke so the outline will not cover the main part.\n    textStroke && ctx.strokeText(textLines[i], textX, textY);\n    textFill && ctx.fillText(textLines[i], textX, textY);\n    textY += lineHeight;\n  }\n}\n\nfunction renderRichText(hostEl, ctx, text, style, rect) {\n  var contentBlock = hostEl.__textCotentBlock;\n\n  if (!contentBlock || hostEl.__dirty) {\n    contentBlock = hostEl.__textCotentBlock = textContain.parseRichText(text, style);\n  }\n\n  drawRichText(hostEl, ctx, contentBlock, style, rect);\n}\n\nfunction drawRichText(hostEl, ctx, contentBlock, style, rect) {\n  var contentWidth = contentBlock.width;\n  var outerWidth = contentBlock.outerWidth;\n  var outerHeight = contentBlock.outerHeight;\n  var textPadding = style.textPadding;\n  var boxPos = getBoxPosition(outerHeight, style, rect);\n  var baseX = boxPos.baseX;\n  var baseY = boxPos.baseY;\n  var textAlign = boxPos.textAlign;\n  var textVerticalAlign = boxPos.textVerticalAlign; // Origin of textRotation should be the base point of text drawing.\n\n  applyTextRotation(ctx, style, rect, baseX, baseY);\n  var boxX = textContain.adjustTextX(baseX, outerWidth, textAlign);\n  var boxY = textContain.adjustTextY(baseY, outerHeight, textVerticalAlign);\n  var xLeft = boxX;\n  var lineTop = boxY;\n\n  if (textPadding) {\n    xLeft += textPadding[3];\n    lineTop += textPadding[0];\n  }\n\n  var xRight = xLeft + contentWidth;\n  needDrawBackground(style) && drawBackground(hostEl, ctx, style, boxX, boxY, outerWidth, outerHeight);\n\n  for (var i = 0; i < contentBlock.lines.length; i++) {\n    var line = contentBlock.lines[i];\n    var tokens = line.tokens;\n    var tokenCount = tokens.length;\n    var lineHeight = line.lineHeight;\n    var usedWidth = line.width;\n    var leftIndex = 0;\n    var lineXLeft = xLeft;\n    var lineXRight = xRight;\n    var rightIndex = tokenCount - 1;\n    var token;\n\n    while (leftIndex < tokenCount && (token = tokens[leftIndex], !token.textAlign || token.textAlign === 'left')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft, 'left');\n      usedWidth -= token.width;\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    while (rightIndex >= 0 && (token = tokens[rightIndex], token.textAlign === 'right')) {\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXRight, 'right');\n      usedWidth -= token.width;\n      lineXRight -= token.width;\n      rightIndex--;\n    } // The other tokens are placed as textAlign 'center' if there is enough space.\n\n\n    lineXLeft += (contentWidth - (lineXLeft - xLeft) - (xRight - lineXRight) - usedWidth) / 2;\n\n    while (leftIndex <= rightIndex) {\n      token = tokens[leftIndex]; // Consider width specified by user, use 'center' rather than 'left'.\n\n      placeToken(hostEl, ctx, token, style, lineHeight, lineTop, lineXLeft + token.width / 2, 'center');\n      lineXLeft += token.width;\n      leftIndex++;\n    }\n\n    lineTop += lineHeight;\n  }\n}\n\nfunction applyTextRotation(ctx, style, rect, x, y) {\n  // textRotation only apply in RectText.\n  if (rect && style.textRotation) {\n    var origin = style.textOrigin;\n\n    if (origin === 'center') {\n      x = rect.width / 2 + rect.x;\n      y = rect.height / 2 + rect.y;\n    } else if (origin) {\n      x = origin[0] + rect.x;\n      y = origin[1] + rect.y;\n    }\n\n    ctx.translate(x, y); // Positive: anticlockwise\n\n    ctx.rotate(-style.textRotation);\n    ctx.translate(-x, -y);\n  }\n}\n\nfunction placeToken(hostEl, ctx, token, style, lineHeight, lineTop, x, textAlign) {\n  var tokenStyle = style.rich[token.styleName] || {}; // 'ctx.textBaseline' is always set as 'middle', for sake of\n  // the bias of \"Microsoft YaHei\".\n\n  var textVerticalAlign = token.textVerticalAlign;\n  var y = lineTop + lineHeight / 2;\n\n  if (textVerticalAlign === 'top') {\n    y = lineTop + token.height / 2;\n  } else if (textVerticalAlign === 'bottom') {\n    y = lineTop + lineHeight - token.height / 2;\n  }\n\n  !token.isLineHolder && needDrawBackground(tokenStyle) && drawBackground(hostEl, ctx, tokenStyle, textAlign === 'right' ? x - token.width : textAlign === 'center' ? x - token.width / 2 : x, y - token.height / 2, token.width, token.height);\n  var textPadding = token.textPadding;\n\n  if (textPadding) {\n    x = getTextXForPadding(x, textAlign, textPadding);\n    y -= token.height / 2 - textPadding[2] - token.textHeight / 2;\n  }\n\n  setCtx(ctx, 'shadowBlur', retrieve3(tokenStyle.textShadowBlur, style.textShadowBlur, 0));\n  setCtx(ctx, 'shadowColor', tokenStyle.textShadowColor || style.textShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', retrieve3(tokenStyle.textShadowOffsetX, style.textShadowOffsetX, 0));\n  setCtx(ctx, 'shadowOffsetY', retrieve3(tokenStyle.textShadowOffsetY, style.textShadowOffsetY, 0));\n  setCtx(ctx, 'textAlign', textAlign); // Force baseline to be \"middle\". Otherwise, if using \"top\", the\n  // text will offset downward a little bit in font \"Microsoft YaHei\".\n\n  setCtx(ctx, 'textBaseline', 'middle');\n  setCtx(ctx, 'font', token.font || textContain.DEFAULT_FONT);\n  var textStroke = getStroke(tokenStyle.textStroke || style.textStroke, textStrokeWidth);\n  var textFill = getFill(tokenStyle.textFill || style.textFill);\n  var textStrokeWidth = retrieve2(tokenStyle.textStrokeWidth, style.textStrokeWidth); // Fill after stroke so the outline will not cover the main part.\n\n  if (textStroke) {\n    setCtx(ctx, 'lineWidth', textStrokeWidth);\n    setCtx(ctx, 'strokeStyle', textStroke);\n    ctx.strokeText(token.text, x, y);\n  }\n\n  if (textFill) {\n    setCtx(ctx, 'fillStyle', textFill);\n    ctx.fillText(token.text, x, y);\n  }\n}\n\nfunction needDrawBackground(style) {\n  return style.textBackgroundColor || style.textBorderWidth && style.textBorderColor;\n} // style: {textBackgroundColor, textBorderWidth, textBorderColor, textBorderRadius}\n// shape: {x, y, width, height}\n\n\nfunction drawBackground(hostEl, ctx, style, x, y, width, height) {\n  var textBackgroundColor = style.textBackgroundColor;\n  var textBorderWidth = style.textBorderWidth;\n  var textBorderColor = style.textBorderColor;\n  var isPlainBg = isString(textBackgroundColor);\n  setCtx(ctx, 'shadowBlur', style.textBoxShadowBlur || 0);\n  setCtx(ctx, 'shadowColor', style.textBoxShadowColor || 'transparent');\n  setCtx(ctx, 'shadowOffsetX', style.textBoxShadowOffsetX || 0);\n  setCtx(ctx, 'shadowOffsetY', style.textBoxShadowOffsetY || 0);\n\n  if (isPlainBg || textBorderWidth && textBorderColor) {\n    ctx.beginPath();\n    var textBorderRadius = style.textBorderRadius;\n\n    if (!textBorderRadius) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        r: textBorderRadius\n      });\n    }\n\n    ctx.closePath();\n  }\n\n  if (isPlainBg) {\n    setCtx(ctx, 'fillStyle', textBackgroundColor);\n    ctx.fill();\n  } else if (isObject(textBackgroundColor)) {\n    var image = textBackgroundColor.image;\n    image = imageHelper.createOrUpdateImage(image, null, hostEl, onBgImageLoaded, textBackgroundColor);\n\n    if (image && imageHelper.isImageReady(image)) {\n      ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  if (textBorderWidth && textBorderColor) {\n    setCtx(ctx, 'lineWidth', textBorderWidth);\n    setCtx(ctx, 'strokeStyle', textBorderColor);\n    ctx.stroke();\n  }\n}\n\nfunction onBgImageLoaded(image, textBackgroundColor) {\n  // Replace image, so that `contain/text.js#parseRichText`\n  // will get correct result in next tick.\n  textBackgroundColor.image = image;\n}\n\nfunction getBoxPosition(blockHeiht, style, rect) {\n  var baseX = style.x || 0;\n  var baseY = style.y || 0;\n  var textAlign = style.textAlign;\n  var textVerticalAlign = style.textVerticalAlign; // Text position represented by coord\n\n  if (rect) {\n    var textPosition = style.textPosition;\n\n    if (textPosition instanceof Array) {\n      // Percent\n      baseX = rect.x + parsePercent(textPosition[0], rect.width);\n      baseY = rect.y + parsePercent(textPosition[1], rect.height);\n    } else {\n      var res = textContain.adjustTextPositionOnRect(textPosition, rect, style.textDistance);\n      baseX = res.x;\n      baseY = res.y; // Default align and baseline when has textPosition\n\n      textAlign = textAlign || res.textAlign;\n      textVerticalAlign = textVerticalAlign || res.textVerticalAlign;\n    } // textOffset is only support in RectText, otherwise\n    // we have to adjust boundingRect for textOffset.\n\n\n    var textOffset = style.textOffset;\n\n    if (textOffset) {\n      baseX += textOffset[0];\n      baseY += textOffset[1];\n    }\n  }\n\n  return {\n    baseX: baseX,\n    baseY: baseY,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nfunction setCtx(ctx, prop, value) {\n  // FIXME ??? performance try\n  // if (ctx.__currentValues[prop] !== value) {\n  // ctx[prop] = ctx.__currentValues[prop] = value;\n  ctx[prop] = value; // }\n\n  return ctx[prop];\n}\n/**\n * @param {string} [stroke] If specified, do not check style.textStroke.\n * @param {string} [lineWidth] If specified, do not check style.textStroke.\n * @param {number} style\n */\n\n\nfunction getStroke(stroke, lineWidth) {\n  return stroke == null || lineWidth <= 0 || stroke === 'transparent' || stroke === 'none' ? null // TODO pattern and gradient?\n  : stroke.image || stroke.colorStops ? '#000' : stroke;\n}\n\nfunction getFill(fill) {\n  return fill == null || fill === 'none' ? null // TODO pattern and gradient?\n  : fill.image || fill.colorStops ? '#000' : fill;\n}\n\nfunction parsePercent(value, maxValue) {\n  if (typeof value === 'string') {\n    if (value.lastIndexOf('%') >= 0) {\n      return parseFloat(value) / 100 * maxValue;\n    }\n\n    return parseFloat(value);\n  }\n\n  return value;\n}\n\nfunction getTextXForPadding(x, textAlign, textPadding) {\n  return textAlign === 'right' ? x - textPadding[1] : textAlign === 'center' ? x + textPadding[3] / 2 - textPadding[1] / 2 : x + textPadding[3];\n}\n/**\n * @param {string} text\n * @param {module:zrender/Style} style\n * @return {boolean}\n */\n\n\nfunction needDrawText(text, style) {\n  return text != null && (text || style.textBackgroundColor || style.textBorderWidth && style.textBorderColor || style.textPadding);\n}\n\nexports.normalizeTextStyle = normalizeTextStyle;\nexports.renderText = renderText;\nexports.getStroke = getStroke;\nexports.getFill = getFill;\nexports.needDrawText = needDrawText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/text.js\n// module id = 35\n// module chunks = 0","\n    var formatUtil = require('../../util/format');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    var AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single'];\n    // Supported coords.\n    var COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n\n    /**\n     * @param {string} coordType\n     * @return {boolean}\n     */\n    helper.isCoordSupported = function (coordType) {\n        return zrUtil.indexOf(COORDS, coordType) >= 0;\n    };\n\n    /**\n     * Create \"each\" method to iterate names.\n     *\n     * @pubilc\n     * @param  {Array.<string>} names\n     * @param  {Array.<string>=} attrs\n     * @return {Function}\n     */\n    helper.createNameEach = function (names, attrs) {\n        names = names.slice();\n        var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n        attrs = (attrs || []).slice();\n        var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n\n        return function (callback, context) {\n            zrUtil.each(names, function (name, index) {\n                var nameObj = {name: name, capital: capitalNames[index]};\n\n                for (var j = 0; j < attrs.length; j++) {\n                    nameObj[attrs[j]] = name + capitalAttrs[j];\n                }\n\n                callback.call(context, nameObj);\n            });\n        };\n    };\n\n    /**\n     * Iterate each dimension name.\n     *\n     * @public\n     * @param {Function} callback The parameter is like:\n     *                            {\n     *                                name: 'angle',\n     *                                capital: 'Angle',\n     *                                axis: 'angleAxis',\n     *                                axisIndex: 'angleAixs',\n     *                                index: 'angleIndex'\n     *                            }\n     * @param {Object} context\n     */\n    helper.eachAxisDim = helper.createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n\n    /**\n     * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n     * dataZoomModels and 'links' make up one or more graphics.\n     * This function finds the graphic where the source dataZoomModel is in.\n     *\n     * @public\n     * @param {Function} forEachNode Node iterator.\n     * @param {Function} forEachEdgeType edgeType iterator\n     * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n     * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n     */\n    helper.createLinkedNodesFinder = function (forEachNode, forEachEdgeType, edgeIdGetter) {\n\n        return function (sourceNode) {\n            var result = {\n                nodes: [],\n                records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n            };\n\n            forEachEdgeType(function (edgeType) {\n                result.records[edgeType.name] = {};\n            });\n\n            if (!sourceNode) {\n                return result;\n            }\n\n            absorb(sourceNode, result);\n\n            var existsLink;\n            do {\n                existsLink = false;\n                forEachNode(processSingleNode);\n            }\n            while (existsLink);\n\n            function processSingleNode(node) {\n                if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n                    absorb(node, result);\n                    existsLink = true;\n                }\n            }\n\n            return result;\n        };\n\n        function isNodeAbsorded(node, result) {\n            return zrUtil.indexOf(result.nodes, node) >= 0;\n        }\n\n        function isLinked(node, result) {\n            var hasLink = false;\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] && (hasLink = true);\n                });\n            });\n            return hasLink;\n        }\n\n        function absorb(node, result) {\n            result.nodes.push(node);\n            forEachEdgeType(function (edgeType) {\n                zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n                    result.records[edgeType.name][edgeId] = true;\n                });\n            });\n        }\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/helper.js\n// module id = 36\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 37\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string|Object>} dimensions\n     *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n     *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     * @param {Function} filter\n     */\n    listProto.getDataExtent = function (dim, stack, filter) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                if (!filter || filter(value, dim, i)) {\n                    value < min && (min = value);\n                    value > max && (max = value);\n                }\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {Array.<number>} Considere multiple points has the same value.\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var nearestIndices = [];\n\n        if (!dimData) {\n            return nearestIndices;\n        }\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n        for (var i = 0, len = this.count(); i < len; i++) {\n            var diff = value - this.get(dim, i, stack);\n            var dist = Math.abs(diff);\n            if (diff <= maxDistance && dist <= minDist) {\n                // For the case of two data are same on xAxis, which has sequence data.\n                // Show the nearest index\n                // https://github.com/ecomfe/echarts/issues/2869\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    nearestIndices.length = 0;\n                }\n                nearestIndices.push(i);\n            }\n        }\n        return nearestIndices;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 38\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Object} [opt]\n     * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n     * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, opt) {\n        if (!data) {\n            return dimensions;\n        }\n\n        opt = opt || {};\n\n        var dimCount = opt.dimCount;\n        if (dimCount == null) {\n            var value0 = retrieveValue(data[0]);\n            dimCount = zrUtil.isArray(value0) && value0.length || 1;\n        }\n\n        var defaultNames = opt.defaultNames || [];\n        var extraPrefix = opt.extraPrefix || 'extra';\n        for (var i = 0; i < dimCount; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 39\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes, includes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if ((excludes && zrUtil.indexOf(excludes, propName) >= 0)\n                    || (includes && zrUtil.indexOf(includes, propName) < 0)\n                ) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 40\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n    var helper = require('./helper');\n\n    var roundNumber = numberUtil.round;\n\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        _intervalPrecision: 2,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return helper.intervalScaleGetTicks(\n                this._interval, this._extent, this._niceExtent, this._intervalPrecision\n            );\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} data\n         * @param {Object} [opt]\n         * @param {number|string} [opt.precision] If 'auto', use nice presision.\n         * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n         * @return {string}\n         */\n        getLabel: function (data, opt) {\n            if (data == null) {\n                return '';\n            }\n\n            var precision = opt && opt.precision;\n\n            if (precision == null) {\n                precision = numberUtil.getPrecisionSafe(data) || 0;\n            }\n            else if (precision === 'auto') {\n                // Should be more precise then tick.\n                precision = this._intervalPrecision;\n            }\n\n            // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n            // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n            data = roundNumber(data, precision, true);\n\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            var result = helper.intervalScaleNiceTicks(extent, splitNumber);\n\n            this._intervalPrecision = result.intervalPrecision;\n            this._interval = result.interval;\n            this._niceExtent = result.niceTickExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 41\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 42\n// module chunks = 0","// https://github.com/mziccard/node-timsort\nvar DEFAULT_MIN_MERGE = 32;\nvar DEFAULT_MIN_GALLOPING = 7;\nvar DEFAULT_TMP_STORAGE_LENGTH = 256;\n\nfunction minRunLength(n) {\n  var r = 0;\n\n  while (n >= DEFAULT_MIN_MERGE) {\n    r |= n & 1;\n    n >>= 1;\n  }\n\n  return n + r;\n}\n\nfunction makeAscendingRun(array, lo, hi, compare) {\n  var runHi = lo + 1;\n\n  if (runHi === hi) {\n    return 1;\n  }\n\n  if (compare(array[runHi++], array[lo]) < 0) {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n      runHi++;\n    }\n\n    reverseRun(array, lo, runHi);\n  } else {\n    while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n      runHi++;\n    }\n  }\n\n  return runHi - lo;\n}\n\nfunction reverseRun(array, lo, hi) {\n  hi--;\n\n  while (lo < hi) {\n    var t = array[lo];\n    array[lo++] = array[hi];\n    array[hi--] = t;\n  }\n}\n\nfunction binaryInsertionSort(array, lo, hi, start, compare) {\n  if (start === lo) {\n    start++;\n  }\n\n  for (; start < hi; start++) {\n    var pivot = array[start];\n    var left = lo;\n    var right = start;\n    var mid;\n\n    while (left < right) {\n      mid = left + right >>> 1;\n\n      if (compare(pivot, array[mid]) < 0) {\n        right = mid;\n      } else {\n        left = mid + 1;\n      }\n    }\n\n    var n = start - left;\n\n    switch (n) {\n      case 3:\n        array[left + 3] = array[left + 2];\n\n      case 2:\n        array[left + 2] = array[left + 1];\n\n      case 1:\n        array[left + 1] = array[left];\n        break;\n\n      default:\n        while (n > 0) {\n          array[left + n] = array[left + n - 1];\n          n--;\n        }\n\n    }\n\n    array[left] = pivot;\n  }\n}\n\nfunction gallopLeft(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) > 0) {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  } else {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) > 0) {\n      lastOffset = m + 1;\n    } else {\n      offset = m;\n    }\n  }\n\n  return offset;\n}\n\nfunction gallopRight(value, array, start, length, hint, compare) {\n  var lastOffset = 0;\n  var maxOffset = 0;\n  var offset = 1;\n\n  if (compare(value, array[start + hint]) < 0) {\n    maxOffset = hint + 1;\n\n    while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    var tmp = lastOffset;\n    lastOffset = hint - offset;\n    offset = hint - tmp;\n  } else {\n    maxOffset = length - hint;\n\n    while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n      lastOffset = offset;\n      offset = (offset << 1) + 1;\n\n      if (offset <= 0) {\n        offset = maxOffset;\n      }\n    }\n\n    if (offset > maxOffset) {\n      offset = maxOffset;\n    }\n\n    lastOffset += hint;\n    offset += hint;\n  }\n\n  lastOffset++;\n\n  while (lastOffset < offset) {\n    var m = lastOffset + (offset - lastOffset >>> 1);\n\n    if (compare(value, array[start + m]) < 0) {\n      offset = m;\n    } else {\n      lastOffset = m + 1;\n    }\n  }\n\n  return offset;\n}\n\nfunction TimSort(array, compare) {\n  var minGallop = DEFAULT_MIN_GALLOPING;\n  var length = 0;\n  var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n  var stackLength = 0;\n  var runStart;\n  var runLength;\n  var stackSize = 0;\n  length = array.length;\n\n  if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n    tmpStorageLength = length >>> 1;\n  }\n\n  var tmp = [];\n  stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n  runStart = [];\n  runLength = [];\n\n  function pushRun(_runStart, _runLength) {\n    runStart[stackSize] = _runStart;\n    runLength[stackSize] = _runLength;\n    stackSize += 1;\n  }\n\n  function mergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n        if (runLength[n - 1] < runLength[n + 1]) {\n          n--;\n        }\n      } else if (runLength[n] > runLength[n + 1]) {\n        break;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function forceMergeRuns() {\n    while (stackSize > 1) {\n      var n = stackSize - 2;\n\n      if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n        n--;\n      }\n\n      mergeAt(n);\n    }\n  }\n\n  function mergeAt(i) {\n    var start1 = runStart[i];\n    var length1 = runLength[i];\n    var start2 = runStart[i + 1];\n    var length2 = runLength[i + 1];\n    runLength[i] = length1 + length2;\n\n    if (i === stackSize - 3) {\n      runStart[i + 1] = runStart[i + 2];\n      runLength[i + 1] = runLength[i + 2];\n    }\n\n    stackSize--;\n    var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n    start1 += k;\n    length1 -= k;\n\n    if (length1 === 0) {\n      return;\n    }\n\n    length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n    if (length2 === 0) {\n      return;\n    }\n\n    if (length1 <= length2) {\n      mergeLow(start1, length1, start2, length2);\n    } else {\n      mergeHigh(start1, length1, start2, length2);\n    }\n  }\n\n  function mergeLow(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length1; i++) {\n      tmp[i] = array[start1 + i];\n    }\n\n    var cursor1 = 0;\n    var cursor2 = start2;\n    var dest = start1;\n    array[dest++] = array[cursor2++];\n\n    if (--length2 === 0) {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n\n      return;\n    }\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n      return;\n    }\n\n    var _minGallop = minGallop;\n    var count1, count2, exit;\n\n    while (1) {\n      count1 = 0;\n      count2 = 0;\n      exit = false;\n\n      do {\n        if (compare(array[cursor2], tmp[cursor1]) < 0) {\n          array[dest++] = array[cursor2++];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest++] = tmp[cursor1++];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n        if (count1 !== 0) {\n          for (i = 0; i < count1; i++) {\n            array[dest + i] = tmp[cursor1 + i];\n          }\n\n          dest += count1;\n          cursor1 += count1;\n          length1 -= count1;\n\n          if (length1 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = array[cursor2++];\n\n        if (--length2 === 0) {\n          exit = true;\n          break;\n        }\n\n        count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n        if (count2 !== 0) {\n          for (i = 0; i < count2; i++) {\n            array[dest + i] = array[cursor2 + i];\n          }\n\n          dest += count2;\n          cursor2 += count2;\n          length2 -= count2;\n\n          if (length2 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest++] = tmp[cursor1++];\n\n        if (--length1 === 1) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n    minGallop < 1 && (minGallop = 1);\n\n    if (length1 === 1) {\n      for (i = 0; i < length2; i++) {\n        array[dest + i] = array[cursor2 + i];\n      }\n\n      array[dest + length2] = tmp[cursor1];\n    } else if (length1 === 0) {\n      throw new Error(); // throw new Error('mergeLow preconditions were not respected');\n    } else {\n      for (i = 0; i < length1; i++) {\n        array[dest + i] = tmp[cursor1 + i];\n      }\n    }\n  }\n\n  function mergeHigh(start1, length1, start2, length2) {\n    var i = 0;\n\n    for (i = 0; i < length2; i++) {\n      tmp[i] = array[start2 + i];\n    }\n\n    var cursor1 = start1 + length1 - 1;\n    var cursor2 = length2 - 1;\n    var dest = start2 + length2 - 1;\n    var customCursor = 0;\n    var customDest = 0;\n    array[dest--] = array[cursor1--];\n\n    if (--length1 === 0) {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n\n      return;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n      return;\n    }\n\n    var _minGallop = minGallop;\n\n    while (true) {\n      var count1 = 0;\n      var count2 = 0;\n      var exit = false;\n\n      do {\n        if (compare(tmp[cursor2], array[cursor1]) < 0) {\n          array[dest--] = array[cursor1--];\n          count1++;\n          count2 = 0;\n\n          if (--length1 === 0) {\n            exit = true;\n            break;\n          }\n        } else {\n          array[dest--] = tmp[cursor2--];\n          count2++;\n          count1 = 0;\n\n          if (--length2 === 1) {\n            exit = true;\n            break;\n          }\n        }\n      } while ((count1 | count2) < _minGallop);\n\n      if (exit) {\n        break;\n      }\n\n      do {\n        count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n        if (count1 !== 0) {\n          dest -= count1;\n          cursor1 -= count1;\n          length1 -= count1;\n          customDest = dest + 1;\n          customCursor = cursor1 + 1;\n\n          for (i = count1 - 1; i >= 0; i--) {\n            array[customDest + i] = array[customCursor + i];\n          }\n\n          if (length1 === 0) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = tmp[cursor2--];\n\n        if (--length2 === 1) {\n          exit = true;\n          break;\n        }\n\n        count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n        if (count2 !== 0) {\n          dest -= count2;\n          cursor2 -= count2;\n          length2 -= count2;\n          customDest = dest + 1;\n          customCursor = cursor2 + 1;\n\n          for (i = 0; i < count2; i++) {\n            array[customDest + i] = tmp[customCursor + i];\n          }\n\n          if (length2 <= 1) {\n            exit = true;\n            break;\n          }\n        }\n\n        array[dest--] = array[cursor1--];\n\n        if (--length1 === 0) {\n          exit = true;\n          break;\n        }\n\n        _minGallop--;\n      } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n      if (exit) {\n        break;\n      }\n\n      if (_minGallop < 0) {\n        _minGallop = 0;\n      }\n\n      _minGallop += 2;\n    }\n\n    minGallop = _minGallop;\n\n    if (minGallop < 1) {\n      minGallop = 1;\n    }\n\n    if (length2 === 1) {\n      dest -= length1;\n      cursor1 -= length1;\n      customDest = dest + 1;\n      customCursor = cursor1 + 1;\n\n      for (i = length1 - 1; i >= 0; i--) {\n        array[customDest + i] = array[customCursor + i];\n      }\n\n      array[dest] = tmp[cursor2];\n    } else if (length2 === 0) {\n      throw new Error(); // throw new Error('mergeHigh preconditions were not respected');\n    } else {\n      customCursor = dest - (length2 - 1);\n\n      for (i = 0; i < length2; i++) {\n        array[customCursor + i] = tmp[i];\n      }\n    }\n  }\n\n  this.mergeRuns = mergeRuns;\n  this.forceMergeRuns = forceMergeRuns;\n  this.pushRun = pushRun;\n}\n\nfunction sort(array, compare, lo, hi) {\n  if (!lo) {\n    lo = 0;\n  }\n\n  if (!hi) {\n    hi = array.length;\n  }\n\n  var remaining = hi - lo;\n\n  if (remaining < 2) {\n    return;\n  }\n\n  var runLength = 0;\n\n  if (remaining < DEFAULT_MIN_MERGE) {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n    binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n    return;\n  }\n\n  var ts = new TimSort(array, compare);\n  var minRun = minRunLength(remaining);\n\n  do {\n    runLength = makeAscendingRun(array, lo, hi, compare);\n\n    if (runLength < minRun) {\n      var force = remaining;\n\n      if (force > minRun) {\n        force = minRun;\n      }\n\n      binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n      runLength = force;\n    }\n\n    ts.pushRun(lo, runLength);\n    ts.mergeRuns();\n    remaining -= runLength;\n    lo += runLength;\n  } while (remaining !== 0);\n\n  ts.forceMergeRuns();\n}\n\nmodule.exports = sort;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 43\n// module chunks = 0","var Pattern = function (image, repeat) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {image: ...}`, where this constructor will not be called.\n  this.image = image;\n  this.repeat = repeat; // Can be cloned\n\n  this.type = 'pattern';\n};\n\nPattern.prototype.getCanvasPattern = function (ctx) {\n  return ctx.createPattern(this.image, this.repeat || 'repeat');\n};\n\nvar _default = Pattern;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 44\n// module chunks = 0","var LRU = require(\"../../core/LRU\");\n\nvar globalImageCache = new LRU(50);\n/**\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\nfunction findExistImage(newImageOrSrc) {\n  if (typeof newImageOrSrc === 'string') {\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    return cachedImgObj && cachedImgObj.image;\n  } else {\n    return newImageOrSrc;\n  }\n}\n/**\n * Caution: User should cache loaded images, but not just count on LRU.\n * Consider if required images more than LRU size, will dead loop occur?\n *\n * @param {string|HTMLImageElement|HTMLCanvasElement|Canvas} newImageOrSrc\n * @param {HTMLImageElement|HTMLCanvasElement|Canvas} image Existent image.\n * @param {module:zrender/Element} [hostEl] For calling `dirty`.\n * @param {Function} [cb] params: (image, cbPayload)\n * @param {Object} [cbPayload] Payload on cb calling.\n * @return {HTMLImageElement|HTMLCanvasElement|Canvas} image\n */\n\n\nfunction createOrUpdateImage(newImageOrSrc, image, hostEl, cb, cbPayload) {\n  if (!newImageOrSrc) {\n    return image;\n  } else if (typeof newImageOrSrc === 'string') {\n    // Image should not be loaded repeatly.\n    if (image && image.__zrImageSrc === newImageOrSrc || !hostEl) {\n      return image;\n    } // Only when there is no existent image or existent image src\n    // is different, this method is responsible for load.\n\n\n    var cachedImgObj = globalImageCache.get(newImageOrSrc);\n    var pendingWrap = {\n      hostEl: hostEl,\n      cb: cb,\n      cbPayload: cbPayload\n    };\n\n    if (cachedImgObj) {\n      image = cachedImgObj.image;\n      !isImageReady(image) && cachedImgObj.pending.push(pendingWrap);\n    } else {\n      !image && (image = new Image());\n      image.onload = imageOnLoad;\n      globalImageCache.put(newImageOrSrc, image.__cachedImgObj = {\n        image: image,\n        pending: [pendingWrap]\n      });\n      image.src = image.__zrImageSrc = newImageOrSrc;\n    }\n\n    return image;\n  } // newImageOrSrc is an HTMLImageElement or HTMLCanvasElement or Canvas\n  else {\n      return newImageOrSrc;\n    }\n}\n\nfunction imageOnLoad() {\n  var cachedImgObj = this.__cachedImgObj;\n  this.onload = this.__cachedImgObj = null;\n\n  for (var i = 0; i < cachedImgObj.pending.length; i++) {\n    var pendingWrap = cachedImgObj.pending[i];\n    var cb = pendingWrap.cb;\n    cb && cb(this, pendingWrap.cbPayload);\n    pendingWrap.hostEl.dirty();\n  }\n\n  cachedImgObj.pending.length = 0;\n}\n\nfunction isImageReady(image) {\n  return image && image.width && image.height;\n}\n\nexports.findExistImage = findExistImage;\nexports.createOrUpdateImage = createOrUpdateImage;\nexports.isImageReady = isImageReady;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/image.js\n// module id = 45\n// module chunks = 0","var svgURI = 'http://www.w3.org/2000/svg';\n\nfunction createElement(name) {\n  return document.createElementNS(svgURI, name);\n}\n\nexports.createElement = createElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/core.js\n// module id = 46\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar Text = require(\"../graphic/Text\");\n\n// TODO\n// 1. shadow\n// 2. Image: sx, sy, sw, sh\nvar CMD = PathProxy.CMD;\nvar arrayJoin = Array.prototype.join;\nvar NONE = 'none';\nvar mathRound = Math.round;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\nvar PI2 = Math.PI * 2;\nvar degree = 180 / PI;\nvar EPSILON = 1e-4;\n\nfunction round4(val) {\n  return mathRound(val * 1e4) / 1e4;\n}\n\nfunction isAroundZero(val) {\n  return val < EPSILON && val > -EPSILON;\n}\n\nfunction pathHasFill(style, isText) {\n  var fill = isText ? style.textFill : style.fill;\n  return fill != null && fill !== NONE;\n}\n\nfunction pathHasStroke(style, isText) {\n  var stroke = isText ? style.textStroke : style.stroke;\n  return stroke != null && stroke !== NONE;\n}\n\nfunction setTransform(svgEl, m) {\n  if (m) {\n    attr(svgEl, 'transform', 'matrix(' + arrayJoin.call(m, ',') + ')');\n  }\n}\n\nfunction attr(el, key, val) {\n  if (!val || val.type !== 'linear' && val.type !== 'radial') {\n    // Don't set attribute for gradient, since it need new dom nodes\n    el.setAttribute(key, val);\n  }\n}\n\nfunction attrXLink(el, key, val) {\n  el.setAttributeNS('http://www.w3.org/1999/xlink', key, val);\n}\n\nfunction bindStyle(svgEl, style, isText) {\n  if (pathHasFill(style, isText)) {\n    var fill = isText ? style.textFill : style.fill;\n    fill = fill === 'transparent' ? NONE : fill;\n    /**\n     * FIXME:\n     * This is a temporary fix for Chrome's clipping bug\n     * that happens when a clip-path is referring another one.\n     * This fix should be used before Chrome's bug is fixed.\n     * For an element that has clip-path, and fill is none,\n     * set it to be \"rgba(0, 0, 0, 0.002)\" will hide the element.\n     * Otherwise, it will show black fill color.\n     * 0.002 is used because this won't work for alpha values smaller\n     * than 0.002.\n     *\n     * See\n     * https://bugs.chromium.org/p/chromium/issues/detail?id=659790\n     * for more information.\n     */\n\n    if (svgEl.getAttribute('clip-path') !== 'none' && fill === NONE) {\n      fill = 'rgba(0, 0, 0, 0.002)';\n    }\n\n    attr(svgEl, 'fill', fill);\n    attr(svgEl, 'fill-opacity', style.opacity);\n  } else {\n    attr(svgEl, 'fill', NONE);\n  }\n\n  if (pathHasStroke(style, isText)) {\n    var stroke = isText ? style.textStroke : style.stroke;\n    stroke = stroke === 'transparent' ? NONE : stroke;\n    attr(svgEl, 'stroke', stroke);\n    var strokeWidth = isText ? style.textStrokeWidth : style.lineWidth;\n    var strokeScale = style.strokeNoScale ? style.host.getLineScale() : 1;\n    attr(svgEl, 'stroke-width', strokeWidth / strokeScale);\n    attr(svgEl, 'paint-order', 'stroke');\n    attr(svgEl, 'stroke-opacity', style.opacity);\n    var lineDash = style.lineDash;\n\n    if (lineDash) {\n      attr(svgEl, 'stroke-dasharray', style.lineDash.join(','));\n      attr(svgEl, 'stroke-dashoffset', mathRound(style.lineDashOffset || 0));\n    } else {\n      attr(svgEl, 'stroke-dasharray', '');\n    } // PENDING\n\n\n    style.lineCap && attr(svgEl, 'stroke-linecap', style.lineCap);\n    style.lineJoin && attr(svgEl, 'stroke-linejoin', style.lineJoin);\n    style.miterLimit && attr(svgEl, 'stroke-miterlimit', style.miterLimit);\n  } else {\n    attr(svgEl, 'stroke', NONE);\n  }\n}\n/***************************************************\n * PATH\n **************************************************/\n\n\nfunction pathDataToString(path) {\n  var str = [];\n  var data = path.data;\n  var dataLength = path.len();\n\n  for (var i = 0; i < dataLength;) {\n    var cmd = data[i++];\n    var cmdStr = '';\n    var nData = 0;\n\n    switch (cmd) {\n      case CMD.M:\n        cmdStr = 'M';\n        nData = 2;\n        break;\n\n      case CMD.L:\n        cmdStr = 'L';\n        nData = 2;\n        break;\n\n      case CMD.Q:\n        cmdStr = 'Q';\n        nData = 4;\n        break;\n\n      case CMD.C:\n        cmdStr = 'C';\n        nData = 6;\n        break;\n\n      case CMD.A:\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++];\n        var psi = data[i++];\n        var clockwise = data[i++];\n        var dThetaPositive = Math.abs(dTheta);\n        var isCircle = isAroundZero(dThetaPositive % PI2) && !isAroundZero(dThetaPositive);\n        var large = false;\n\n        if (dThetaPositive >= PI2) {\n          large = true;\n        } else if (isAroundZero(dThetaPositive)) {\n          large = false;\n        } else {\n          large = (dTheta > -PI && dTheta < 0 || dTheta > PI) === !!clockwise;\n        }\n\n        var x0 = round4(cx + rx * mathCos(theta));\n        var y0 = round4(cy + ry * mathSin(theta)); // It will not draw if start point and end point are exactly the same\n        // We need to shift the end point with a small value\n        // FIXME A better way to draw circle ?\n\n        if (isCircle) {\n          if (clockwise) {\n            dTheta = PI2 - 1e-4;\n          } else {\n            dTheta = -PI2 + 1e-4;\n          }\n\n          large = true;\n\n          if (i === 9) {\n            // Move to (x0, y0) only when CMD.A comes at the\n            // first position of a shape.\n            // For instance, when drawing a ring, CMD.A comes\n            // after CMD.M, so it's unnecessary to move to\n            // (x0, y0).\n            str.push('M', x0, y0);\n          }\n        }\n\n        var x = round4(cx + rx * mathCos(theta + dTheta));\n        var y = round4(cy + ry * mathSin(theta + dTheta)); // FIXME Ellipse\n\n        str.push('A', round4(rx), round4(ry), mathRound(psi * degree), +large, +clockwise, x, y);\n        break;\n\n      case CMD.Z:\n        cmdStr = 'Z';\n        break;\n\n      case CMD.R:\n        var x = round4(data[i++]);\n        var y = round4(data[i++]);\n        var w = round4(data[i++]);\n        var h = round4(data[i++]);\n        str.push('M', x, y, 'L', x + w, y, 'L', x + w, y + h, 'L', x, y + h, 'L', x, y);\n        break;\n    }\n\n    cmdStr && str.push(cmdStr);\n\n    for (var j = 0; j < nData; j++) {\n      // PENDING With scale\n      str.push(round4(data[i++]));\n    }\n  }\n\n  return str.join(' ');\n}\n\nvar svgPath = {};\n\nsvgPath.brush = function (el) {\n  var style = el.style;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('path');\n    el.__svgEl = svgEl;\n  }\n\n  if (!el.path) {\n    el.createPathProxy();\n  }\n\n  var path = el.path;\n\n  if (el.__dirtyPath) {\n    path.beginPath();\n    el.buildPath(path, el.shape);\n    el.__dirtyPath = false;\n    var pathStr = pathDataToString(path);\n\n    if (pathStr.indexOf('NaN') < 0) {\n      // Ignore illegal path, which may happen such in out-of-range\n      // data in Calendar series.\n      attr(svgEl, 'd', pathStr);\n    }\n  }\n\n  bindStyle(svgEl, style);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * IMAGE\n **************************************************/\n\n\nvar svgImage = {};\n\nsvgImage.brush = function (el) {\n  var style = el.style;\n  var image = style.image;\n\n  if (image instanceof HTMLImageElement) {\n    var src = image.src;\n    image = src;\n  }\n\n  if (!image) {\n    return;\n  }\n\n  var x = style.x || 0;\n  var y = style.y || 0;\n  var dw = style.width;\n  var dh = style.height;\n  var svgEl = el.__svgEl;\n\n  if (!svgEl) {\n    svgEl = createElement('image');\n    el.__svgEl = svgEl;\n  }\n\n  if (image !== el.__imageSrc) {\n    attrXLink(svgEl, 'href', image); // Caching image src\n\n    el.__imageSrc = image;\n  }\n\n  attr(svgEl, 'width', dw);\n  attr(svgEl, 'height', dh);\n  attr(svgEl, 'x', x);\n  attr(svgEl, 'y', y);\n  setTransform(svgEl, el.transform);\n\n  if (style.text != null) {\n    svgTextDrawRectText(el, el.getBoundingRect());\n  }\n};\n/***************************************************\n * TEXT\n **************************************************/\n\n\nvar svgText = {};\nvar tmpRect = new BoundingRect();\n\nvar svgTextDrawRectText = function (el, rect, textRect) {\n  var style = el.style;\n  el.__dirty && textHelper.normalizeTextStyle(style, true);\n  var text = style.text; // Convert to string\n\n  if (text == null) {\n    // Draw no text only when text is set to null, but not ''\n    return;\n  } else {\n    text += '';\n  }\n\n  var textSvgEl = el.__textSvgEl;\n\n  if (!textSvgEl) {\n    textSvgEl = createElement('text');\n    el.__textSvgEl = textSvgEl;\n  }\n\n  bindStyle(textSvgEl, style, true);\n\n  if (el instanceof Text || el.style.transformText) {\n    // Transform text with element\n    setTransform(textSvgEl, el.transform);\n  } else {\n    if (el.transform) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(el.transform);\n      rect = tmpRect;\n    } else {\n      var pos = el.transformCoordToGlobal(rect.x, rect.y);\n      rect.x = pos[0];\n      rect.y = pos[1];\n    }\n  }\n\n  var x;\n  var y;\n  var textPosition = style.textPosition;\n  var distance = style.textDistance;\n  var align = style.textAlign || 'left';\n\n  if (typeof style.fontSize === 'number') {\n    style.fontSize += 'px';\n  }\n\n  var font = style.font || [style.fontStyle || '', style.fontWeight || '', style.fontSize || '', style.fontFamily || ''].join(' ') || textContain.DEFAULT_FONT;\n  var verticalAlign = getVerticalAlignForSvg(style.textVerticalAlign);\n  textRect = textContain.getBoundingRect(text, font, align, verticalAlign);\n  var lineHeight = textRect.lineHeight; // Text position represented by coord\n\n  if (textPosition instanceof Array) {\n    x = rect.x + textPosition[0];\n    y = rect.y + textPosition[1];\n  } else {\n    var newPos = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n    x = newPos.x;\n    y = newPos.y;\n    verticalAlign = getVerticalAlignForSvg(newPos.textVerticalAlign);\n    align = newPos.textAlign;\n  }\n\n  attr(textSvgEl, 'alignment-baseline', verticalAlign);\n\n  if (font) {\n    textSvgEl.style.font = font;\n  }\n\n  var textPadding = style.textPadding; // Make baseline top\n\n  attr(textSvgEl, 'x', x);\n  attr(textSvgEl, 'y', y);\n  var textLines = text.split('\\n');\n  var nTextLines = textLines.length;\n  var textAnchor = align; // PENDING\n\n  if (textAnchor === 'left') {\n    textAnchor = 'start';\n    textPadding && (x += textPadding[3]);\n  } else if (textAnchor === 'right') {\n    textAnchor = 'end';\n    textPadding && (x -= textPadding[1]);\n  } else if (textAnchor === 'center') {\n    textAnchor = 'middle';\n    textPadding && (x += (textPadding[3] - textPadding[1]) / 2);\n  }\n\n  var dy = 0;\n\n  if (verticalAlign === 'baseline') {\n    dy = -textRect.height + lineHeight;\n    textPadding && (dy -= textPadding[2]);\n  } else if (verticalAlign === 'middle') {\n    dy = (-textRect.height + lineHeight) / 2;\n    textPadding && (y += (textPadding[0] - textPadding[2]) / 2);\n  } else {\n    textPadding && (dy += textPadding[0]);\n  } // Font may affect position of each tspan elements\n\n\n  if (el.__text !== text || el.__textFont !== font) {\n    var tspanList = el.__tspanList || [];\n    el.__tspanList = tspanList;\n\n    for (var i = 0; i < nTextLines; i++) {\n      // Using cached tspan elements\n      var tspan = tspanList[i];\n\n      if (!tspan) {\n        tspan = tspanList[i] = createElement('tspan');\n        textSvgEl.appendChild(tspan);\n        attr(tspan, 'alignment-baseline', verticalAlign);\n        attr(tspan, 'text-anchor', textAnchor);\n      } else {\n        tspan.innerHTML = '';\n      }\n\n      attr(tspan, 'x', x);\n      attr(tspan, 'y', y + i * lineHeight + dy);\n      tspan.appendChild(document.createTextNode(textLines[i]));\n    } // Remove unsed tspan elements\n\n\n    for (; i < tspanList.length; i++) {\n      textSvgEl.removeChild(tspanList[i]);\n    }\n\n    tspanList.length = nTextLines;\n    el.__text = text;\n    el.__textFont = font;\n  } else if (el.__tspanList.length) {\n    // Update span x and y\n    var len = el.__tspanList.length;\n\n    for (var i = 0; i < len; ++i) {\n      var tspan = el.__tspanList[i];\n\n      if (tspan) {\n        attr(tspan, 'x', x);\n        attr(tspan, 'y', y + i * lineHeight + dy);\n      }\n    }\n  }\n};\n\nfunction getVerticalAlignForSvg(verticalAlign) {\n  if (verticalAlign === 'middle') {\n    return 'middle';\n  } else if (verticalAlign === 'bottom') {\n    return 'baseline';\n  } else {\n    return 'hanging';\n  }\n}\n\nsvgText.drawRectText = svgTextDrawRectText;\n\nsvgText.brush = function (el) {\n  var style = el.style;\n\n  if (style.text != null) {\n    // 强制设置 textPosition\n    style.textPosition = [0, 0];\n    svgTextDrawRectText(el, {\n      x: style.x || 0,\n      y: style.y || 0,\n      width: 0,\n      height: 0\n    }, el.getBoundingRect());\n  }\n};\n\nexports.path = svgPath;\nexports.image = svgImage;\nexports.text = svgText;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/graphic.js\n// module id = 47\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar env = require(\"./core/env\");\n\nvar zrUtil = require(\"./core/util\");\n\nvar Handler = require(\"./Handler\");\n\nvar Storage = require(\"./Storage\");\n\nvar Painter = require(\"./Painter\");\n\nvar Animation = require(\"./animation/Animation\");\n\nvar HandlerProxy = require(\"./dom/HandlerProxy\");\n\n/*!\n* ZRender, a high performance 2d drawing library.\n*\n* Copyright (c) 2013, Baidu Inc.\n* All rights reserved.\n*\n* LICENSE\n* https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n*/\nvar useVML = !env.canvasSupported;\nvar painterCtors = {\n  canvas: Painter\n};\nvar instances = {}; // ZRender实例map索引\n\n/**\n * @type {string}\n */\n\nvar version = '3.7.4';\n/**\n * Initializing a zrender instance\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n * @return {module:zrender/ZRender}\n */\n\nfunction init(dom, opts) {\n  var zr = new ZRender(guid(), dom, opts);\n  instances[zr.id] = zr;\n  return zr;\n}\n/**\n * Dispose zrender instance\n * @param {module:zrender/ZRender} zr\n */\n\n\nfunction dispose(zr) {\n  if (zr) {\n    zr.dispose();\n  } else {\n    for (var key in instances) {\n      if (instances.hasOwnProperty(key)) {\n        instances[key].dispose();\n      }\n    }\n\n    instances = {};\n  }\n\n  return this;\n}\n/**\n * Get zrender instance by id\n * @param {string} id zrender instance id\n * @return {module:zrender/ZRender}\n */\n\n\nfunction getInstance(id) {\n  return instances[id];\n}\n\nfunction registerPainter(name, Ctor) {\n  painterCtors[name] = Ctor;\n}\n\nfunction delInstance(id) {\n  delete instances[id];\n}\n/**\n * @module zrender/ZRender\n */\n\n/**\n * @constructor\n * @alias module:zrender/ZRender\n * @param {string} id\n * @param {HTMLElement} dom\n * @param {Object} opts\n * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n * @param {number} [opts.devicePixelRatio]\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n */\n\n\nvar ZRender = function (id, dom, opts) {\n  opts = opts || {};\n  /**\n   * @type {HTMLDomElement}\n   */\n\n  this.dom = dom;\n  /**\n   * @type {string}\n   */\n\n  this.id = id;\n  var self = this;\n  var storage = new Storage();\n  var rendererType = opts.renderer; // TODO WebGL\n\n  if (useVML) {\n    if (!painterCtors.vml) {\n      throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n    }\n\n    rendererType = 'vml';\n  } else if (!rendererType || !painterCtors[rendererType]) {\n    rendererType = 'canvas';\n  }\n\n  var painter = new painterCtors[rendererType](dom, storage, opts);\n  this.storage = storage;\n  this.painter = painter;\n  var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n  this.handler = new Handler(storage, painter, handerProxy, painter.root);\n  /**\n   * @type {module:zrender/animation/Animation}\n   */\n\n  this.animation = new Animation({\n    stage: {\n      update: zrUtil.bind(this.flush, this)\n    }\n  });\n  this.animation.start();\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._needsRefresh; // 修改 storage.delFromStorage, 每次删除元素之前删除动画\n  // FIXME 有点ugly\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n    el && el.removeSelfFromZr(self);\n  };\n\n  storage.addToStorage = function (el) {\n    oldAddToStorage.call(storage, el);\n    el.addSelfToZr(self);\n  };\n};\n\nZRender.prototype = {\n  constructor: ZRender,\n\n  /**\n   * 获取实例唯一标识\n   * @return {string}\n   */\n  getId: function () {\n    return this.id;\n  },\n\n  /**\n   * 添加元素\n   * @param  {module:zrender/Element} el\n   */\n  add: function (el) {\n    this.storage.addRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * 删除元素\n   * @param  {module:zrender/Element} el\n   */\n  remove: function (el) {\n    this.storage.delRoot(el);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Change configuration of layer\n   * @param {string} zLevel\n   * @param {Object} config\n   * @param {string} [config.clearColor=0] Clear color\n   * @param {string} [config.motionBlur=false] If enable motion blur\n   * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n  */\n  configLayer: function (zLevel, config) {\n    this.painter.configLayer(zLevel, config);\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Repaint the canvas immediately\n   */\n  refreshImmediately: function () {\n    // var start = new Date();\n    // Clear needsRefresh ahead to avoid something wrong happens in refresh\n    // Or it will cause zrender refreshes again and again.\n    this._needsRefresh = false;\n    this.painter.refresh();\n    /**\n     * Avoid trigger zr.refresh in Element#beforeUpdate hook\n     */\n\n    this._needsRefresh = false; // var end = new Date();\n    // var log = document.getElementById('log');\n    // if (log) {\n    //     log.innerHTML = log.innerHTML + '<br>' + (end - start);\n    // }\n  },\n\n  /**\n   * Mark and repaint the canvas in the next frame of browser\n   */\n  refresh: function () {\n    this._needsRefresh = true;\n  },\n\n  /**\n   * Perform all refresh\n   */\n  flush: function () {\n    if (this._needsRefresh) {\n      this.refreshImmediately();\n    }\n\n    if (this._needsRefreshHover) {\n      this.refreshHoverImmediately();\n    }\n  },\n\n  /**\n   * Add element to hover layer\n   * @param  {module:zrender/Element} el\n   * @param {Object} style\n   */\n  addHover: function (el, style) {\n    if (this.painter.addHover) {\n      this.painter.addHover(el, style);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Add element from hover layer\n   * @param  {module:zrender/Element} el\n   */\n  removeHover: function (el) {\n    if (this.painter.removeHover) {\n      this.painter.removeHover(el);\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Clear all hover elements in hover layer\n   * @param  {module:zrender/Element} el\n   */\n  clearHover: function () {\n    if (this.painter.clearHover) {\n      this.painter.clearHover();\n      this.refreshHover();\n    }\n  },\n\n  /**\n   * Refresh hover in next frame\n   */\n  refreshHover: function () {\n    this._needsRefreshHover = true;\n  },\n\n  /**\n   * Refresh hover immediately\n   */\n  refreshHoverImmediately: function () {\n    this._needsRefreshHover = false;\n    this.painter.refreshHover && this.painter.refreshHover();\n  },\n\n  /**\n   * Resize the canvas.\n   * Should be invoked when container size is changed\n   * @param {Object} [opts]\n   * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n   * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n   */\n  resize: function (opts) {\n    opts = opts || {};\n    this.painter.resize(opts.width, opts.height);\n    this.handler.resize();\n  },\n\n  /**\n   * Stop and clear all animation immediately\n   */\n  clearAnimation: function () {\n    this.animation.clear();\n  },\n\n  /**\n   * Get container width\n   */\n  getWidth: function () {\n    return this.painter.getWidth();\n  },\n\n  /**\n   * Get container height\n   */\n  getHeight: function () {\n    return this.painter.getHeight();\n  },\n\n  /**\n   * Export the canvas as Base64 URL\n   * @param {string} type\n   * @param {string} [backgroundColor='#fff']\n   * @return {string} Base64 URL\n   */\n  // toDataURL: function(type, backgroundColor) {\n  //     return this.painter.getRenderedCanvas({\n  //         backgroundColor: backgroundColor\n  //     }).toDataURL(type);\n  // },\n\n  /**\n   * Converting a path to image.\n   * It has much better performance of drawing image rather than drawing a vector path.\n   * @param {module:zrender/graphic/Path} e\n   * @param {number} width\n   * @param {number} height\n   */\n  pathToImage: function (e, dpr) {\n    return this.painter.pathToImage(e, dpr);\n  },\n\n  /**\n   * Set default cursor\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    this.handler.setCursorStyle(cursorStyle);\n  },\n\n  /**\n   * Find hovered element\n   * @param {number} x\n   * @param {number} y\n   * @return {Object} {target, topTarget}\n   */\n  findHover: function (x, y) {\n    return this.handler.findHover(x, y);\n  },\n\n  /**\n   * Bind event\n   *\n   * @param {string} eventName Event name\n   * @param {Function} eventHandler Handler function\n   * @param {Object} [context] Context object\n   */\n  on: function (eventName, eventHandler, context) {\n    this.handler.on(eventName, eventHandler, context);\n  },\n\n  /**\n   * Unbind event\n   * @param {string} eventName Event name\n   * @param {Function} [eventHandler] Handler function\n   */\n  off: function (eventName, eventHandler) {\n    this.handler.off(eventName, eventHandler);\n  },\n\n  /**\n   * Trigger event manually\n   *\n   * @param {string} eventName Event name\n   * @param {event=} event Event object\n   */\n  trigger: function (eventName, event) {\n    this.handler.trigger(eventName, event);\n  },\n\n  /**\n   * Clear all objects and the canvas.\n   */\n  clear: function () {\n    this.storage.delRoot();\n    this.painter.clear();\n  },\n\n  /**\n   * Dispose self.\n   */\n  dispose: function () {\n    this.animation.stop();\n    this.clear();\n    this.storage.dispose();\n    this.painter.dispose();\n    this.handler.dispose();\n    this.animation = this.storage = this.painter = this.handler = null;\n    delInstance(this.id);\n  }\n};\nexports.version = version;\nexports.init = init;\nexports.dispose = dispose;\nexports.getInstance = getInstance;\nexports.registerPainter = registerPainter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 48\n// module chunks = 0","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n}\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n}\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n}\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([^]*?)\\s+(?:in|of)\\s+([^]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '');\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\n/**\n * Expand input[v-model] with dyanmic type bindings into v-if-else chains\n * Turn this:\n *   <input v-model=\"data[type]\" :type=\"type\">\n * into this:\n *   <input v-if=\"type === 'checkbox'\" type=\"checkbox\" v-model=\"data[type]\">\n *   <input v-else-if=\"type === 'radio'\" type=\"radio\" v-model=\"data[type]\">\n *   <input v-else :type=\"type\" v-model=\"data[type]\">\n */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$2 = {\n  preTransformNode: preTransformNode\n}\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$2\n]\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n}\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  esc: 'Escape',\n  tab: 'Tab',\n  enter: 'Enter',\n  space: ' ',\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  'delete': ['Backspace', 'Delete']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    /* istanbul ignore if */\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    /* istanbul ignore if */\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n}\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? ((el.if) + \"?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.esm.js\n// module id = 49\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 50\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n\n    /**\n     * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object} {point: [x, y], el: ...} point Will not be null.\n     */\n    module.exports = function (finder, ecModel) {\n        var point = [];\n        var seriesIndex = finder.seriesIndex;\n        var seriesModel;\n        if (seriesIndex == null || !(\n            seriesModel = ecModel.getSeriesByIndex(seriesIndex)\n        )) {\n            return {point: []};\n        }\n\n        var data = seriesModel.getData();\n        var dataIndex = modelUtil.queryDataIndex(data, finder);\n        if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n            return {point: []};\n        }\n\n        var el = data.getItemGraphicEl(dataIndex);\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (seriesModel.getTooltipPosition) {\n            point = seriesModel.getTooltipPosition(dataIndex) || [];\n        }\n        else if (coordSys && coordSys.dataToPoint) {\n            point = coordSys.dataToPoint(\n                data.getValues(\n                    zrUtil.map(coordSys.dimensions, function (dim) {\n                        return seriesModel.coordDimToDataDim(dim)[0];\n                    }), dataIndex, true\n                )\n            ) || [];\n        }\n        else if (el) {\n            // Use graphic bounding rect\n            var rect = el.getBoundingRect().clone();\n            rect.applyTransform(el.transform);\n            point = [\n                rect.x + rect.width / 2,\n                rect.y + rect.height / 2\n            ];\n        }\n\n        return {point: point, el: el};\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/findPointFromSeries.js\n// module id = 51\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n    var zrUtil = require('zrender/lib/core/util');\n    var get = require('../../util/model').makeGetter();\n\n    var each = zrUtil.each;\n\n    var globalListener = {};\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Function} handler\n     *      param: {string} currTrigger\n     *      param: {Array.<number>} point\n     */\n    globalListener.register = function (key, api, handler) {\n        if (env.node) {\n            return;\n        }\n\n        var zr = api.getZr();\n        get(zr).records || (get(zr).records = {});\n\n        initGlobalListeners(zr, api);\n\n        var record = get(zr).records[key] || (get(zr).records[key] = {});\n        record.handler = handler;\n    };\n\n    function initGlobalListeners(zr, api) {\n        if (get(zr).initialized) {\n            return;\n        }\n\n        get(zr).initialized = true;\n\n        useHandler('click', zrUtil.curry(doEnter, 'click'));\n        useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove'));\n        // useHandler('mouseout', onLeave);\n        useHandler('globalout', onLeave);\n\n        function useHandler(eventType, cb) {\n            zr.on(eventType, function (e) {\n                var dis = makeDispatchAction(api);\n\n                each(get(zr).records, function (record) {\n                    record && cb(record, e, dis.dispatchAction);\n                });\n\n                dispatchTooltipFinally(dis.pendings, api);\n            });\n        }\n    }\n\n    function dispatchTooltipFinally(pendings, api) {\n        var showLen = pendings.showTip.length;\n        var hideLen = pendings.hideTip.length;\n\n        var actuallyPayload;\n        if (showLen) {\n            actuallyPayload = pendings.showTip[showLen - 1];\n        }\n        else if (hideLen) {\n            actuallyPayload = pendings.hideTip[hideLen - 1];\n        }\n        if (actuallyPayload) {\n            actuallyPayload.dispatchAction = null;\n            api.dispatchAction(actuallyPayload);\n        }\n    }\n\n    function onLeave(record, e, dispatchAction) {\n        record.handler('leave', null, dispatchAction);\n    }\n\n    function doEnter(currTrigger, record, e, dispatchAction) {\n        record.handler(currTrigger, e, dispatchAction);\n    }\n\n    function makeDispatchAction(api) {\n        var pendings = {\n            showTip: [],\n            hideTip: []\n        };\n        // FIXME\n        // better approach?\n        // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n        // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n        // So we have to add \"final stage\" to merge those dispatched actions.\n        var dispatchAction = function (payload) {\n            var pendingList = pendings[payload.type];\n            if (pendingList) {\n                pendingList.push(payload);\n            }\n            else {\n                payload.dispatchAction = dispatchAction;\n                api.dispatchAction(payload);\n            }\n        };\n\n        return {\n            dispatchAction: dispatchAction,\n            pendings: pendings\n        };\n    }\n\n    /**\n     * @param {string} key\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    globalListener.unregister = function (key, api) {\n        if (env.node) {\n            return;\n        }\n        var zr = api.getZr();\n        var record = (get(zr).records || {})[key];\n        if (record) {\n            get(zr).records[key] = null;\n        }\n    };\n\n    module.exports = globalListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/globalListener.js\n// module id = 52\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var textContain = require('zrender/lib/contain/text');\n    var formatUtil = require('../../util/format');\n    var matrix = require('zrender/lib/core/matrix');\n    var axisHelper = require('../../coord/axisHelper');\n    var AxisBuilder = require('../axis/AxisBuilder');\n\n    var helper = {};\n\n    /**\n     * @param {module:echarts/model/Model} axisPointerModel\n     */\n    helper.buildElStyle = function (axisPointerModel) {\n        var axisPointerType = axisPointerModel.get('type');\n        var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n        var style;\n        if (axisPointerType === 'line') {\n            style = styleModel.getLineStyle();\n            style.fill = null;\n        }\n        else if (axisPointerType === 'shadow') {\n            style = styleModel.getAreaStyle();\n            style.stroke = null;\n        }\n        return style;\n    };\n\n    /**\n     * @param {Function} labelPos {align, verticalAlign, position}\n     */\n    helper.buildLabelElOption = function (\n        elOption, axisModel, axisPointerModel, api, labelPos\n    ) {\n        var value = axisPointerModel.get('value');\n        var text = helper.getValueLabel(\n            value, axisModel.axis, axisModel.ecModel,\n            axisPointerModel.get('seriesDataIndices'),\n            {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            }\n        );\n        var labelModel = axisPointerModel.getModel('label');\n        var textStyleModel = labelModel.getModel('textStyle');\n        var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n\n        var font = textStyleModel.getFont();\n        var textRect = textContain.getBoundingRect(\n            text, font, labelPos.textAlign, labelPos.textBaseline\n        );\n\n        var position = labelPos.position;\n        var width = textRect.width + paddings[1] + paddings[3];\n        var height = textRect.height + paddings[0] + paddings[2];\n\n        // Adjust by align.\n        var align = labelPos.align;\n        align === 'right' && (position[0] -= width);\n        align === 'center' && (position[0] -= width / 2);\n        var verticalAlign = labelPos.verticalAlign;\n        verticalAlign === 'bottom' && (position[1] -= height);\n        verticalAlign === 'middle' && (position[1] -= height / 2);\n\n        // Not overflow ec container\n        confineInContainer(position, width, height, api);\n\n        var bgColor = labelModel.get('backgroundColor');\n        if (!bgColor || bgColor === 'auto') {\n            bgColor = axisModel.get('axisLine.lineStyle.color');\n        }\n\n        elOption.label = {\n            shape: {x: 0, y: 0, width: width, height: height, r: labelModel.get('borderRadius')},\n            position: position.slice(),\n            style: {\n                text: text,\n                textFont: font,\n                textFill: textStyleModel.getTextColor(),\n                textPosition: 'inside',\n                fill: bgColor,\n                stroke: labelModel.get('borderColor') || 'transparent',\n                lineWidth: labelModel.get('borderWidth') || 0,\n                shadowBlur: labelModel.get('shadowBlur'),\n                shadowColor: labelModel.get('shadowColor'),\n                shadowOffsetX: labelModel.get('shadowOffsetX'),\n                shadowOffsetY: labelModel.get('shadowOffsetY')\n            }\n        };\n    };\n\n    // Do not overflow ec container\n    function confineInContainer(position, width, height, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n        position[0] = Math.min(position[0] + width, viewWidth) - width;\n        position[1] = Math.min(position[1] + height, viewHeight) - height;\n        position[0] = Math.max(position[0], 0);\n        position[1] = Math.max(position[1], 0);\n    }\n\n    /**\n     * @param {number} value\n     * @param {module:echarts/coord/Axis} axis\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} opt\n     * @param {Array.<Object>} seriesDataIndices\n     * @param {number|string} opt.precision 'auto' or a number\n     * @param {string|Function} opt.formatter label formatter\n     */\n    helper.getValueLabel = function (value, axis, ecModel, seriesDataIndices, opt) {\n        var text = axis.scale.getLabel(\n            // If `precision` is set, width can be fixed (like '12.00500'), which\n            // helps to debounce when when moving label.\n            value, {precision: opt.precision}\n        );\n        var formatter = opt.formatter;\n\n        if (formatter) {\n            var params = {\n                value: axisHelper.getAxisRawValue(axis, value),\n                seriesData: []\n            };\n            zrUtil.each(seriesDataIndices, function (idxItem) {\n                var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                var dataIndex = idxItem.dataIndexInside;\n                var dataParams = series && series.getDataParams(dataIndex);\n                dataParams && params.seriesData.push(dataParams);\n            });\n\n            if (zrUtil.isString(formatter)) {\n                text = formatter.replace('{value}', text);\n            }\n            else if (zrUtil.isFunction(formatter)) {\n                text = formatter(params);\n            }\n        }\n\n        return text;\n    };\n\n    /**\n     * @param {module:echarts/coord/Axis} axis\n     * @param {number} value\n     * @param {Object} layoutInfo {\n     *  rotation, position, labelOffset, labelDirection, labelMargin\n     * }\n     */\n    helper.getTransformedPosition = function (axis, value, layoutInfo) {\n        var transform = matrix.create();\n        matrix.rotate(transform, transform, layoutInfo.rotation);\n        matrix.translate(transform, transform, layoutInfo.position);\n\n        return graphic.applyTransform([\n            axis.dataToCoord(value),\n            (layoutInfo.labelOffset || 0)\n                + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)\n        ], transform);\n    };\n\n    helper.buildCartesianSingleLabelElOption = function (\n        value, elOption, layoutInfo, axisModel, axisPointerModel, api\n    ) {\n        var textLayout = AxisBuilder.innerTextLayout(\n            layoutInfo.rotation, 0, layoutInfo.labelDirection\n        );\n        layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n        helper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n            position: helper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n            align: textLayout.textAlign,\n            verticalAlign: textLayout.textVerticalAlign\n        });\n    };\n\n    /**\n     * @param {Array.<number>} p1\n     * @param {Array.<number>} p2\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeLineShape = function (p1, p2, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x1: p1[xDimIndex],\n            y1: p1[1 - xDimIndex],\n            x2: p2[xDimIndex],\n            y2: p2[1 - xDimIndex]\n        };\n    };\n\n    /**\n     * @param {Array.<number>} xy\n     * @param {Array.<number>} wh\n     * @param {number} [xDimIndex=0] or 1\n     */\n    helper.makeRectShape = function (xy, wh, xDimIndex) {\n        xDimIndex = xDimIndex || 0;\n        return {\n            x: xy[xDimIndex],\n            y: xy[1 - xDimIndex],\n            width: wh[xDimIndex],\n            height: wh[1 - xDimIndex]\n        };\n    };\n\n    helper.makeSectorShape = function (cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/viewHelper.js\n// module id = 53\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var env = require('zrender/lib/core/env');\n    var echarts = require('../../echarts');\n    var modelUtil = require('../../util/model');\n    var helper = require('./helper');\n    var AxisProxy = require('./AxisProxy');\n    var each = zrUtil.each;\n    var eachAxisDim = helper.eachAxisDim;\n\n    var DataZoomModel = echarts.extendComponentModel({\n\n        type: 'dataZoom',\n\n        dependencies: [\n            'xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'\n        ],\n\n        /**\n         * @protected\n         */\n        defaultOption: {\n            zlevel: 0,\n            z: 4,                   // Higher than normal component (z: 2).\n            orient: null,           // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n            xAxisIndex: null,       // Default the first horizontal category axis.\n            yAxisIndex: null,       // Default the first vertical category axis.\n\n            filterMode: 'filter',   // Possible values: 'filter' or 'empty'.\n                                    // 'filter': data items which are out of window will be removed.\n                                    //           This option is applicable when filtering outliers.\n                                    // 'empty': data items which are out of window will be set to empty.\n                                    //          This option is applicable when user should not neglect\n                                    //          that there are some data items out of window.\n                                    // Taking line chart as an example, line will be broken in\n                                    // the filtered points when filterModel is set to 'empty', but\n                                    // be connected when set to 'filter'.\n\n            throttle: null,         // Dispatch action by the fixed rate, avoid frequency.\n                                    // default 100. Do not throttle when use null/undefined.\n                                    // If animation === true and animationDurationUpdate > 0,\n                                    // default value is 100, otherwise 20.\n            start: 0,               // Start percent. 0 ~ 100\n            end: 100,               // End percent. 0 ~ 100\n            startValue: null,       // Start value. If startValue specified, start is ignored.\n            endValue: null          // End value. If endValue specified, end is ignored.\n        },\n\n        /**\n         * @override\n         */\n        init: function (option, parentModel, ecModel) {\n\n            /**\n             * key like x_0, y_1\n             * @private\n             * @type {Object}\n             */\n            this._dataIntervalByAxis = {};\n\n            /**\n             * @private\n             */\n            this._dataInfo = {};\n\n            /**\n             * key like x_0, y_1\n             * @private\n             */\n            this._axisProxies = {};\n\n            /**\n             * @readOnly\n             */\n            this.textStyleModel;\n\n            /**\n             * @private\n             */\n            this._autoThrottle = true;\n\n            /**\n             * 'percent' or 'value'\n             * @private\n             */\n            this._rangePropMode = ['percent', 'percent'];\n\n            var rawOption = retrieveRaw(option);\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function (newOption) {\n            var rawOption = retrieveRaw(newOption);\n\n            //FIX #2591\n            zrUtil.merge(this.option, newOption, true);\n\n            this.doInit(rawOption);\n        },\n\n        /**\n         * @protected\n         */\n        doInit: function (rawOption) {\n            var thisOption = this.option;\n\n            // Disable realtime view update if canvas is not supported.\n            if (!env.canvasSupported) {\n                thisOption.realtime = false;\n            }\n\n            this._setDefaultThrottle(rawOption);\n\n            updateRangeUse(this, rawOption);\n\n            each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n                // start/end has higher priority over startValue/endValue if they\n                // both set, but we should make chart.setOption({endValue: 1000})\n                // effective, rather than chart.setOption({endValue: 1000, end: null}).\n                if (this._rangePropMode[index] === 'value') {\n                    thisOption[names[0]] = null;\n                }\n                // Otherwise do nothing and use the merge result.\n            }, this);\n\n            this.textStyleModel = this.getModel('textStyle');\n\n            this._resetTarget();\n\n            this._giveAxisProxies();\n        },\n\n        /**\n         * @private\n         */\n        _giveAxisProxies: function () {\n            var axisProxies = this._axisProxies;\n\n            this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n                var axisModel = this.dependentModels[dimNames.axis][axisIndex];\n\n                // If exists, share axisProxy with other dataZoomModels.\n                var axisProxy = axisModel.__dzAxisProxy || (\n                    // Use the first dataZoomModel as the main model of axisProxy.\n                    axisModel.__dzAxisProxy = new AxisProxy(\n                        dimNames.name, axisIndex, this, ecModel\n                    )\n                );\n                // FIXME\n                // dispose __dzAxisProxy\n\n                axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n            }, this);\n        },\n\n        /**\n         * @private\n         */\n        _resetTarget: function () {\n            var thisOption = this.option;\n\n            var autoMode = this._judgeAutoMode();\n\n            eachAxisDim(function (dimNames) {\n                var axisIndexName = dimNames.axisIndex;\n                thisOption[axisIndexName] = modelUtil.normalizeToArray(\n                    thisOption[axisIndexName]\n                );\n            }, this);\n\n            if (autoMode === 'axisIndex') {\n                this._autoSetAxisIndex();\n            }\n            else if (autoMode === 'orient') {\n                this._autoSetOrient();\n            }\n        },\n\n        /**\n         * @private\n         */\n        _judgeAutoMode: function () {\n            // Auto set only works for setOption at the first time.\n            // The following is user's reponsibility. So using merged\n            // option is OK.\n            var thisOption = this.option;\n\n            var hasIndexSpecified = false;\n            eachAxisDim(function (dimNames) {\n                // When user set axisIndex as a empty array, we think that user specify axisIndex\n                // but do not want use auto mode. Because empty array may be encountered when\n                // some error occured.\n                if (thisOption[dimNames.axisIndex] != null) {\n                    hasIndexSpecified = true;\n                }\n            }, this);\n\n            var orient = thisOption.orient;\n\n            if (orient == null && hasIndexSpecified) {\n                return 'orient';\n            }\n            else if (!hasIndexSpecified) {\n                if (orient == null) {\n                    thisOption.orient = 'horizontal';\n                }\n                return 'axisIndex';\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetAxisIndex: function () {\n            var autoAxisIndex = true;\n            var orient = this.get('orient', true);\n            var thisOption = this.option;\n            var dependentModels = this.dependentModels;\n\n            if (autoAxisIndex) {\n                // Find axis that parallel to dataZoom as default.\n                var dimName = orient === 'vertical' ? 'y' : 'x';\n\n                if (dependentModels[dimName + 'Axis'].length) {\n                    thisOption[dimName + 'AxisIndex'] = [0];\n                    autoAxisIndex = false;\n                }\n                else {\n                    each(dependentModels.singleAxis, function (singleAxisModel) {\n                        if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n                            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n                            autoAxisIndex = false;\n                        }\n                    });\n                }\n            }\n\n            if (autoAxisIndex) {\n                // Find the first category axis as default. (consider polar)\n                eachAxisDim(function (dimNames) {\n                    if (!autoAxisIndex) {\n                        return;\n                    }\n                    var axisIndices = [];\n                    var axisModels = this.dependentModels[dimNames.axis];\n                    if (axisModels.length && !axisIndices.length) {\n                        for (var i = 0, len = axisModels.length; i < len; i++) {\n                            if (axisModels[i].get('type') === 'category') {\n                                axisIndices.push(i);\n                            }\n                        }\n                    }\n                    thisOption[dimNames.axisIndex] = axisIndices;\n                    if (axisIndices.length) {\n                        autoAxisIndex = false;\n                    }\n                }, this);\n            }\n\n            if (autoAxisIndex) {\n                // FIXME\n                // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n                // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n\n                // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n                // dataZoom component auto adopts series that reference to\n                // both xAxis and yAxis which type is 'value'.\n                this.ecModel.eachSeries(function (seriesModel) {\n                    if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n                        eachAxisDim(function (dimNames) {\n                            var axisIndices = thisOption[dimNames.axisIndex];\n\n                            var axisIndex = seriesModel.get(dimNames.axisIndex);\n                            var axisId = seriesModel.get(dimNames.axisId);\n\n                            var axisModel = seriesModel.ecModel.queryComponents({\n                                mainType: dimNames.axis,\n                                index: axisIndex,\n                                id: axisId\n                            })[0];\n\n                            if (__DEV__) {\n                                if (!axisModel) {\n                                    throw new Error(\n                                        dimNames.axis + ' \"' + zrUtil.retrieve(\n                                            axisIndex,\n                                            axisId,\n                                            0\n                                        ) + '\" not found'\n                                    );\n                                }\n                            }\n                            axisIndex = axisModel.componentIndex;\n\n                            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n                                axisIndices.push(axisIndex);\n                            }\n                        });\n                    }\n                }, this);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _autoSetOrient: function () {\n            var dim;\n\n            // Find the first axis\n            this.eachTargetAxis(function (dimNames) {\n                !dim && (dim = dimNames.name);\n            }, this);\n\n            this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n        },\n\n        /**\n         * @private\n         */\n        _isSeriesHasAllAxesTypeOf: function (seriesModel, axisType) {\n            // FIXME\n            // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n            // 例如series.type === scatter时。\n\n            var is = true;\n            eachAxisDim(function (dimNames) {\n                var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n                var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n                if (!axisModel || axisModel.get('type') !== axisType) {\n                    is = false;\n                }\n            }, this);\n            return is;\n        },\n\n        /**\n         * @private\n         */\n        _setDefaultThrottle: function (rawOption) {\n            // When first time user set throttle, auto throttle ends.\n            if (rawOption.hasOwnProperty('throttle')) {\n                this._autoThrottle = false;\n            }\n            if (this._autoThrottle) {\n                var globalOption = this.ecModel.option;\n                this.option.throttle =\n                    (globalOption.animation && globalOption.animationDurationUpdate > 0)\n                    ? 100 : 20;\n            }\n        },\n\n        /**\n         * @public\n         */\n        getFirstTargetAxisModel: function () {\n            var firstAxisModel;\n            eachAxisDim(function (dimNames) {\n                if (firstAxisModel == null) {\n                    var indices = this.get(dimNames.axisIndex);\n                    if (indices.length) {\n                        firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n                    }\n                }\n            }, this);\n\n            return firstAxisModel;\n        },\n\n        /**\n         * @public\n         * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n         */\n        eachTargetAxis: function (callback, context) {\n            var ecModel = this.ecModel;\n            eachAxisDim(function (dimNames) {\n                each(\n                    this.get(dimNames.axisIndex),\n                    function (axisIndex) {\n                        callback.call(context, dimNames, axisIndex, this, ecModel);\n                    },\n                    this\n                );\n            }, this);\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n         */\n        getAxisProxy: function (dimName, axisIndex) {\n            return this._axisProxies[dimName + '_' + axisIndex];\n        },\n\n        /**\n         * @param {string} dimName\n         * @param {number} axisIndex\n         * @return {module:echarts/model/Model} If not found, return null/undefined.\n         */\n        getAxisModel: function (dimName, axisIndex) {\n            var axisProxy = this.getAxisProxy(dimName, axisIndex);\n            return axisProxy && axisProxy.getAxisModel();\n        },\n\n        /**\n         * If not specified, set to undefined.\n         *\n         * @public\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         * @param {boolean} [ignoreUpdateRangeUsg=false]\n         */\n        setRawRange: function (opt, ignoreUpdateRangeUsg) {\n            each(['start', 'end', 'startValue', 'endValue'], function (name) {\n                // If any of those prop is null/undefined, we should alos set\n                // them, because only one pair between start/end and\n                // startValue/endValue can work.\n                this.option[name] = opt[name];\n            }, this);\n\n            !ignoreUpdateRangeUsg && updateRangeUse(this, opt);\n        },\n\n        /**\n         * @public\n         * @return {Array.<number>} [startPercent, endPercent]\n         */\n        getPercentRange: function () {\n            var axisProxy = this.findRepresentativeAxisProxy();\n            if (axisProxy) {\n                return axisProxy.getDataPercentWindow();\n            }\n        },\n\n        /**\n         * @public\n         * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n         *\n         * @param {string} [axisDimName]\n         * @param {number} [axisIndex]\n         * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n         */\n        getValueRange: function (axisDimName, axisIndex) {\n            if (axisDimName == null && axisIndex == null) {\n                var axisProxy = this.findRepresentativeAxisProxy();\n                if (axisProxy) {\n                    return axisProxy.getDataValueWindow();\n                }\n            }\n            else {\n                return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n            }\n        },\n\n        /**\n         * @public\n         * @return {module:echarts/component/dataZoom/AxisProxy}\n         */\n        findRepresentativeAxisProxy: function () {\n            // Find the first hosted axisProxy\n            var axisProxies = this._axisProxies;\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n\n            // If no hosted axis find not hosted axisProxy.\n            // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n            // and the option.start or option.end settings are different. The percentRange\n            // should follow axisProxy.\n            // (We encounter this problem in toolbox data zoom.)\n            for (var key in axisProxies) {\n                if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n                    return axisProxies[key];\n                }\n            }\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getRangePropMode: function () {\n            return this._rangePropMode.slice();\n        }\n    });\n\n    function retrieveRaw(option) {\n        var ret = {};\n        each(\n            ['start', 'end', 'startValue', 'endValue', 'throttle'],\n            function (name) {\n                option.hasOwnProperty(name) && (ret[name] = option[name]);\n            }\n        );\n        return ret;\n    }\n\n    function updateRangeUse(dataZoomModel, rawOption) {\n        each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n            var rangePropMode = dataZoomModel._rangePropMode;\n            if (rawOption[names[0]] != null) {\n                rangePropMode[index] = 'percent';\n            }\n            else if (rawOption[names[1]] != null) {\n                rangePropMode[index] = 'value';\n            }\n            // else remain its original setting.\n        });\n    }\n\n    module.exports = DataZoomModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomModel.js\n// module id = 54\n// module chunks = 0","\n\n    var ComponentView = require('../../view/Component');\n\n    module.exports = ComponentView.extend({\n\n        type: 'dataZoom',\n\n        render: function (dataZoomModel, ecModel, api, payload) {\n            this.dataZoomModel = dataZoomModel;\n            this.ecModel = ecModel;\n            this.api = api;\n        },\n\n        /**\n         * Find the first target coordinate system.\n         *\n         * @protected\n         * @return {Object} {\n         *                   grid: [\n         *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n         *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n         *                       ...\n         *                   ],  // cartesians must not be null/undefined.\n         *                   polar: [\n         *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n         *                       ...\n         *                   ],  // polars must not be null/undefined.\n         *                   singleAxis: [\n         *                       {model: coord0, axisModels: [], coordIndex: 0}\n         *                   ]\n         */\n        getTargetCoordInfo: function () {\n            var dataZoomModel = this.dataZoomModel;\n            var ecModel = this.ecModel;\n            var coordSysLists = {};\n\n            dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n                var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n                if (axisModel) {\n                    var coordModel = axisModel.getCoordSysModel();\n                    coordModel && save(\n                        coordModel,\n                        axisModel,\n                        coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []),\n                        coordModel.componentIndex\n                    );\n                }\n            }, this);\n\n            function save(coordModel, axisModel, store, coordIndex) {\n                var item;\n                for (var i = 0; i < store.length; i++) {\n                    if (store[i].model === coordModel) {\n                        item = store[i];\n                        break;\n                    }\n                }\n                if (!item) {\n                    store.push(item = {\n                        model: coordModel, axisModels: [], coordIndex: coordIndex\n                    });\n                }\n                item.axisModels.push(axisModel);\n            }\n\n            return coordSysLists;\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/DataZoomView.js\n// module id = 55\n// module chunks = 0","/**\n * @file History manager.\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n\n    var ATTR = '\\0_ec_hist_store';\n\n    var history = {\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n         */\n        push: function (ecModel, newSnapshot) {\n            var store = giveStore(ecModel);\n\n            // If previous dataZoom can not be found,\n            // complete an range with current range.\n            each(newSnapshot, function (batchItem, dataZoomId) {\n                var i = store.length - 1;\n                for (; i >= 0; i--) {\n                    var snapshot = store[i];\n                    if (snapshot[dataZoomId]) {\n                        break;\n                    }\n                }\n                if (i < 0) {\n                    // No origin range set, create one by current range.\n                    var dataZoomModel = ecModel.queryComponents(\n                        {mainType: 'dataZoom', subType: 'select', id: dataZoomId}\n                    )[0];\n                    if (dataZoomModel) {\n                        var percentRange = dataZoomModel.getPercentRange();\n                        store[0][dataZoomId] = {\n                            dataZoomId: dataZoomId,\n                            start: percentRange[0],\n                            end: percentRange[1]\n                        };\n                    }\n                }\n            });\n\n            store.push(newSnapshot);\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object} snapshot\n         */\n        pop: function (ecModel) {\n            var store = giveStore(ecModel);\n            var head = store[store.length - 1];\n            store.length > 1 && store.pop();\n\n            // Find top for all dataZoom.\n            var snapshot = {};\n            each(head, function (batchItem, dataZoomId) {\n                for (var i = store.length - 1; i >= 0; i--) {\n                    var batchItem = store[i][dataZoomId];\n                    if (batchItem) {\n                        snapshot[dataZoomId] = batchItem;\n                        break;\n                    }\n                }\n            });\n\n            return snapshot;\n        },\n\n        /**\n         * @public\n         */\n        clear: function (ecModel) {\n            ecModel[ATTR] = null;\n        },\n\n        /**\n         * @public\n         * @param {module:echarts/model/Global} ecModel\n         * @return {number} records. always >= 1.\n         */\n        count: function (ecModel) {\n            return giveStore(ecModel).length;\n        }\n\n    };\n\n    /**\n     * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n     * History length of each dataZoom may be different.\n     * this._history[0] is used to store origin range.\n     * @type {Array.<Object>}\n     */\n    function giveStore(ecModel) {\n        var store = ecModel[ATTR];\n        if (!store) {\n            store = ecModel[ATTR] = [{}];\n        }\n        return store;\n    }\n\n    module.exports = history;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/history.js\n// module id = 56\n// module chunks = 0","\n\n    var classUtil = require('../../util/clazz');\n    var set = classUtil.set;\n    var get = classUtil.get;\n\n    module.exports = {\n        clearColorPalette: function () {\n            set(this, 'colorIdx', 0);\n            set(this, 'colorNameMap', {});\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = get(scope, 'colorIdx') || 0;\n            var colorNameMap = get(scope, 'colorNameMap') || set(scope, 'colorNameMap', {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            set(scope, 'colorIdx', (colorIdx + 1) % colorPalette.length);\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 57\n// module chunks = 0","/**\n * For testable.\n */\n\n\n    var numberUtil = require('../util/number');\n\n    var roundNumber = numberUtil.round;\n\n    var helper = {};\n\n    /**\n     * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n     *                                Should be extent[0] < extent[1].\n     * @param {number} splitNumber splitNumber should be >= 1.\n     * @return {Object} {interval, intervalPrecision, niceTickExtent}\n     */\n    helper.intervalScaleNiceTicks = function (extent, splitNumber) {\n        var result = {};\n        var span = extent[1] - extent[0];\n\n        var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n        // Tow more digital for tick.\n        var precision = result.intervalPrecision = numberUtil.getPrecisionSafe(interval) + 2;\n        // Niced extent inside original extent\n        var niceTickExtent = result.niceTickExtent = [\n            roundNumber(Math.ceil(extent[0] / interval) * interval, precision),\n            roundNumber(Math.floor(extent[1] / interval) * interval, precision)\n        ];\n\n        helper.fixExtent(niceTickExtent, extent);\n\n        return result;\n    };\n\n    function clamp(niceTickExtent, idx, extent) {\n        niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n    }\n\n    // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n    helper.fixExtent = function (niceTickExtent, extent) {\n        !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n        !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n        clamp(niceTickExtent, 0, extent);\n        clamp(niceTickExtent, 1, extent);\n        if (niceTickExtent[0] > niceTickExtent[1]) {\n            niceTickExtent[0] = niceTickExtent[1];\n        }\n    };\n\n    helper.intervalScaleGetTicks = function (interval, extent, niceTickExtent, intervalPrecision) {\n        var ticks = [];\n\n        // If interval is 0, return [];\n        if (!interval) {\n            return ticks;\n        }\n\n        // Consider this case: using dataZoom toolbox, zoom and zoom.\n        var safeLimit = 10000;\n\n        if (extent[0] < niceTickExtent[0]) {\n            ticks.push(extent[0]);\n        }\n        var tick = niceTickExtent[0];\n\n        while (tick <= niceTickExtent[1]) {\n            ticks.push(tick);\n            // Avoid rounding error\n            tick = roundNumber(tick + interval, intervalPrecision);\n            if (tick === ticks[ticks.length - 1]) {\n                // Consider out of safe float point, e.g.,\n                // -3711126.9907707 + 2e-10 === -3711126.9907707\n                break;\n            }\n            if (ticks.length > safeLimit) {\n                return [];\n            }\n        }\n        // Consider this case: the last item of ticks is smaller\n        // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n        if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1])) {\n            ticks.push(extent[1]);\n        }\n\n        return ticks;\n    };\n\n    module.exports = helper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/helper.js\n// module id = 58\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 59\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 60\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 61\n// module chunks = 0","var guid = require(\"./core/guid\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\nvar Transformable = require(\"./mixin/Transformable\");\n\nvar Animatable = require(\"./mixin/Animatable\");\n\nvar zrUtil = require(\"./core/util\");\n\n/**\n * @alias module:zrender/Element\n * @constructor\n * @extends {module:zrender/mixin/Animatable}\n * @extends {module:zrender/mixin/Transformable}\n * @extends {module:zrender/mixin/Eventful}\n */\nvar Element = function (opts) {\n  // jshint ignore:line\n  Transformable.call(this, opts);\n  Eventful.call(this, opts);\n  Animatable.call(this, opts);\n  /**\n   * 画布元素ID\n   * @type {string}\n   */\n\n  this.id = opts.id || guid();\n};\n\nElement.prototype = {\n  /**\n   * 元素类型\n   * Element type\n   * @type {string}\n   */\n  type: 'element',\n\n  /**\n   * 元素名字\n   * Element name\n   * @type {string}\n   */\n  name: '',\n\n  /**\n   * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n   * ZRender instance will be assigned when element is associated with zrender\n   * @name module:/zrender/Element#__zr\n   * @type {module:zrender/ZRender}\n   */\n  __zr: null,\n\n  /**\n   * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n   * If ignore drawing and events of the element object\n   * @name module:/zrender/Element#ignore\n   * @type {boolean}\n   * @default false\n   */\n  ignore: false,\n\n  /**\n   * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n   * 该路径会继承被裁减对象的变换\n   * @type {module:zrender/graphic/Path}\n   * @see http://www.w3.org/TR/2dcontext/#clipping-region\n   * @readOnly\n   */\n  clipPath: null,\n\n  /**\n   * Drift element\n   * @param  {number} dx dx on the global space\n   * @param  {number} dy dy on the global space\n   */\n  drift: function (dx, dy) {\n    switch (this.draggable) {\n      case 'horizontal':\n        dy = 0;\n        break;\n\n      case 'vertical':\n        dx = 0;\n        break;\n    }\n\n    var m = this.transform;\n\n    if (!m) {\n      m = this.transform = [1, 0, 0, 1, 0, 0];\n    }\n\n    m[4] += dx;\n    m[5] += dy;\n    this.decomposeTransform();\n    this.dirty(false);\n  },\n\n  /**\n   * Hook before update\n   */\n  beforeUpdate: function () {},\n\n  /**\n   * Hook after update\n   */\n  afterUpdate: function () {},\n\n  /**\n   * Update each frame\n   */\n  update: function () {\n    this.updateTransform();\n  },\n\n  /**\n   * @param  {Function} cb\n   * @param  {}   context\n   */\n  traverse: function (cb, context) {},\n\n  /**\n   * @protected\n   */\n  attrKV: function (key, value) {\n    if (key === 'position' || key === 'scale' || key === 'origin') {\n      // Copy the array\n      if (value) {\n        var target = this[key];\n\n        if (!target) {\n          target = this[key] = [];\n        }\n\n        target[0] = value[0];\n        target[1] = value[1];\n      }\n    } else {\n      this[key] = value;\n    }\n  },\n\n  /**\n   * Hide the element\n   */\n  hide: function () {\n    this.ignore = true;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * Show the element\n   */\n  show: function () {\n    this.ignore = false;\n    this.__zr && this.__zr.refresh();\n  },\n\n  /**\n   * @param {string|Object} key\n   * @param {*} value\n   */\n  attr: function (key, value) {\n    if (typeof key === 'string') {\n      this.attrKV(key, value);\n    } else if (zrUtil.isObject(key)) {\n      for (var name in key) {\n        if (key.hasOwnProperty(name)) {\n          this.attrKV(name, key[name]);\n        }\n      }\n    }\n\n    this.dirty(false);\n    return this;\n  },\n\n  /**\n   * @param {module:zrender/graphic/Path} clipPath\n   */\n  setClipPath: function (clipPath) {\n    var zr = this.__zr;\n\n    if (zr) {\n      clipPath.addSelfToZr(zr);\n    } // Remove previous clip path\n\n\n    if (this.clipPath && this.clipPath !== clipPath) {\n      this.removeClipPath();\n    }\n\n    this.clipPath = clipPath;\n    clipPath.__zr = zr;\n    clipPath.__clipTarget = this;\n    this.dirty(false);\n  },\n\n  /**\n   */\n  removeClipPath: function () {\n    var clipPath = this.clipPath;\n\n    if (clipPath) {\n      if (clipPath.__zr) {\n        clipPath.removeSelfFromZr(clipPath.__zr);\n      }\n\n      clipPath.__zr = null;\n      clipPath.__clipTarget = null;\n      this.clipPath = null;\n      this.dirty(false);\n    }\n  },\n\n  /**\n   * Add self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  addSelfToZr: function (zr) {\n    this.__zr = zr; // 添加动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.addAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.addSelfToZr(zr);\n    }\n  },\n\n  /**\n   * Remove self from zrender instance.\n   * Not recursively because it will be invoked when element added to storage.\n   * @param {module:zrender/ZRender} zr\n   */\n  removeSelfFromZr: function (zr) {\n    this.__zr = null; // 移除动画\n\n    var animators = this.animators;\n\n    if (animators) {\n      for (var i = 0; i < animators.length; i++) {\n        zr.animation.removeAnimator(animators[i]);\n      }\n    }\n\n    if (this.clipPath) {\n      this.clipPath.removeSelfFromZr(zr);\n    }\n  }\n};\nzrUtil.mixin(Element, Animatable);\nzrUtil.mixin(Element, Transformable);\nzrUtil.mixin(Element, Eventful);\nvar _default = Element;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 62\n// module chunks = 0","var Clip = require(\"./Clip\");\n\nvar color = require(\"../tool/color\");\n\nvar _util = require(\"../core/util\");\n\nvar isArrayLike = _util.isArrayLike;\n\n/**\n * @module echarts/animation/Animator\n */\nvar arraySlice = Array.prototype.slice;\n\nfunction defaultGetter(target, key) {\n  return target[key];\n}\n\nfunction defaultSetter(target, key, value) {\n  target[key] = value;\n}\n/**\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} percent\n * @return {number}\n */\n\n\nfunction interpolateNumber(p0, p1, percent) {\n  return (p1 - p0) * percent + p0;\n}\n/**\n * @param  {string} p0\n * @param  {string} p1\n * @param  {number} percent\n * @return {string}\n */\n\n\nfunction interpolateString(p0, p1, percent) {\n  return percent > 0.5 ? p1 : p0;\n}\n/**\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {number} percent\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction interpolateArray(p0, p1, percent, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = interpolateNumber(p0[i], p1[i], percent);\n    }\n  } else {\n    var len2 = len && p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = interpolateNumber(p0[i][j], p1[i][j], percent);\n      }\n    }\n  }\n} // arr0 is source array, arr1 is target array.\n// Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n\n\nfunction fillArr(arr0, arr1, arrDim) {\n  var arr0Len = arr0.length;\n  var arr1Len = arr1.length;\n\n  if (arr0Len !== arr1Len) {\n    // FIXME Not work for TypedArray\n    var isPreviousLarger = arr0Len > arr1Len;\n\n    if (isPreviousLarger) {\n      // Cut the previous\n      arr0.length = arr1Len;\n    } else {\n      // Fill the previous\n      for (var i = arr0Len; i < arr1Len; i++) {\n        arr0.push(arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i]));\n      }\n    }\n  } // Handling NaN value\n\n\n  var len2 = arr0[0] && arr0[0].length;\n\n  for (var i = 0; i < arr0.length; i++) {\n    if (arrDim === 1) {\n      if (isNaN(arr0[i])) {\n        arr0[i] = arr1[i];\n      }\n    } else {\n      for (var j = 0; j < len2; j++) {\n        if (isNaN(arr0[i][j])) {\n          arr0[i][j] = arr1[i][j];\n        }\n      }\n    }\n  }\n}\n/**\n * @param  {Array} arr0\n * @param  {Array} arr1\n * @param  {number} arrDim\n * @return {boolean}\n */\n\n\nfunction isArraySame(arr0, arr1, arrDim) {\n  if (arr0 === arr1) {\n    return true;\n  }\n\n  var len = arr0.length;\n\n  if (len !== arr1.length) {\n    return false;\n  }\n\n  if (arrDim === 1) {\n    for (var i = 0; i < len; i++) {\n      if (arr0[i] !== arr1[i]) {\n        return false;\n      }\n    }\n  } else {\n    var len2 = arr0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        if (arr0[i][j] !== arr1[i][j]) {\n          return false;\n        }\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * Catmull Rom interpolate array\n * @param  {Array} p0\n * @param  {Array} p1\n * @param  {Array} p2\n * @param  {Array} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @param  {Array} out\n * @param  {number} arrDim\n */\n\n\nfunction catmullRomInterpolateArray(p0, p1, p2, p3, t, t2, t3, out, arrDim) {\n  var len = p0.length;\n\n  if (arrDim == 1) {\n    for (var i = 0; i < len; i++) {\n      out[i] = catmullRomInterpolate(p0[i], p1[i], p2[i], p3[i], t, t2, t3);\n    }\n  } else {\n    var len2 = p0[0].length;\n\n    for (var i = 0; i < len; i++) {\n      for (var j = 0; j < len2; j++) {\n        out[i][j] = catmullRomInterpolate(p0[i][j], p1[i][j], p2[i][j], p3[i][j], t, t2, t3);\n      }\n    }\n  }\n}\n/**\n * Catmull Rom interpolate number\n * @param  {number} p0\n * @param  {number} p1\n * @param  {number} p2\n * @param  {number} p3\n * @param  {number} t\n * @param  {number} t2\n * @param  {number} t3\n * @return {number}\n */\n\n\nfunction catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n\nfunction cloneValue(value) {\n  if (isArrayLike(value)) {\n    var len = value.length;\n\n    if (isArrayLike(value[0])) {\n      var ret = [];\n\n      for (var i = 0; i < len; i++) {\n        ret.push(arraySlice.call(value[i]));\n      }\n\n      return ret;\n    }\n\n    return arraySlice.call(value);\n  }\n\n  return value;\n}\n\nfunction rgba2String(rgba) {\n  rgba[0] = Math.floor(rgba[0]);\n  rgba[1] = Math.floor(rgba[1]);\n  rgba[2] = Math.floor(rgba[2]);\n  return 'rgba(' + rgba.join(',') + ')';\n}\n\nfunction getArrayDim(keyframes) {\n  var lastValue = keyframes[keyframes.length - 1].value;\n  return isArrayLike(lastValue && lastValue[0]) ? 2 : 1;\n}\n\nfunction createTrackClip(animator, easing, oneTrackDone, keyframes, propName, forceAnimate) {\n  var getter = animator._getter;\n  var setter = animator._setter;\n  var useSpline = easing === 'spline';\n  var trackLen = keyframes.length;\n\n  if (!trackLen) {\n    return;\n  } // Guess data type\n\n\n  var firstVal = keyframes[0].value;\n  var isValueArray = isArrayLike(firstVal);\n  var isValueColor = false;\n  var isValueString = false; // For vertices morphing\n\n  var arrDim = isValueArray ? getArrayDim(keyframes) : 0;\n  var trackMaxTime; // Sort keyframe as ascending\n\n  keyframes.sort(function (a, b) {\n    return a.time - b.time;\n  });\n  trackMaxTime = keyframes[trackLen - 1].time; // Percents of each keyframe\n\n  var kfPercents = []; // Value of each keyframe\n\n  var kfValues = [];\n  var prevValue = keyframes[0].value;\n  var isAllValueEqual = true;\n\n  for (var i = 0; i < trackLen; i++) {\n    kfPercents.push(keyframes[i].time / trackMaxTime); // Assume value is a color when it is a string\n\n    var value = keyframes[i].value; // Check if value is equal, deep check if value is array\n\n    if (!(isValueArray && isArraySame(value, prevValue, arrDim) || !isValueArray && value === prevValue)) {\n      isAllValueEqual = false;\n    }\n\n    prevValue = value; // Try converting a string to a color array\n\n    if (typeof value == 'string') {\n      var colorArray = color.parse(value);\n\n      if (colorArray) {\n        value = colorArray;\n        isValueColor = true;\n      } else {\n        isValueString = true;\n      }\n    }\n\n    kfValues.push(value);\n  }\n\n  if (!forceAnimate && isAllValueEqual) {\n    return;\n  }\n\n  var lastValue = kfValues[trackLen - 1]; // Polyfill array and NaN value\n\n  for (var i = 0; i < trackLen - 1; i++) {\n    if (isValueArray) {\n      fillArr(kfValues[i], lastValue, arrDim);\n    } else {\n      if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n        kfValues[i] = lastValue;\n      }\n    }\n  }\n\n  isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim); // Cache the key of last frame to speed up when\n  // animation playback is sequency\n\n  var lastFrame = 0;\n  var lastFramePercent = 0;\n  var start;\n  var w;\n  var p0;\n  var p1;\n  var p2;\n  var p3;\n\n  if (isValueColor) {\n    var rgba = [0, 0, 0, 0];\n  }\n\n  var onframe = function (target, percent) {\n    // Find the range keyframes\n    // kf1-----kf2---------current--------kf3\n    // find kf2 and kf3 and do interpolation\n    var frame; // In the easing function like elasticOut, percent may less than 0\n\n    if (percent < 0) {\n      frame = 0;\n    } else if (percent < lastFramePercent) {\n      // Start from next key\n      // PENDING start from lastFrame ?\n      start = Math.min(lastFrame + 1, trackLen - 1);\n\n      for (frame = start; frame >= 0; frame--) {\n        if (kfPercents[frame] <= percent) {\n          break;\n        }\n      } // PENDING really need to do this ?\n\n\n      frame = Math.min(frame, trackLen - 2);\n    } else {\n      for (frame = lastFrame; frame < trackLen; frame++) {\n        if (kfPercents[frame] > percent) {\n          break;\n        }\n      }\n\n      frame = Math.min(frame - 1, trackLen - 2);\n    }\n\n    lastFrame = frame;\n    lastFramePercent = percent;\n    var range = kfPercents[frame + 1] - kfPercents[frame];\n\n    if (range === 0) {\n      return;\n    } else {\n      w = (percent - kfPercents[frame]) / range;\n    }\n\n    if (useSpline) {\n      p1 = kfValues[frame];\n      p0 = kfValues[frame === 0 ? frame : frame - 1];\n      p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n      p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n\n      if (isValueArray) {\n        catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          value = catmullRomInterpolateArray(p0, p1, p2, p3, w, w * w, w * w * w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(p1, p2, w);\n        } else {\n          value = catmullRomInterpolate(p0, p1, p2, p3, w, w * w, w * w * w);\n        }\n\n        setter(target, propName, value);\n      }\n    } else {\n      if (isValueArray) {\n        interpolateArray(kfValues[frame], kfValues[frame + 1], w, getter(target, propName), arrDim);\n      } else {\n        var value;\n\n        if (isValueColor) {\n          interpolateArray(kfValues[frame], kfValues[frame + 1], w, rgba, 1);\n          value = rgba2String(rgba);\n        } else if (isValueString) {\n          // String is step(0.5)\n          return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n        } else {\n          value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n        }\n\n        setter(target, propName, value);\n      }\n    }\n  };\n\n  var clip = new Clip({\n    target: animator._target,\n    life: trackMaxTime,\n    loop: animator._loop,\n    delay: animator._delay,\n    onframe: onframe,\n    ondestroy: oneTrackDone\n  });\n\n  if (easing && easing !== 'spline') {\n    clip.easing = easing;\n  }\n\n  return clip;\n}\n/**\n * @alias module:zrender/animation/Animator\n * @constructor\n * @param {Object} target\n * @param {boolean} loop\n * @param {Function} getter\n * @param {Function} setter\n */\n\n\nvar Animator = function (target, loop, getter, setter) {\n  this._tracks = {};\n  this._target = target;\n  this._loop = loop || false;\n  this._getter = getter || defaultGetter;\n  this._setter = setter || defaultSetter;\n  this._clipCount = 0;\n  this._delay = 0;\n  this._doneList = [];\n  this._onframeList = [];\n  this._clipList = [];\n};\n\nAnimator.prototype = {\n  /**\n   * 设置动画关键帧\n   * @param  {number} time 关键帧时间，单位是ms\n   * @param  {Object} props 关键帧的属性值，key-value表示\n   * @return {module:zrender/animation/Animator}\n   */\n  when: function (time\n  /* ms */\n  , props) {\n    var tracks = this._tracks;\n\n    for (var propName in props) {\n      if (!props.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      if (!tracks[propName]) {\n        tracks[propName] = []; // Invalid value\n\n        var value = this._getter(this._target, propName);\n\n        if (value == null) {\n          // zrLog('Invalid property ' + propName);\n          continue;\n        } // If time is 0\n        //  Then props is given initialize value\n        // Else\n        //  Initialize value from current prop value\n\n\n        if (time !== 0) {\n          tracks[propName].push({\n            time: 0,\n            value: cloneValue(value)\n          });\n        }\n      }\n\n      tracks[propName].push({\n        time: time,\n        value: props[propName]\n      });\n    }\n\n    return this;\n  },\n\n  /**\n   * 添加动画每一帧的回调函数\n   * @param  {Function} callback\n   * @return {module:zrender/animation/Animator}\n   */\n  during: function (callback) {\n    this._onframeList.push(callback);\n\n    return this;\n  },\n  pause: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].pause();\n    }\n\n    this._paused = true;\n  },\n  resume: function () {\n    for (var i = 0; i < this._clipList.length; i++) {\n      this._clipList[i].resume();\n    }\n\n    this._paused = false;\n  },\n  isPaused: function () {\n    return !!this._paused;\n  },\n  _doneCallback: function () {\n    // Clear all tracks\n    this._tracks = {}; // Clear all clips\n\n    this._clipList.length = 0;\n    var doneList = this._doneList;\n    var len = doneList.length;\n\n    for (var i = 0; i < len; i++) {\n      doneList[i].call(this);\n    }\n  },\n\n  /**\n   * 开始执行动画\n   * @param  {string|Function} [easing]\n   *         动画缓动函数，详见{@link module:zrender/animation/easing}\n   * @param  {boolean} forceAnimate\n   * @return {module:zrender/animation/Animator}\n   */\n  start: function (easing, forceAnimate) {\n    var self = this;\n    var clipCount = 0;\n\n    var oneTrackDone = function () {\n      clipCount--;\n\n      if (!clipCount) {\n        self._doneCallback();\n      }\n    };\n\n    var lastClip;\n\n    for (var propName in this._tracks) {\n      if (!this._tracks.hasOwnProperty(propName)) {\n        continue;\n      }\n\n      var clip = createTrackClip(this, easing, oneTrackDone, this._tracks[propName], propName, forceAnimate);\n\n      if (clip) {\n        this._clipList.push(clip);\n\n        clipCount++; // If start after added to animation\n\n        if (this.animation) {\n          this.animation.addClip(clip);\n        }\n\n        lastClip = clip;\n      }\n    } // Add during callback on the last clip\n\n\n    if (lastClip) {\n      var oldOnFrame = lastClip.onframe;\n\n      lastClip.onframe = function (target, percent) {\n        oldOnFrame(target, percent);\n\n        for (var i = 0; i < self._onframeList.length; i++) {\n          self._onframeList[i](target, percent);\n        }\n      };\n    } // This optimization will help the case that in the upper application\n    // the view may be refreshed frequently, where animation will be\n    // called repeatly but nothing changed.\n\n\n    if (!clipCount) {\n      this._doneCallback();\n    }\n\n    return this;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stop: function (forwardToLast) {\n    var clipList = this._clipList;\n    var animation = this.animation;\n\n    for (var i = 0; i < clipList.length; i++) {\n      var clip = clipList[i];\n\n      if (forwardToLast) {\n        // Move to last frame before stop\n        clip.onframe(this._target, 1);\n      }\n\n      animation && animation.removeClip(clip);\n    }\n\n    clipList.length = 0;\n  },\n\n  /**\n   * 设置动画延迟开始的时间\n   * @param  {number} time 单位ms\n   * @return {module:zrender/animation/Animator}\n   */\n  delay: function (time) {\n    this._delay = time;\n    return this;\n  },\n\n  /**\n   * 添加动画结束的回调\n   * @param  {Function} cb\n   * @return {module:zrender/animation/Animator}\n   */\n  done: function (cb) {\n    if (cb) {\n      this._doneList.push(cb);\n    }\n\n    return this;\n  },\n\n  /**\n   * @return {Array.<module:zrender/animation/Clip>}\n   */\n  getClips: function () {\n    return this._clipList;\n  }\n};\nvar _default = Animator;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 63\n// module chunks = 0","var _default = typeof window !== 'undefined' && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || // https://github.com/ecomfe/zrender/issues/189#issuecomment-224919809\nwindow.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (func) {\n  setTimeout(func, 16);\n};\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 64\n// module chunks = 0","var PI2 = Math.PI * 2;\n\nfunction normalizeRadian(angle) {\n  angle %= PI2;\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle;\n}\n\nexports.normalizeRadian = normalizeRadian;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 65\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n/**\n * Simple double linked list. Compared with array, it has O(1) remove operation.\n * @constructor\n */\nvar LinkedList = function () {\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n  this.head = null;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.tail = null;\n  this._len = 0;\n};\n\nvar linkedListProto = LinkedList.prototype;\n/**\n * Insert a new value at the tail\n * @param  {} val\n * @return {module:zrender/core/LRU~Entry}\n */\n\nlinkedListProto.insert = function (val) {\n  var entry = new Entry(val);\n  this.insertEntry(entry);\n  return entry;\n};\n/**\n * Insert an entry at the tail\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.insertEntry = function (entry) {\n  if (!this.head) {\n    this.head = this.tail = entry;\n  } else {\n    this.tail.next = entry;\n    entry.prev = this.tail;\n    entry.next = null;\n    this.tail = entry;\n  }\n\n  this._len++;\n};\n/**\n * Remove entry.\n * @param  {module:zrender/core/LRU~Entry} entry\n */\n\n\nlinkedListProto.remove = function (entry) {\n  var prev = entry.prev;\n  var next = entry.next;\n\n  if (prev) {\n    prev.next = next;\n  } else {\n    // Is head\n    this.head = next;\n  }\n\n  if (next) {\n    next.prev = prev;\n  } else {\n    // Is tail\n    this.tail = prev;\n  }\n\n  entry.next = entry.prev = null;\n  this._len--;\n};\n/**\n * @return {number}\n */\n\n\nlinkedListProto.len = function () {\n  return this._len;\n};\n/**\n * Clear list\n */\n\n\nlinkedListProto.clear = function () {\n  this.head = this.tail = null;\n  this._len = 0;\n};\n/**\n * @constructor\n * @param {} val\n */\n\n\nvar Entry = function (val) {\n  /**\n   * @type {}\n   */\n  this.value = val;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.next;\n  /**\n   * @type {module:zrender/core/LRU~Entry}\n   */\n\n  this.prev;\n};\n/**\n * LRU Cache\n * @constructor\n * @alias module:zrender/core/LRU\n */\n\n\nvar LRU = function (maxSize) {\n  this._list = new LinkedList();\n  this._map = {};\n  this._maxSize = maxSize || 10;\n  this._lastRemovedEntry = null;\n};\n\nvar LRUProto = LRU.prototype;\n/**\n * @param  {string} key\n * @param  {} value\n * @return {} Removed value\n */\n\nLRUProto.put = function (key, value) {\n  var list = this._list;\n  var map = this._map;\n  var removed = null;\n\n  if (map[key] == null) {\n    var len = list.len(); // Reuse last removed entry\n\n    var entry = this._lastRemovedEntry;\n\n    if (len >= this._maxSize && len > 0) {\n      // Remove the least recently used\n      var leastUsedEntry = list.head;\n      list.remove(leastUsedEntry);\n      delete map[leastUsedEntry.key];\n      removed = leastUsedEntry.value;\n      this._lastRemovedEntry = leastUsedEntry;\n    }\n\n    if (entry) {\n      entry.value = value;\n    } else {\n      entry = new Entry(value);\n    }\n\n    entry.key = key;\n    list.insertEntry(entry);\n    map[key] = entry;\n  }\n\n  return removed;\n};\n/**\n * @param  {string} key\n * @return {}\n */\n\n\nLRUProto.get = function (key) {\n  var entry = this._map[key];\n  var list = this._list;\n\n  if (entry != null) {\n    // Put the latest used entry in the tail\n    if (entry !== list.tail) {\n      list.remove(entry);\n      list.insertEntry(entry);\n    }\n\n    return entry.value;\n  }\n};\n/**\n * Clear the cache\n */\n\n\nLRUProto.clear = function () {\n  this._list.clear();\n\n  this._map = {};\n};\n\nvar _default = LRU;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 66\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\nvar idStart = 0x0907;\n\nfunction _default() {\n  return idStart++;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 67\n// module chunks = 0","var Path = require(\"./Path\");\n\n// CompoundPath to improve performance\nvar _default = Path.extend({\n  type: 'compound',\n  shape: {\n    paths: null\n  },\n  _updatePathDirty: function () {\n    var dirtyPath = this.__dirtyPath;\n    var paths = this.shape.paths;\n\n    for (var i = 0; i < paths.length; i++) {\n      // Mark as dirty if any subpath is dirty\n      dirtyPath = dirtyPath || paths[i].__dirtyPath;\n    }\n\n    this.__dirtyPath = dirtyPath;\n    this.__dirty = this.__dirty || dirtyPath;\n  },\n  beforeBrush: function () {\n    this._updatePathDirty();\n\n    var paths = this.shape.paths || [];\n    var scale = this.getGlobalScale(); // Update path scale\n\n    for (var i = 0; i < paths.length; i++) {\n      if (!paths[i].path) {\n        paths[i].createPathProxy();\n      }\n\n      paths[i].path.setScale(scale[0], scale[1]);\n    }\n  },\n  buildPath: function (ctx, shape) {\n    var paths = shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].buildPath(ctx, paths[i].shape, true);\n    }\n  },\n  afterBrush: function () {\n    var paths = this.shape.paths || [];\n\n    for (var i = 0; i < paths.length; i++) {\n      paths[i].__dirtyPath = false;\n    }\n  },\n  getBoundingRect: function () {\n    this._updatePathDirty();\n\n    return Path.prototype.getBoundingRect.call(this);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 68\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, x2, y2 are all percent from 0 to 1\n * @param {number} [x=0]\n * @param {number} [y=0]\n * @param {number} [x2=1]\n * @param {number} [y2=0]\n * @param {Array.<Object>} colorStops\n * @param {boolean} [globalCoord=false]\n */\nvar LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'linear', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0 : x;\n  this.y = y == null ? 0 : y;\n  this.x2 = x2 == null ? 1 : x2;\n  this.y2 = y2 == null ? 0 : y2; // Can be cloned\n\n  this.type = 'linear'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nLinearGradient.prototype = {\n  constructor: LinearGradient\n};\nzrUtil.inherits(LinearGradient, Gradient);\nvar _default = LinearGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 69\n// module chunks = 0","var zrUtil = require(\"../core/util\");\n\nvar Gradient = require(\"./Gradient\");\n\n/**\n * x, y, r are all percent from 0 to 1\n * @param {number} [x=0.5]\n * @param {number} [y=0.5]\n * @param {number} [r=0.5]\n * @param {Array.<Object>} [colorStops]\n * @param {boolean} [globalCoord=false]\n */\nvar RadialGradient = function (x, y, r, colorStops, globalCoord) {\n  // Should do nothing more in this constructor. Because gradient can be\n  // declard by `color: {type: 'radial', colorStops: ...}`, where\n  // this constructor will not be called.\n  this.x = x == null ? 0.5 : x;\n  this.y = y == null ? 0.5 : y;\n  this.r = r == null ? 0.5 : r; // Can be cloned\n\n  this.type = 'radial'; // If use global coord\n\n  this.global = globalCoord || false;\n  Gradient.call(this, colorStops);\n};\n\nRadialGradient.prototype = {\n  constructor: RadialGradient\n};\nzrUtil.inherits(RadialGradient, Gradient);\nvar _default = RadialGradient;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 70\n// module chunks = 0","var STYLE_COMMON_PROPS = [['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'], ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]]; // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n// var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\nvar Style = function (opts, host) {\n  this.extendFrom(opts, false);\n  this.host = host;\n};\n\nfunction createLinearGradient(ctx, obj, rect) {\n  var x = obj.x == null ? 0 : obj.x;\n  var x2 = obj.x2 == null ? 1 : obj.x2;\n  var y = obj.y == null ? 0 : obj.y;\n  var y2 = obj.y2 == null ? 0 : obj.y2;\n\n  if (!obj.global) {\n    x = x * rect.width + rect.x;\n    x2 = x2 * rect.width + rect.x;\n    y = y * rect.height + rect.y;\n    y2 = y2 * rect.height + rect.y;\n  }\n\n  var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n  return canvasGradient;\n}\n\nfunction createRadialGradient(ctx, obj, rect) {\n  var width = rect.width;\n  var height = rect.height;\n  var min = Math.min(width, height);\n  var x = obj.x == null ? 0.5 : obj.x;\n  var y = obj.y == null ? 0.5 : obj.y;\n  var r = obj.r == null ? 0.5 : obj.r;\n\n  if (!obj.global) {\n    x = x * width + rect.x;\n    y = y * height + rect.y;\n    r = r * min;\n  }\n\n  var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n  return canvasGradient;\n}\n\nStyle.prototype = {\n  constructor: Style,\n\n  /**\n   * @type {module:zrender/graphic/Displayable}\n   */\n  host: null,\n\n  /**\n   * @type {string}\n   */\n  fill: '#000',\n\n  /**\n   * @type {string}\n   */\n  stroke: null,\n\n  /**\n   * @type {number}\n   */\n  opacity: 1,\n\n  /**\n   * @type {Array.<number>}\n   */\n  lineDash: null,\n\n  /**\n   * @type {number}\n   */\n  lineDashOffset: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  shadowOffsetY: 0,\n\n  /**\n   * @type {number}\n   */\n  lineWidth: 1,\n\n  /**\n   * If stroke ignore scale\n   * @type {Boolean}\n   */\n  strokeNoScale: false,\n  // Bounding rect text configuration\n  // Not affected by element transform\n\n  /**\n   * @type {string}\n   */\n  text: null,\n\n  /**\n   * If `fontSize` or `fontFamily` exists, `font` will be reset by\n   * `fontSize`, `fontStyle`, `fontWeight`, `fontFamily`.\n   * So do not visit it directly in upper application (like echarts),\n   * but use `contain/text#makeFont` instead.\n   * @type {string}\n   */\n  font: null,\n\n  /**\n   * The same as font. Use font please.\n   * @deprecated\n   * @type {string}\n   */\n  textFont: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontStyle: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontWeight: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * Should be 12 but not '12px'.\n   * @type {number}\n   */\n  fontSize: null,\n\n  /**\n   * It helps merging respectively, rather than parsing an entire font string.\n   * @type {string}\n   */\n  fontFamily: null,\n\n  /**\n   * Reserved for special functinality, like 'hr'.\n   * @type {string}\n   */\n  textTag: null,\n\n  /**\n   * @type {string}\n   */\n  textFill: '#000',\n\n  /**\n   * @type {string}\n   */\n  textStroke: null,\n\n  /**\n   * @type {number}\n   */\n  textWidth: null,\n\n  /**\n   * Only for textBackground.\n   * @type {number}\n   */\n  textHeight: null,\n\n  /**\n   * textStroke may be set as some color as a default\n   * value in upper applicaion, where the default value\n   * of textStrokeWidth should be 0 to make sure that\n   * user can choose to do not use text stroke.\n   * @type {number}\n   */\n  textStrokeWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textLineHeight: null,\n\n  /**\n   * 'inside', 'left', 'right', 'top', 'bottom'\n   * [x, y]\n   * Based on x, y of rect.\n   * @type {string|Array.<number>}\n   * @default 'inside'\n   */\n  textPosition: 'inside',\n\n  /**\n   * If not specified, use the boundingRect of a `displayable`.\n   * @type {Object}\n   */\n  textRect: null,\n\n  /**\n   * [x, y]\n   * @type {Array.<number>}\n   */\n  textOffset: null,\n\n  /**\n   * @type {string}\n   */\n  textAlign: null,\n\n  /**\n   * @type {string}\n   */\n  textVerticalAlign: null,\n\n  /**\n   * @type {number}\n   */\n  textDistance: 5,\n\n  /**\n   * @type {string}\n   */\n  textShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textShadowOffsetY: 0,\n\n  /**\n   * @type {string}\n   */\n  textBoxShadowColor: 'transparent',\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowBlur: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetX: 0,\n\n  /**\n   * @type {number}\n   */\n  textBoxShadowOffsetY: 0,\n\n  /**\n   * Whether transform text.\n   * Only useful in Path and Image element\n   * @type {boolean}\n   */\n  transformText: false,\n\n  /**\n   * Text rotate around position of Path or Image\n   * Only useful in Path and Image element and transformText is false.\n   */\n  textRotation: 0,\n\n  /**\n   * Text origin of text rotation, like [10, 40].\n   * Based on x, y of rect.\n   * Useful in label rotation of circular symbol.\n   * By default, this origin is textPosition.\n   * Can be 'center'.\n   * @type {string|Array.<number>}\n   */\n  textOrigin: null,\n\n  /**\n   * @type {string}\n   */\n  textBackgroundColor: null,\n\n  /**\n   * @type {string}\n   */\n  textBorderColor: null,\n\n  /**\n   * @type {number}\n   */\n  textBorderWidth: 0,\n\n  /**\n   * @type {number}\n   */\n  textBorderRadius: 0,\n\n  /**\n   * Can be `2` or `[2, 4]` or `[2, 3, 4, 5]`\n   * @type {number|Array.<number>}\n   */\n  textPadding: null,\n\n  /**\n   * Text styles for rich text.\n   * @type {Object}\n   */\n  rich: null,\n\n  /**\n   * {outerWidth, outerHeight, ellipsis, placeholder}\n   * @type {Object}\n   */\n  truncate: null,\n\n  /**\n   * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n   * @type {string}\n   */\n  blend: null,\n\n  /**\n   * @param {CanvasRenderingContext2D} ctx\n   */\n  bind: function (ctx, el, prevEl) {\n    var style = this;\n    var prevStyle = prevEl && prevEl.style;\n    var firstDraw = !prevStyle;\n\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n      var prop = STYLE_COMMON_PROPS[i];\n      var styleName = prop[0];\n\n      if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n        // FIXME Invalid property value will cause style leak from previous element.\n        ctx[styleName] = style[styleName] || prop[1];\n      }\n    }\n\n    if (firstDraw || style.fill !== prevStyle.fill) {\n      ctx.fillStyle = style.fill;\n    }\n\n    if (firstDraw || style.stroke !== prevStyle.stroke) {\n      ctx.strokeStyle = style.stroke;\n    }\n\n    if (firstDraw || style.opacity !== prevStyle.opacity) {\n      ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n    }\n\n    if (firstDraw || style.blend !== prevStyle.blend) {\n      ctx.globalCompositeOperation = style.blend || 'source-over';\n    }\n\n    if (this.hasStroke()) {\n      var lineWidth = style.lineWidth;\n      ctx.lineWidth = lineWidth / (this.strokeNoScale && el && el.getLineScale ? el.getLineScale() : 1);\n    }\n  },\n  hasFill: function () {\n    var fill = this.fill;\n    return fill != null && fill !== 'none';\n  },\n  hasStroke: function () {\n    var stroke = this.stroke;\n    return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n  },\n\n  /**\n   * Extend from other style\n   * @param {zrender/graphic/Style} otherStyle\n   * @param {boolean} overwrite true: overwrirte any way.\n   *                            false: overwrite only when !target.hasOwnProperty\n   *                            others: overwrite when property is not null/undefined.\n   */\n  extendFrom: function (otherStyle, overwrite) {\n    if (otherStyle) {\n      for (var name in otherStyle) {\n        if (otherStyle.hasOwnProperty(name) && (overwrite === true || (overwrite === false ? !this.hasOwnProperty(name) : otherStyle[name] != null))) {\n          this[name] = otherStyle[name];\n        }\n      }\n    }\n  },\n\n  /**\n   * Batch setting style with a given object\n   * @param {Object|string} obj\n   * @param {*} [obj]\n   */\n  set: function (obj, value) {\n    if (typeof obj === 'string') {\n      this[obj] = value;\n    } else {\n      this.extendFrom(obj, true);\n    }\n  },\n\n  /**\n   * Clone\n   * @return {zrender/graphic/Style} [description]\n   */\n  clone: function () {\n    var newStyle = new this.constructor();\n    newStyle.extendFrom(this, true);\n    return newStyle;\n  },\n  getGradient: function (ctx, obj, rect) {\n    var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n    var canvasGradient = method(ctx, obj, rect);\n    var colorStops = obj.colorStops;\n\n    for (var i = 0; i < colorStops.length; i++) {\n      canvasGradient.addColorStop(colorStops[i].offset, colorStops[i].color);\n    }\n\n    return canvasGradient;\n  }\n};\nvar styleProto = Style.prototype;\n\nfor (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n  var prop = STYLE_COMMON_PROPS[i];\n\n  if (!(prop[0] in styleProto)) {\n    styleProto[prop[0]] = prop[1];\n  }\n} // Provide for others\n\n\nStyle.getGradient = styleProto.getGradient;\nvar _default = Style;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 71\n// module chunks = 0","var smoothSpline = require(\"./smoothSpline\");\n\nvar smoothBezier = require(\"./smoothBezier\");\n\nfunction buildPath(ctx, shape, closePath) {\n  var points = shape.points;\n  var smooth = shape.smooth;\n\n  if (points && points.length >= 2) {\n    if (smooth && smooth !== 'spline') {\n      var controlPoints = smoothBezier(points, smooth, closePath, shape.smoothConstraint);\n      ctx.moveTo(points[0][0], points[0][1]);\n      var len = points.length;\n\n      for (var i = 0; i < (closePath ? len : len - 1); i++) {\n        var cp1 = controlPoints[i * 2];\n        var cp2 = controlPoints[i * 2 + 1];\n        var p = points[(i + 1) % len];\n        ctx.bezierCurveTo(cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]);\n      }\n    } else {\n      if (smooth === 'spline') {\n        points = smoothSpline(points, closePath);\n      }\n\n      ctx.moveTo(points[0][0], points[0][1]);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        ctx.lineTo(points[i][0], points[i][1]);\n      }\n    }\n\n    closePath && ctx.closePath();\n  }\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 72\n// module chunks = 0","function buildPath(ctx, shape) {\n  var x = shape.x;\n  var y = shape.y;\n  var width = shape.width;\n  var height = shape.height;\n  var r = shape.r;\n  var r1;\n  var r2;\n  var r3;\n  var r4; // Convert width and height to positive for better borderRadius\n\n  if (width < 0) {\n    x = x + width;\n    width = -width;\n  }\n\n  if (height < 0) {\n    y = y + height;\n    height = -height;\n  }\n\n  if (typeof r === 'number') {\n    r1 = r2 = r3 = r4 = r;\n  } else if (r instanceof Array) {\n    if (r.length === 1) {\n      r1 = r2 = r3 = r4 = r[0];\n    } else if (r.length === 2) {\n      r1 = r3 = r[0];\n      r2 = r4 = r[1];\n    } else if (r.length === 3) {\n      r1 = r[0];\n      r2 = r4 = r[1];\n      r3 = r[2];\n    } else {\n      r1 = r[0];\n      r2 = r[1];\n      r3 = r[2];\n      r4 = r[3];\n    }\n  } else {\n    r1 = r2 = r3 = r4 = 0;\n  }\n\n  var total;\n\n  if (r1 + r2 > width) {\n    total = r1 + r2;\n    r1 *= width / total;\n    r2 *= width / total;\n  }\n\n  if (r3 + r4 > width) {\n    total = r3 + r4;\n    r3 *= width / total;\n    r4 *= width / total;\n  }\n\n  if (r2 + r3 > height) {\n    total = r2 + r3;\n    r2 *= height / total;\n    r3 *= height / total;\n  }\n\n  if (r1 + r4 > height) {\n    total = r1 + r4;\n    r1 *= height / total;\n    r4 *= height / total;\n  }\n\n  ctx.moveTo(x + r1, y);\n  ctx.lineTo(x + width - r2, y);\n  r2 !== 0 && ctx.quadraticCurveTo(x + width, y, x + width, y + r2);\n  ctx.lineTo(x + width, y + height - r3);\n  r3 !== 0 && ctx.quadraticCurveTo(x + width, y + height, x + width - r3, y + height);\n  ctx.lineTo(x + r4, y + height);\n  r4 !== 0 && ctx.quadraticCurveTo(x, y + height, x, y + height - r4);\n  ctx.lineTo(x, y + r1);\n  r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n}\n\nexports.buildPath = buildPath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 73\n// module chunks = 0","var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 74\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\nvar _default = Path.extend({\n  type: 'arc',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 75\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar vec2 = require(\"../../core/vector\");\n\nvar _curve = require(\"../../core/curve\");\n\nvar quadraticSubdivide = _curve.quadraticSubdivide;\nvar cubicSubdivide = _curve.cubicSubdivide;\nvar quadraticAt = _curve.quadraticAt;\nvar cubicAt = _curve.cubicAt;\nvar quadraticDerivativeAt = _curve.quadraticDerivativeAt;\nvar cubicDerivativeAt = _curve.cubicDerivativeAt;\n\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\nvar out = [];\n\nfunction someVectorAt(shape, t, isTangent) {\n  var cpx2 = shape.cpx2;\n  var cpy2 = shape.cpy2;\n\n  if (cpx2 === null || cpy2 === null) {\n    return [(isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t), (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)];\n  } else {\n    return [(isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t), (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)];\n  }\n}\n\nvar _default = Path.extend({\n  type: 'bezier-curve',\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    // cpx2: 0,\n    // cpy2: 0\n    // Curve show percent, for animating\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var cpx1 = shape.cpx1;\n    var cpy1 = shape.cpy1;\n    var cpx2 = shape.cpx2;\n    var cpy2 = shape.cpy2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (cpx2 == null || cpy2 == null) {\n      if (percent < 1) {\n        quadraticSubdivide(x1, cpx1, x2, percent, out);\n        cpx1 = out[1];\n        x2 = out[2];\n        quadraticSubdivide(y1, cpy1, y2, percent, out);\n        cpy1 = out[1];\n        y2 = out[2];\n      }\n\n      ctx.quadraticCurveTo(cpx1, cpy1, x2, y2);\n    } else {\n      if (percent < 1) {\n        cubicSubdivide(x1, cpx1, cpx2, x2, percent, out);\n        cpx1 = out[1];\n        cpx2 = out[2];\n        x2 = out[3];\n        cubicSubdivide(y1, cpy1, cpy2, y2, percent, out);\n        cpy1 = out[1];\n        cpy2 = out[2];\n        y2 = out[3];\n      }\n\n      ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n    }\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  pointAt: function (t) {\n    return someVectorAt(this.shape, t, false);\n  },\n\n  /**\n   * Get tangent at percent\n   * @param  {number} t\n   * @return {Array.<number>}\n   */\n  tangentAt: function (t) {\n    var p = someVectorAt(this.shape, t, true);\n    return vec2.normalize(p, p);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 76\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\nvar _default = Path.extend({\n  type: 'circle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0\n  },\n  buildPath: function (ctx, shape, inBundle) {\n    // Better stroking in ShapeBundle\n    // Always do it may have performence issue ( fill may be 2x more cost)\n    if (inBundle) {\n      ctx.moveTo(shape.cx + shape.r, shape.cy);\n    } // else {\n    //     if (ctx.allocate && !ctx.data.length) {\n    //         ctx.allocate(ctx.CMD_MEM_SIZE.A);\n    //     }\n    // }\n    // Better stroking in ShapeBundle\n    // ctx.moveTo(shape.cx + shape.r, shape.cy);\n\n\n    ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 77\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\nvar _default = Path.extend({\n  type: 'line',\n  shape: {\n    // Start point\n    x1: 0,\n    y1: 0,\n    // End point\n    x2: 0,\n    y2: 0,\n    percent: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1 = shape.x1;\n    var y1 = shape.y1;\n    var x2 = shape.x2;\n    var y2 = shape.y2;\n    var percent = shape.percent;\n\n    if (percent === 0) {\n      return;\n    }\n\n    ctx.moveTo(x1, y1);\n\n    if (percent < 1) {\n      x2 = x1 * (1 - percent) + x2 * percent;\n      y2 = y1 * (1 - percent) + y2 * percent;\n    }\n\n    ctx.lineTo(x2, y2);\n  },\n\n  /**\n   * Get point at percent\n   * @param  {number} percent\n   * @return {Array.<number>}\n   */\n  pointAt: function (p) {\n    var shape = this.shape;\n    return [shape.x1 * (1 - p) + shape.x2 * p, shape.y1 * (1 - p) + shape.y2 * p];\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 78\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\nvar _default = Path.extend({\n  type: 'polygon',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 79\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar polyHelper = require(\"../helper/poly\");\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\nvar _default = Path.extend({\n  type: 'polyline',\n  shape: {\n    points: null,\n    smooth: false,\n    smoothConstraint: null\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    polyHelper.buildPath(ctx, shape, false);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 80\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar roundRectHelper = require(\"../helper/roundRect\");\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\nvar _default = Path.extend({\n  type: 'rect',\n  shape: {\n    // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n    // r缩写为1         相当于 [1, 1, 1, 1]\n    // r缩写为[1]       相当于 [1, 1, 1, 1]\n    // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n    // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n    r: 0,\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var width = shape.width;\n    var height = shape.height;\n\n    if (!shape.r) {\n      ctx.rect(x, y, width, height);\n    } else {\n      roundRectHelper.buildPath(ctx, shape);\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 81\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\nvar _default = Path.extend({\n  type: 'ring',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var PI2 = Math.PI * 2;\n    ctx.moveTo(x + shape.r, y);\n    ctx.arc(x, y, shape.r, 0, PI2, false);\n    ctx.moveTo(x + shape.r0, y);\n    ctx.arc(x, y, shape.r0, 0, PI2, true);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 82\n// module chunks = 0","var Path = require(\"../Path\");\n\nvar fixClipWithShadow = require(\"../helper/fixClipWithShadow\");\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\nvar _default = Path.extend({\n  type: 'sector',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitX = Math.cos(startAngle);\n    var unitY = Math.sin(startAngle);\n    ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n    ctx.lineTo(unitX * r + x, unitY * r + y);\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.lineTo(Math.cos(endAngle) * r0 + x, Math.sin(endAngle) * r0 + y);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 83\n// module chunks = 0","var _core = require(\"../core\");\n\nvar createElement = _core.createElement;\n\nvar zrUtil = require(\"../../core/util\");\n\nvar Path = require(\"../../graphic/Path\");\n\nvar ZImage = require(\"../../graphic/Image\");\n\nvar ZText = require(\"../../graphic/Text\");\n\nvar _graphic = require(\"../graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * @file Manages elements that can be defined in <defs> in SVG,\n *       e.g., gradients, clip path, etc.\n * @author Zhang Wenli\n */\nvar MARK_UNUSED = '0';\nvar MARK_USED = '1';\n/**\n * Manages elements that can be defined in <defs> in SVG,\n * e.g., gradients, clip path, etc.\n *\n * @class\n * @param {SVGElement}      svgRoot   root of SVG document\n * @param {string|string[]} tagNames  possible tag names\n * @param {string}          markLabel label name to make if the element\n *                                    is used\n */\n\nfunction Definable(svgRoot, tagNames, markLabel) {\n  this._svgRoot = svgRoot;\n  this._tagNames = typeof tagNames === 'string' ? [tagNames] : tagNames;\n  this._markLabel = markLabel;\n  this.nextId = 0;\n}\n\nDefinable.prototype.createElement = createElement;\n/**\n * Get the <defs> tag for svgRoot; optionally creates one if not exists.\n *\n * @param {boolean} isForceCreating if need to create when not exists\n * @return {SVGDefsElement} SVG <defs> element, null if it doesn't\n * exist and isForceCreating is false\n */\n\nDefinable.prototype.getDefs = function (isForceCreating) {\n  var svgRoot = this._svgRoot;\n\n  var defs = this._svgRoot.getElementsByTagName('defs');\n\n  if (defs.length === 0) {\n    // Not exist\n    if (isForceCreating) {\n      defs = svgRoot.insertBefore(this.createElement('defs'), // Create new tag\n      svgRoot.firstChild // Insert in the front of svg\n      );\n\n      if (!defs.contains) {\n        // IE doesn't support contains method\n        defs.contains = function (el) {\n          var children = defs.children;\n\n          if (!children) {\n            return false;\n          }\n\n          for (var i = children.length - 1; i >= 0; --i) {\n            if (children[i] === el) {\n              return true;\n            }\n          }\n\n          return false;\n        };\n      }\n\n      return defs;\n    } else {\n      return null;\n    }\n  } else {\n    return defs[0];\n  }\n};\n/**\n * Update DOM element if necessary.\n *\n * @param {Object|string} element style element. e.g., for gradient,\n *                                it may be '#ccc' or {type: 'linear', ...}\n * @param {Function|undefined} onUpdate update callback\n */\n\n\nDefinable.prototype.update = function (element, onUpdate) {\n  if (!element) {\n    return;\n  }\n\n  var defs = this.getDefs(false);\n\n  if (element._dom && defs.contains(element._dom)) {\n    // Update DOM\n    if (typeof onUpdate === 'function') {\n      onUpdate();\n    }\n  } else {\n    // No previous dom, create new\n    var dom = this.add(element);\n\n    if (dom) {\n      element._dom = dom;\n    }\n  }\n};\n/**\n * Add gradient dom to defs\n *\n * @param {SVGElement} dom DOM to be added to <defs>\n */\n\n\nDefinable.prototype.addDom = function (dom) {\n  var defs = this.getDefs(true);\n  defs.appendChild(dom);\n};\n/**\n * Remove DOM of a given element.\n *\n * @param {SVGElement} element element to remove dom\n */\n\n\nDefinable.prototype.removeDom = function (element) {\n  var defs = this.getDefs(false);\n  defs.removeChild(element._dom);\n};\n/**\n * Get DOMs of this element.\n *\n * @return {HTMLDomElement} doms of this defineable elements in <defs>\n */\n\n\nDefinable.prototype.getDoms = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // No dom when defs is not defined\n    return [];\n  }\n\n  var doms = [];\n  zrUtil.each(this._tagNames, function (tagName) {\n    var tags = defs.getElementsByTagName(tagName); // Note that tags is HTMLCollection, which is array-like\n    // rather than real array.\n    // So `doms.concat(tags)` add tags as one object.\n\n    doms = doms.concat([].slice.call(tags));\n  });\n  return doms;\n};\n/**\n * Mark DOMs to be unused before painting, and clear unused ones at the end\n * of the painting.\n */\n\n\nDefinable.prototype.markAllUnused = function () {\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    dom[that._markLabel] = MARK_UNUSED;\n  });\n};\n/**\n * Mark a single DOM to be used.\n *\n * @param {SVGElement} dom DOM to mark\n */\n\n\nDefinable.prototype.markUsed = function (dom) {\n  if (dom) {\n    dom[this._markLabel] = MARK_USED;\n  }\n};\n/**\n * Remove unused DOMs defined in <defs>\n */\n\n\nDefinable.prototype.removeUnused = function () {\n  var defs = this.getDefs(false);\n\n  if (!defs) {\n    // Nothing to remove\n    return;\n  }\n\n  var doms = this.getDoms();\n  var that = this;\n  zrUtil.each(doms, function (dom) {\n    if (dom[that._markLabel] !== MARK_USED) {\n      // Remove gradient\n      defs.removeChild(dom);\n    }\n  });\n};\n/**\n * Get SVG proxy.\n *\n * @param {Displayable} displayable displayable element\n * @return {Path|Image|Text} svg proxy of given element\n */\n\n\nDefinable.prototype.getSvgProxy = function (displayable) {\n  if (displayable instanceof Path) {\n    return svgPath;\n  } else if (displayable instanceof ZImage) {\n    return svgImage;\n  } else if (displayable instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n};\n/**\n * Get text SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element of text\n */\n\n\nDefinable.prototype.getTextSvgElement = function (displayable) {\n  return displayable.__textSvgEl;\n};\n/**\n * Get SVG element.\n *\n * @param {Displayable} displayable displayable element\n * @return {SVGElement} SVG element\n */\n\n\nDefinable.prototype.getSvgElement = function (displayable) {\n  return displayable.__svgEl;\n};\n\nvar _default = Definable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/Definable.js\n// module id = 84\n// module chunks = 0","var Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar transformPath = require(\"./transformPath\");\n\n// command chars\nvar cc = ['m', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z', 'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'];\nvar mathSqrt = Math.sqrt;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI = Math.PI;\n\nvar vMag = function (v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n};\n\nvar vRatio = function (u, v) {\n  return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n};\n\nvar vAngle = function (u, v) {\n  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n};\n\nfunction processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n  var psi = psiDeg * (PI / 180.0);\n  var xp = mathCos(psi) * (x1 - x2) / 2.0 + mathSin(psi) * (y1 - y2) / 2.0;\n  var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0 + mathCos(psi) * (y1 - y2) / 2.0;\n  var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n  if (lambda > 1) {\n    rx *= mathSqrt(lambda);\n    ry *= mathSqrt(lambda);\n  }\n\n  var f = (fa === fs ? -1 : 1) * mathSqrt((rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) / (rx * rx * (yp * yp) + ry * ry * (xp * xp))) || 0;\n  var cxp = f * rx * yp / ry;\n  var cyp = f * -ry * xp / rx;\n  var cx = (x1 + x2) / 2.0 + mathCos(psi) * cxp - mathSin(psi) * cyp;\n  var cy = (y1 + y2) / 2.0 + mathSin(psi) * cxp + mathCos(psi) * cyp;\n  var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n  var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n  var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n  var dTheta = vAngle(u, v);\n\n  if (vRatio(u, v) <= -1) {\n    dTheta = PI;\n  }\n\n  if (vRatio(u, v) >= 1) {\n    dTheta = 0;\n  }\n\n  if (fs === 0 && dTheta > 0) {\n    dTheta = dTheta - 2 * PI;\n  }\n\n  if (fs === 1 && dTheta < 0) {\n    dTheta = dTheta + 2 * PI;\n  }\n\n  path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n}\n\nfunction createPathProxyFromString(data) {\n  if (!data) {\n    return [];\n  } // command string\n\n\n  var cs = data.replace(/-/g, ' -').replace(/  /g, ' ').replace(/ /g, ',').replace(/,,/g, ',');\n  var n; // create pipes so that we can split the data\n\n  for (n = 0; n < cc.length; n++) {\n    cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n  } // create array\n\n\n  var arr = cs.split('|'); // init context point\n\n  var cpx = 0;\n  var cpy = 0;\n  var path = new PathProxy();\n  var CMD = PathProxy.CMD;\n  var prevCmd;\n\n  for (n = 1; n < arr.length; n++) {\n    var str = arr[n];\n    var c = str.charAt(0);\n    var off = 0;\n    var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n    var cmd;\n\n    if (p.length > 0 && p[0] === '') {\n      p.shift();\n    }\n\n    for (var i = 0; i < p.length; i++) {\n      p[i] = parseFloat(p[i]);\n    }\n\n    while (off < p.length && !isNaN(p[off])) {\n      if (isNaN(p[0])) {\n        break;\n      }\n\n      var ctlPtx;\n      var ctlPty;\n      var rx;\n      var ry;\n      var psi;\n      var fa;\n      var fs;\n      var x1 = cpx;\n      var y1 = cpy; // convert l, H, h, V, and v to L\n\n      switch (c) {\n        case 'l':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'L':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'm':\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'l';\n          break;\n\n        case 'M':\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.M;\n          path.addData(cmd, cpx, cpy);\n          c = 'L';\n          break;\n\n        case 'h':\n          cpx += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'H':\n          cpx = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'v':\n          cpy += p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'V':\n          cpy = p[off++];\n          cmd = CMD.L;\n          path.addData(cmd, cpx, cpy);\n          break;\n\n        case 'C':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]);\n          cpx = p[off - 2];\n          cpy = p[off - 1];\n          break;\n\n        case 'c':\n          cmd = CMD.C;\n          path.addData(cmd, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy, p[off++] + cpx, p[off++] + cpy);\n          cpx += p[off - 2];\n          cpy += p[off - 1];\n          break;\n\n        case 'S':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 's':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.C) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cmd = CMD.C;\n          x1 = cpx + p[off++];\n          y1 = cpy + p[off++];\n          cpx += p[off++];\n          cpy += p[off++];\n          path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n          break;\n\n        case 'Q':\n          x1 = p[off++];\n          y1 = p[off++];\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'q':\n          x1 = p[off++] + cpx;\n          y1 = p[off++] + cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, x1, y1, cpx, cpy);\n          break;\n\n        case 'T':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 't':\n          ctlPtx = cpx;\n          ctlPty = cpy;\n          var len = path.len();\n          var pathData = path.data;\n\n          if (prevCmd === CMD.Q) {\n            ctlPtx += cpx - pathData[len - 4];\n            ctlPty += cpy - pathData[len - 3];\n          }\n\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.Q;\n          path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n          break;\n\n        case 'A':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx = p[off++];\n          cpy = p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n\n        case 'a':\n          rx = p[off++];\n          ry = p[off++];\n          psi = p[off++];\n          fa = p[off++];\n          fs = p[off++];\n          x1 = cpx, y1 = cpy;\n          cpx += p[off++];\n          cpy += p[off++];\n          cmd = CMD.A;\n          processArc(x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path);\n          break;\n      }\n    }\n\n    if (c === 'z' || c === 'Z') {\n      cmd = CMD.Z;\n      path.addData(cmd);\n    }\n\n    prevCmd = cmd;\n  }\n\n  path.toStatic();\n  return path;\n} // TODO Optimize double memory cost problem\n\n\nfunction createPathOptions(str, opts) {\n  var pathProxy = createPathProxyFromString(str);\n  opts = opts || {};\n\n  opts.buildPath = function (path) {\n    if (path.setData) {\n      path.setData(pathProxy.data); // Svg and vml renderer don't have context\n\n      var ctx = path.getContext();\n\n      if (ctx) {\n        path.rebuildPath(ctx);\n      }\n    } else {\n      var ctx = path;\n      pathProxy.rebuildPath(ctx);\n    }\n  };\n\n  opts.applyTransform = function (m) {\n    transformPath(pathProxy, m);\n    this.dirty(true);\n  };\n\n  return opts;\n}\n/**\n * Create a Path object from path string data\n * http://www.w3.org/TR/SVG/paths.html#PathData\n * @param  {Object} opts Other options\n */\n\n\nfunction createFromString(str, opts) {\n  return new Path(createPathOptions(str, opts));\n}\n/**\n * Create a Path class from path string data\n * @param  {string} str\n * @param  {Object} opts Other options\n */\n\n\nfunction extendFromString(str, opts) {\n  return Path.extend(createPathOptions(str, opts));\n}\n/**\n * Merge multiple paths\n */\n// TODO Apply transform\n// TODO stroke dash\n// TODO Optimize double memory cost problem\n\n\nfunction mergePath(pathEls, opts) {\n  var pathList = [];\n  var len = pathEls.length;\n\n  for (var i = 0; i < len; i++) {\n    var pathEl = pathEls[i];\n\n    if (!pathEl.path) {\n      pathEl.createPathProxy();\n    }\n\n    if (pathEl.__dirtyPath) {\n      pathEl.buildPath(pathEl.path, pathEl.shape, true);\n    }\n\n    pathList.push(pathEl.path);\n  }\n\n  var pathBundle = new Path(opts); // Need path proxy.\n\n  pathBundle.createPathProxy();\n\n  pathBundle.buildPath = function (path) {\n    path.appendPath(pathList); // Svg and vml renderer don't have context\n\n    var ctx = path.getContext();\n\n    if (ctx) {\n      path.rebuildPath(ctx);\n    }\n  };\n\n  return pathBundle;\n}\n\nexports.createFromString = createFromString;\nexports.extendFromString = extendFromString;\nexports.mergePath = mergePath;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 85\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar urn = 'urn:schemas-microsoft-com:vml';\nvar win = typeof window === 'undefined' ? null : window;\nvar vmlInited = false;\nvar doc = win && win.document;\n\nfunction createNode(tagName) {\n  return doCreateNode(tagName);\n} // Avoid assign to an exported variable, for transforming to cjs.\n\n\nvar doCreateNode;\n\nif (doc && !env.canvasSupported) {\n  try {\n    !doc.namespaces.zrvml && doc.namespaces.add('zrvml', urn);\n\n    doCreateNode = function (tagName) {\n      return doc.createElement('<zrvml:' + tagName + ' class=\"zrvml\">');\n    };\n  } catch (e) {\n    doCreateNode = function (tagName) {\n      return doc.createElement('<' + tagName + ' xmlns=\"' + urn + '\" class=\"zrvml\">');\n    };\n  }\n} // From raphael\n\n\nfunction initVML() {\n  if (vmlInited || !doc) {\n    return;\n  }\n\n  vmlInited = true;\n  var styleSheets = doc.styleSheets;\n\n  if (styleSheets.length < 31) {\n    doc.createStyleSheet().addRule('.zrvml', 'behavior:url(#default#VML)');\n  } else {\n    // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\n    styleSheets[0].addRule('.zrvml', 'behavior:url(#default#VML)');\n  }\n}\n\nexports.doc = doc;\nexports.createNode = createNode;\nexports.initVML = initVML;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/core.js\n// module id = 86\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'getDevicePixelRatio', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption',\n        'getViewOfComponentModel', 'getViewOfSeriesModel'\n    ];\n\n    function ExtensionAPI(chartInstance, coordSysMgr) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n\n        // Inject getCoordinateSystems to ecModel\n        this.getCoordinateSystems = zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 97\n// module chunks = 0","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 98\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && (\n                registeredCoordSys.getDimensionsInfo\n                    ? registeredCoordSys.getDimensionsInfo()\n                    : registeredCoordSys.dimensions.slice()\n            )) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, {defaultNames: dimensions.concat(['value'])});\n        }\n\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['x', 'y', 'z']});\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        singleAxis: function (data, seriesModel, ecModel) {\n\n            var singleAxisModel = ecModel.queryComponents({\n                mainType: 'singleAxis',\n                index: seriesModel.get('singleAxisIndex'),\n                id: seriesModel.get('singleAxisId')\n            })[0];\n\n            if (__DEV__) {\n                if (!singleAxisModel) {\n                    throw new Error('singleAxis should be specified.');\n                }\n            }\n\n            var singleAxisType = singleAxisModel.get('type');\n            var isCategory = singleAxisType === 'category';\n\n            var dimensions = [{\n                name: 'single',\n                type: getDimTypeByAxis(singleAxisType),\n                stackable: isStackable(singleAxisType)\n            }];\n\n            completeDimensions(dimensions, data);\n\n            var categoryAxesModels = {};\n            if (isCategory) {\n                categoryAxesModels.single = singleAxisModel;\n            }\n\n            return {\n                dimensions: dimensions,\n                categoryIndex: isCategory ? 0 : -1,\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, {defaultNames: ['radius', 'angle', 'value']});\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, {defaultNames: ['lng', 'lat', 'value']})\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 99\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 100\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this.getRawData();\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this.getData();\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            // If still show when all data zero.\n            stillShowZeroSum: true,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            // Animation type canbe expansion, scale\n            animationType: 'expansion',\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 101\n// module chunks = 0","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n\n            var animationType = seriesModel.getShallow('animationType');\n            if (animationType === 'scale') {\n                sector.shape.r = layout.r0;\n                graphic.initProps(sector, {\n                    shape: {\n                        r: layout.r\n                    }\n                }, seriesModel, idx);\n            }\n            // Expansion\n            else {\n                sector.shape.endAngle = layout.startAngle;\n                graphic.updateProps(sector, {\n                    shape: {\n                        endAngle: layout.endAngle\n                    }\n                }, seriesModel, idx);\n            }\n\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.isAnimationEnabled()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n            var animationType = seriesModel.get('animationType');\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    // Default expansion animation\n                    if (isFirstRender && animationType !== 'scale') {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (\n                hasAnimation && isFirstRender && data.count() > 0\n                // Default expansion animation\n                && animationType !== 'scale'\n            ) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 102\n// module chunks = 0","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 103\n// module chunks = 0","// TODO minAngle\n\n\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n            var stillShowZeroSum = seriesModel.get('stillShowZeroSum');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                if (isNaN(value)) {\n                    data.setItemLayout(idx, {\n                        angle: NaN,\n                        startAngle: NaN,\n                        endAngle: NaN,\n                        clockwise: clockwise,\n                        cx: cx,\n                        cy: cy,\n                        r0: r0,\n                        r: roseType\n                            ? NaN\n                            : r\n                    });\n                    return;\n                }\n\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = (sum === 0 && stillShowZeroSum)\n                        ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 104\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var matrix = require('zrender/lib/core/matrix');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n\n            if (!axisModel.get('axisTick.show') || axis.scale.isBlank()) {\n                return;\n            }\n\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var axis = axisModel.axis;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show || axis.scale.isBlank()) {\n                return;\n            }\n\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = (\n                retrieve(opt.labelRotate, labelModel.get('rotate')) || 0\n            ) * PI / 180;\n\n            var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelStr = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.textVerticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function'\n                            ? textColor(\n                                // (1) In category axis with data zoom, tick is not the original\n                                // index of axis.data. So tick should not be exposed to user\n                                // in category axis.\n                                // (2) Compatible with previous version, which always returns labelStr.\n                                // But in interval scale labelStr is like '223,445', which maked\n                                // user repalce ','. So we modify it to return original val but remain\n                                // it as 'string' to avoid error in replacing.\n                                axis.type === 'category' ? labelStr : axis.type === 'value' ? tickVal + '' : tickVal,\n                                index\n                            )\n                            : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelStr;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            fixMinMaxLabelShow(axisModel, textEls);\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt.rotation,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.textVerticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @public\n     * @static\n     * @param {Object} opt\n     * @param {number} axisRotation in radian\n     * @param {number} textRotation in radian\n     * @param {number} direction\n     * @return {Object} {\n     *  rotation, // according to axis\n     *  textAlign,\n     *  textVerticalAlign\n     * }\n     */\n    var innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - axisRotation);\n        var textAlign;\n        var textVerticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    };\n\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var textVerticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            textVerticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            textVerticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            textVerticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            textVerticalAlign: textVerticalAlign\n        };\n    }\n\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    function fixMinMaxLabelShow(axisModel, textEls) {\n        // If min or max are user set, we need to check\n        // If the tick on min(max) are overlap on their neighbour tick\n        // If they are overlapped, we need to hide the min(max) tick label\n        var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n        var showMaxLabel = axisModel.get('axisLabel.showMaxLabel');\n        var firstLabel = textEls[0];\n        var nextLabel = textEls[1];\n        var lastLabel = textEls[textEls.length - 1];\n        var prevLabel = textEls[textEls.length - 2];\n\n        if (showMinLabel === false) {\n            firstLabel.ignore = true;\n        }\n        else if (axisModel.getMin() != null && isTwoLabelOverlapped(firstLabel, nextLabel)) {\n            showMinLabel ? (nextLabel.ignore = true) : (firstLabel.ignore = true);\n        }\n\n        if (showMaxLabel === false) {\n            lastLabel.ignore = true;\n        }\n        else if (axisModel.getMax() != null && isTwoLabelOverlapped(prevLabel, lastLabel)) {\n            showMaxLabel ? (prevLabel.ignore = true) : (lastLabel.ignore = true);\n        }\n    }\n\n    function isTwoLabelOverlapped(current, next, labelLayout) {\n        // current and next has the same rotation.\n        var firstRect = current && current.getBoundingRect().clone();\n        var nextRect = next && next.getBoundingRect().clone();\n\n        if (!firstRect || !nextRect) {\n            return;\n        }\n\n        // When checking intersect of two rotated labels, we use mRotationBack\n        // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n        var mRotationBack = matrix.identity([]);\n        matrix.rotate(mRotationBack, mRotationBack, -current.rotation);\n\n        firstRect.applyTransform(matrix.mul([], mRotationBack, current.getLocalTransform()));\n        nextRect.applyTransform(matrix.mul([], mRotationBack, next.getLocalTransform()));\n\n        return firstRect.intersect(nextRect);\n    }\n\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 105\n// module chunks = 0","\n\n    var axisPointerModelHelper = require('../axisPointer/modelHelper');\n\n    /**\n     * Base class of AxisView.\n     */\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        /**\n         * @private\n         */\n        _axisPointer: null,\n\n        /**\n         * @protected\n         * @type {string}\n         */\n        axisPointerClass: null,\n\n        /**\n         * @override\n         */\n        render: function (axisModel, ecModel, api, payload) {\n            // FIXME\n            // This process should proformed after coordinate systems updated\n            // (axis scale updated), and should be performed each time update.\n            // So put it here temporarily, although it is not appropriate to\n            // put a model-writing procedure in `view`.\n            this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n\n            AxisView.superApply(this, 'render', arguments);\n\n            updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n        },\n\n        /**\n         * Action handler.\n         * @public\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {module:echarts/ExtensionAPI} api\n         * @param {Object} payload\n         */\n        updateAxisPointer: function (axisModel, ecModel, api, payload, force) {\n            updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            var axisPointer = this._axisPointer;\n            axisPointer && axisPointer.remove(api);\n            AxisView.superApply(this, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            disposeAxisPointer(this, api);\n            AxisView.superApply(this, 'dispose', arguments);\n        }\n\n    });\n\n    function updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n        var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n        if (!Clazz) {\n            return;\n        }\n        var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n        axisPointerModel\n            ? (axisView._axisPointer || (axisView._axisPointer = new Clazz()))\n                .render(axisModel, axisPointerModel, api, forceRender)\n            : disposeAxisPointer(axisView, api);\n    }\n\n    function disposeAxisPointer(axisView, ecModel, api) {\n        var axisPointer = axisView._axisPointer;\n        axisPointer && axisPointer.dispose(ecModel, api);\n        axisView._axisPointer = null;\n    }\n\n    var axisPointerClazz = [];\n\n    AxisView.registerAxisPointerClass = function (type, clazz) {\n        if (__DEV__) {\n            if (axisPointerClazz[type]) {\n                throw new Error('axisPointer ' + type + ' exists');\n            }\n        }\n        axisPointerClazz[type] = clazz;\n    };\n\n    AxisView.getAxisPointerClass = function (type) {\n        return type && axisPointerClazz[type];\n    };\n\n    module.exports = AxisView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 106\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var helper = {};\n\n    /**\n     * @param {Object} opt {labelInside}\n     * @return {Object} {\n     *  position, rotation, labelDirection, labelOffset,\n     *  tickDirection, labelRotate, labelInterval, z2\n     * }\n     */\n    helper.layout = function (gridModel, axisModel, opt) {\n        opt = opt || {};\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        layout.labelOffset = axis.onZero ? posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero : 0;\n\n        if (axisModel.get('axisTick.inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotate = axisModel.get('axisLabel.rotate');\n        layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    };\n\n    module.exports = helper;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/cartesianAxisHelper.js\n// module id = 107\n// module chunks = 0","\n\n    var echarts = require('../echarts');\n    var axisPointerModelHelper = require('./axisPointer/modelHelper');\n    var axisTrigger = require('./axisPointer/axisTrigger');\n    var zrUtil = require('zrender/lib/core/util');\n\n    require('./axisPointer/AxisPointerModel');\n    require('./axisPointer/AxisPointerView');\n\n    // CartesianAxisPointer is not supposed to be required here. But consider\n    // echarts.simple.js and online build tooltip, which only require gridSimple,\n    // CartesianAxisPointer should be able to required somewhere.\n    require('./axisPointer/CartesianAxisPointer');\n\n    echarts.registerPreprocessor(function (option) {\n        // Always has a global axisPointerModel for default setting.\n        if (option) {\n            (!option.axisPointer || option.axisPointer.length === 0)\n                && (option.axisPointer = {});\n\n            var link = option.axisPointer.link;\n            // Normalize to array to avoid object mergin. But if link\n            // is not set, remain null/undefined, otherwise it will\n            // override existent link setting.\n            if (link && !zrUtil.isArray(link)) {\n                option.axisPointer.link = [link];\n            }\n        }\n    });\n\n    // This process should proformed after coordinate systems created\n    // and series data processed. So put it on statistic processing stage.\n    echarts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n        // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n        // allAxesInfo should be updated when setOption performed.\n        ecModel.getComponent('axisPointer').coordSysAxesInfo\n            = axisPointerModelHelper.collect(ecModel, api);\n    });\n\n    // Broadcast to all views.\n    echarts.registerAction({\n        type: 'updateAxisPointer',\n        event: 'updateAxisPointer',\n        update: ':updateAxisPointer'\n    }, function (payload, ecModel, api) {\n        var outputFinder = axisTrigger(\n            ecModel.getComponent('axisPointer').coordSysAxesInfo,\n            payload.currTrigger,\n            [payload.x, payload.y],\n            payload,\n            payload.dispatchAction || zrUtil.bind(api.dispatchAction, api),\n            ecModel,\n            api,\n            payload.tooltipOption,\n            payload.highDownKey\n        );\n\n        return outputFinder;\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer.js\n// module id = 108\n// module chunks = 0","\n\n    var echarts = require('../../echarts');\n\n    var AxisPointerModel = echarts.extendComponentModel({\n\n        type: 'axisPointer',\n\n        coordSysAxesInfo: null,\n\n        defaultOption: {\n            // 'auto' means that show when triggered by tooltip or handle.\n            show: 'auto',\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: null, // set default in AxisPonterView.js\n\n            zlevel: 0,\n            z: 50,\n\n            type: 'line',\n            // axispointer triggered by tootip determine snap automatically,\n            // see `modelHelper`.\n            snap: false,\n            triggerTooltip: true,\n\n            value: null,\n            status: null, // Init value depends on whether handle is used.\n\n            // [group0, group1, ...]\n            // Each group can be: {\n            //      mapper: function () {},\n            //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n            //      xAxisId: ...,\n            //      yAxisName: ...,\n            //      angleAxisIndex: ...\n            // }\n            // mapper: can be ignored.\n            //      input: {axisInfo, value}\n            //      output: {axisInfo, value}\n            link: [],\n\n            // Do not set 'auto' here, otherwise global animation: false\n            // will not effect at this axispointer.\n            animation: null,\n            animationDurationUpdate: 200,\n\n            lineStyle: {\n                color: '#aaa',\n                width: 1,\n                type: 'solid'\n            },\n\n            shadowStyle: {\n                color: 'rgba(150,150,150,0.3)'\n            },\n\n            label: {\n                show: true,\n                formatter: null, // string | Function\n                precision: 'auto', // Or a number like 0, 1, 2 ...\n                margin: 3,\n                textStyle: {\n                    color: '#fff'\n                },\n                padding: [5, 7, 5, 7],\n                backgroundColor: 'auto', // default: axis line color\n                borderColor: null,\n                borderWidth: 0,\n                shadowBlur: 3,\n                shadowColor: '#aaa'\n                // Considering applicability, common style should\n                // better not have shadowOffset.\n                // shadowOffsetX: 0,\n                // shadowOffsetY: 2\n            },\n\n            handle: {\n                show: false,\n                icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7V23h6.6V24.4z M13.3,19.6H6.7v-1.4h6.6V19.6z', // jshint ignore:line\n                size: 45,\n                // handle margin is from symbol center to axis, which is stable when circular move.\n                margin: 50,\n                // color: '#1b8bbd'\n                // color: '#2f4554'\n                color: '#333',\n                shadowBlur: 3,\n                shadowColor: '#aaa',\n                shadowOffsetX: 0,\n                shadowOffsetY: 2,\n\n                // For mobile performance\n                throttle: 40\n            }\n        }\n\n    });\n\n    module.exports = AxisPointerModel;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerModel.js\n// module id = 109\n// module chunks = 0","\n\n    var globalListener = require('./globalListener');\n\n    var AxisPonterView = require('../../echarts').extendComponentView({\n\n        type: 'axisPointer',\n\n        render: function (globalAxisPointerModel, ecModel, api) {\n            var globalTooltipModel = ecModel.getComponent('tooltip');\n            var triggerOn = globalAxisPointerModel.get('triggerOn')\n                || (globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click');\n\n            // Register global listener in AxisPointerView to enable\n            // AxisPointerView to be independent to Tooltip.\n            globalListener.register(\n                'axisPointer',\n                api,\n                function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none'\n                        && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)\n                    ) {\n                        dispatchAction({\n                            type: 'updateAxisPointer',\n                            currTrigger: currTrigger,\n                            x: e && e.offsetX,\n                            y: e && e.offsetY\n                        });\n                    }\n                }\n            );\n        },\n\n        /**\n         * @override\n         */\n        remove: function (ecModel, api) {\n            globalListener.disopse(api.getZr(), 'axisPointer');\n            AxisPonterView.superApply(this._model, 'remove', arguments);\n        },\n\n        /**\n         * @override\n         */\n        dispose: function (ecModel, api) {\n            globalListener.unregister('axisPointer', api);\n            AxisPonterView.superApply(this._model, 'dispose', arguments);\n        }\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/AxisPointerView.js\n// module id = 110\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../../util/clazz');\n    var graphic = require('../../util/graphic');\n    var get = require('../../util/model').makeGetter();\n    var axisPointerModelHelper = require('./modelHelper');\n    var eventTool = require('zrender/lib/core/event');\n    var throttle = require('../../util/throttle');\n\n    var clone = zrUtil.clone;\n    var bind = zrUtil.bind;\n\n    /**\n     * Base axis pointer class in 2D.\n     * Implemenents {module:echarts/component/axis/IAxisPointer}.\n     */\n    function BaseAxisPointer () {\n    }\n\n    BaseAxisPointer.prototype = {\n\n        /**\n         * @private\n         */\n        _group: null,\n\n        /**\n         * @private\n         */\n        _lastGraphicKey: null,\n\n        /**\n         * @private\n         */\n        _handle: null,\n\n        /**\n         * @private\n         */\n        _dragging: false,\n\n        /**\n         * @private\n         */\n        _lastValue: null,\n\n        /**\n         * @private\n         */\n        _lastStatus: null,\n\n        /**\n         * @private\n         */\n        _payloadInfo: null,\n\n        /**\n         * In px, arbitrary value. Do not set too small,\n         * no animation is ok for most cases.\n         * @protected\n         */\n        animationThreshold: 15,\n\n        /**\n         * @implement\n         */\n        render: function (axisModel, axisPointerModel, api, forceRender) {\n            var value = axisPointerModel.get('value');\n            var status = axisPointerModel.get('status');\n\n            // Bind them to `this`, not in closure, otherwise they will not\n            // be replaced when user calling setOption in not merge mode.\n            this._axisModel = axisModel;\n            this._axisPointerModel = axisPointerModel;\n            this._api = api;\n\n            // Optimize: `render` will be called repeatly during mouse move.\n            // So it is power consuming if performing `render` each time,\n            // especially on mobile device.\n            if (!forceRender\n                && this._lastValue === value\n                && this._lastStatus === status\n            ) {\n                return;\n            }\n            this._lastValue = value;\n            this._lastStatus = status;\n\n            var group = this._group;\n            var handle = this._handle;\n\n            if (!status || status === 'hide') {\n                // Do not clear here, for animation better.\n                group && group.hide();\n                handle && handle.hide();\n                return;\n            }\n            group && group.show();\n            handle && handle.show();\n\n            // Otherwise status is 'show'\n            var elOption = {};\n            this.makeElOption(elOption, value, axisModel, axisPointerModel, api);\n\n            // Enable change axis pointer type.\n            var graphicKey = elOption.graphicKey;\n            if (graphicKey !== this._lastGraphicKey) {\n                this.clear(api);\n            }\n            this._lastGraphicKey = graphicKey;\n\n            var moveAnimation = this._moveAnimation =\n                this.determineAnimation(axisModel, axisPointerModel);\n\n            if (!group) {\n                group = this._group = new graphic.Group();\n                this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n                this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n                api.getZr().add(group);\n            }\n            else {\n                var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n                this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n                this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n            }\n\n            updateMandatoryProps(group, axisPointerModel, true);\n\n            this._renderHandle(value);\n        },\n\n        /**\n         * @implement\n         */\n        remove: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @implement\n         */\n        dispose: function (api) {\n            this.clear(api);\n        },\n\n        /**\n         * @protected\n         */\n        determineAnimation: function (axisModel, axisPointerModel) {\n            var animation = axisPointerModel.get('animation');\n            var axis = axisModel.axis;\n            var isCategoryAxis = axis.type === 'category';\n            var useSnap = axisPointerModel.get('snap');\n\n            // Value axis without snap always do not snap.\n            if (!useSnap && !isCategoryAxis) {\n                return false;\n            }\n\n            if (animation === 'auto' || animation == null) {\n                var animationThreshold = this.animationThreshold;\n                if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n                    return true;\n                }\n\n                // It is important to auto animation when snap used. Consider if there is\n                // a dataZoom, animation will be disabled when too many points exist, while\n                // it will be enabled for better visual effect when little points exist.\n                if (useSnap) {\n                    var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n                    var axisExtent = axis.getExtent();\n                    // Approximate band width\n                    return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n                }\n\n                return false;\n            }\n\n            return animation === true;\n        },\n\n        /**\n         * add {pointer, label, graphicKey} to elOption\n         * @protected\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            // Shoule be implemenented by sub-class.\n        },\n\n        /**\n         * @protected\n         */\n        createPointerEl: function (group, elOption, axisModel, axisPointerModel) {\n            var pointerOption = elOption.pointer;\n            if (pointerOption) {\n                var pointerEl = get(group).pointerEl = new graphic[pointerOption.type](\n                    clone(elOption.pointer)\n                );\n                group.add(pointerEl);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        createLabelEl: function (group, elOption, axisModel, axisPointerModel) {\n            if (elOption.label) {\n                var labelEl = get(group).labelEl = new graphic.Rect(\n                    clone(elOption.label)\n                );\n\n                group.add(labelEl);\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updatePointerEl: function (group, elOption, updateProps) {\n            var pointerEl = get(group).pointerEl;\n            if (pointerEl) {\n                pointerEl.setStyle(elOption.pointer.style);\n                updateProps(pointerEl, {shape: elOption.pointer.shape});\n            }\n        },\n\n        /**\n         * @protected\n         */\n        updateLabelEl: function (group, elOption, updateProps, axisPointerModel) {\n            var labelEl = get(group).labelEl;\n            if (labelEl) {\n                labelEl.setStyle(elOption.label.style);\n                updateProps(labelEl, {\n                    // Consider text length change in vertical axis, animation should\n                    // be used on shape, otherwise the effect will be weird.\n                    shape: elOption.label.shape,\n                    position: elOption.label.position\n                });\n\n                updateLabelShowHide(labelEl, axisPointerModel);\n            }\n        },\n\n        /**\n         * @private\n         */\n        _renderHandle: function (value) {\n            if (this._dragging || !this.updateHandleTransform) {\n                return;\n            }\n\n            var axisPointerModel = this._axisPointerModel;\n            var zr = this._api.getZr();\n            var handle = this._handle;\n            var handleModel = axisPointerModel.getModel('handle');\n\n            var status = axisPointerModel.get('status');\n            if (!handleModel.get('show') || !status || status === 'hide') {\n                handle && zr.remove(handle);\n                this._handle = null;\n                return;\n            }\n\n            var isInit;\n            if (!this._handle) {\n                isInit = true;\n                handle = this._handle = createIcon(handleModel, {\n                    onmousemove: function (e) {\n                        // Fot mobile devicem, prevent screen slider on the button.\n                        eventTool.stop(e.event);\n                    },\n                    onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n                    drift: bind(this._onHandleDragMove, this),\n                    ondragend: bind(this._onHandleDragEnd, this)\n                });\n                zr.add(handle);\n            }\n\n            updateMandatoryProps(handle, axisPointerModel, false);\n\n            // update style\n            var includeStyles = [\n                'color', 'borderColor', 'borderWidth', 'opacity',\n                'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'\n            ];\n            handle.setStyle(handleModel.getItemStyle(null, includeStyles));\n\n            // update position\n            var handleSize = handleModel.get('size');\n            if (!zrUtil.isArray(handleSize)) {\n                handleSize = [handleSize, handleSize];\n            }\n            handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n\n            throttle.createOrUpdate(\n                this,\n                '_doDispatchAxisPointer',\n                handleModel.get('throttle') || 0,\n                'fixRate'\n            );\n\n            this._moveHandleToValue(value, isInit);\n        },\n\n        /**\n         * @private\n         */\n        _moveHandleToValue: function (value, isInit) {\n            updateProps(\n                this._axisPointerModel,\n                !isInit && this._moveAnimation,\n                this._handle,\n                getHandleTransProps(this.getHandleTransform(\n                    value, this._axisModel, this._axisPointerModel\n                ))\n            );\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragMove: function (dx, dy) {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            this._dragging = true;\n\n            // Persistent for throttle.\n            var trans = this.updateHandleTransform(\n                getHandleTransProps(handle),\n                [dx, dy],\n                this._axisModel,\n                this._axisPointerModel\n            );\n            this._payloadInfo = trans;\n\n            handle.stopAnimation();\n            handle.attr(getHandleTransProps(trans));\n            get(handle).lastProp = null;\n\n            this._doDispatchAxisPointer();\n        },\n\n        /**\n         * Throttled method.\n         * @private\n         */\n        _doDispatchAxisPointer: function () {\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var payloadInfo = this._payloadInfo;\n            var payload = {\n                type: 'updateAxisPointer',\n                x: payloadInfo.cursorPoint[0],\n                y: payloadInfo.cursorPoint[1],\n                tooltipOption: payloadInfo.tooltipOption,\n                highDownKey: 'axisPointerHandle'\n            };\n            var axis = this._axisModel.axis;\n            payload[axis.dim + 'AxisId'] = this._axisModel.id;\n            this._api.dispatchAction(payload);\n        },\n\n        /**\n         * @private\n         */\n        _onHandleDragEnd: function (moveAnimation) {\n            this._dragging = false;\n            var handle = this._handle;\n            if (!handle) {\n                return;\n            }\n\n            var value = this._axisPointerModel.get('value');\n            // Consider snap or categroy axis, handle may be not consistent with\n            // axisPointer. So move handle to align the exact value position when\n            // drag ended.\n            this._moveHandleToValue(value);\n\n            // For the effect: tooltip will be shown when finger holding on handle\n            // button, and will be hidden after finger left handle button.\n            this._api.dispatchAction({\n                type: 'hideTip'\n            });\n        },\n\n        /**\n         * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {number} value\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0}\n         */\n        getHandleTransform: null,\n\n        /**\n         * * Should be implemenented by sub-class if support `handle`.\n         * @protected\n         * @param {Object} transform {position, rotation}\n         * @param {Array.<number>} delta [dx, dy]\n         * @param {module:echarts/model/Model} axisModel\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n         */\n        updateHandleTransform: null,\n\n        /**\n         * @private\n         */\n        clear: function (api) {\n            this._lastValue = null;\n            this._lastStatus = null;\n\n            var zr = api.getZr();\n            var group = this._group;\n            var handle = this._handle;\n            if (zr && group) {\n                this._lastGraphicKey = null;\n                group && zr.remove(group);\n                handle && zr.remove(handle);\n                this._group = null;\n                this._handle = null;\n                this._payloadInfo = null;\n            }\n        },\n\n        /**\n         * @protected\n         */\n        doClear: function () {\n            // Implemented by sub-class if necessary.\n        },\n\n        /**\n         * @protected\n         * @param {Array.<number>} xy\n         * @param {Array.<number>} wh\n         * @param {number} [xDimIndex=0] or 1\n         */\n        buildLabel: function (xy, wh, xDimIndex) {\n            xDimIndex = xDimIndex || 0;\n            return {\n                x: xy[xDimIndex],\n                y: xy[1 - xDimIndex],\n                width: wh[xDimIndex],\n                height: wh[1 - xDimIndex]\n            };\n        }\n    };\n\n    BaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\n\n    function updateProps(animationModel, moveAnimation, el, props) {\n        // Animation optimize.\n        if (!propsEqual(get(el).lastProp, props)) {\n            get(el).lastProp = props;\n            moveAnimation\n                ? graphic.updateProps(el, props, animationModel)\n                : (el.stopAnimation(), el.attr(props));\n        }\n    }\n\n    function propsEqual(lastProps, newProps) {\n        if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n            var equals = true;\n            zrUtil.each(newProps, function (item, key) {\n                equals &= propsEqual(lastProps[key], item);\n            });\n            return !!equals;\n        }\n        else {\n            return lastProps === newProps;\n        }\n    }\n\n    function updateLabelShowHide(labelEl, axisPointerModel) {\n        labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n    }\n\n    function getHandleTransProps(trans) {\n        return {\n            position: trans.position.slice(),\n            rotation: trans.rotation || 0\n        };\n    }\n\n    function createIcon(handleModel, handlers) {\n        var iconStr = handleModel.get('icon');\n        var style = {\n            x: -1, y: -1, width: 2, height: 2\n        };\n        var opt = zrUtil.extend({\n            style: {\n                strokeNoScale: true\n            },\n            rectHover: true,\n            cursor: 'move',\n            draggable: true\n        }, handlers);\n\n        return iconStr.indexOf('image://') === 0\n            ? (\n                style.image = iconStr.slice(8),\n                opt.style = style,\n                new graphic.Image(opt)\n            )\n            : graphic.makePath(\n                iconStr.replace('path://', ''),\n                opt,\n                style,\n                'center'\n            );\n    }\n\n    function updateMandatoryProps(group, axisPointerModel, silent) {\n        var z = axisPointerModel.get('z');\n        var zlevel = axisPointerModel.get('zlevel');\n\n        group && group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n                el.silent = silent;\n            }\n        });\n    }\n\n    clazzUtil.enableClassExtend(BaseAxisPointer);\n\n    module.exports = BaseAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/BaseAxisPointer.js\n// module id = 111\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../../util/graphic');\n    var BaseAxisPointer = require('./BaseAxisPointer');\n    var viewHelper = require('./viewHelper');\n    var cartesianAxisHelper = require('../axis/cartesianAxisHelper');\n    var AxisView = require('../axis/AxisView');\n\n    var CartesianAxisPointer = BaseAxisPointer.extend({\n\n        /**\n         * @override\n         */\n        makeElOption: function (elOption, value, axisModel, axisPointerModel, api) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisPointerType = axisPointerModel.get('type');\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n            if (axisPointerType && axisPointerType !== 'none') {\n                var elStyle = viewHelper.buildElStyle(axisPointerModel);\n                var pointerOption = pointerShapeBuilder[axisPointerType](\n                    axis, pixelValue, otherExtent, elStyle\n                );\n                pointerOption.style = elStyle;\n                elOption.graphicKey = pointerOption.type;\n                elOption.pointer = pointerOption;\n            }\n\n            var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n            viewHelper.buildCartesianSingleLabelElOption(\n                value, elOption, layoutInfo, axisModel, axisPointerModel, api\n            );\n        },\n\n        /**\n         * @override\n         */\n        getHandleTransform: function (value, axisModel, axisPointerModel) {\n            var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n                labelInside: false\n            });\n            layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n            return {\n                position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n                rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n            };\n        },\n\n        /**\n         * @override\n         */\n        updateHandleTransform: function (transform, delta, axisModel, axisPointerModel) {\n            var axis = axisModel.axis;\n            var grid = axis.grid;\n            var axisExtent = axis.getGlobalExtent(true);\n            var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n            var dimIndex = axis.dim === 'x' ? 0 : 1;\n\n            var currPosition = transform.position;\n            currPosition[dimIndex] += delta[dimIndex];\n            currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n            currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n\n            var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n            var cursorPoint = [cursorOtherValue, cursorOtherValue];\n            cursorPoint[dimIndex] = currPosition[dimIndex];\n\n            // Make tooltip do not overlap axisPointer and in the middle of the grid.\n            var tooltipOptions = [{verticalAlign: 'middle'}, {align: 'center'}];\n\n            return {\n                position: currPosition,\n                rotation: transform.rotation,\n                cursorPoint: cursorPoint,\n                tooltipOption: tooltipOptions[dimIndex]\n            };\n        }\n\n    });\n\n    function getCartesian(grid, axis) {\n        var opt = {};\n        opt[axis.dim + 'AxisIndex'] = axis.index;\n        return grid.getCartesian(opt);\n    }\n\n    var pointerShapeBuilder = {\n\n        line: function (axis, pixelValue, otherExtent, elStyle) {\n            var targetShape = viewHelper.makeLineShape(\n                [pixelValue, otherExtent[0]],\n                [pixelValue, otherExtent[1]],\n                getAxisDimIndex(axis)\n            );\n            graphic.subPixelOptimizeLine({\n                shape: targetShape,\n                style: elStyle\n            });\n            return {\n                type: 'Line',\n                shape: targetShape\n            };\n        },\n\n        shadow: function (axis, pixelValue, otherExtent, elStyle) {\n            var bandWidth = axis.getBandWidth();\n            var span = otherExtent[1] - otherExtent[0];\n            return {\n                type: 'Rect',\n                shape: viewHelper.makeRectShape(\n                    [pixelValue - bandWidth / 2, otherExtent[0]],\n                    [bandWidth, span],\n                    getAxisDimIndex(axis)\n                )\n            };\n        }\n    };\n\n    function getAxisDimIndex(axis) {\n        return axis.dim === 'x' ? 0 : 1;\n    }\n\n    AxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\n\n    module.exports = CartesianAxisPointer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/CartesianAxisPointer.js\n// module id = 112\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var modelHelper = require('./modelHelper');\n    var findPointFromSeries = require('./findPointFromSeries');\n\n    var each = zrUtil.each;\n    var curry = zrUtil.curry;\n    var get = modelUtil.makeGetter();\n\n    /**\n     * Basic logic: check all axis, if they do not demand show/highlight,\n     * then hide/downplay them.\n     *\n     * @param {Object} coordSysAxesInfo\n     * @param {string} [currTrigger] 'click' | 'mousemove' | 'leave'\n     * @param {Array.<number>} [point] x and y, which are mandatory, specify a point to\n     *              tigger axisPointer and tooltip.\n     * @param {Object} [finder] {xAxisId: ...[], yAxisName: ...[], angleAxisIndex: ...[]}\n     *              These properties, which are optional, restrict target axes.\n     * @param {Function} dispatchAction\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [tooltipOption]\n     * @param {string} [highDownKey]\n     * @return {Object} content of event obj for echarts.connect.\n     */\n    function axisTrigger(\n        coordSysAxesInfo, currTrigger, point, finder, dispatchAction,\n        ecModel, api, tooltipOption, highDownKey\n    ) {\n        finder = finder || {};\n        if (!point || point[0] == null || point[1] == null) {\n            point = findPointFromSeries({\n                seriesIndex: finder.seriesIndex,\n                // Do not use dataIndexInside from other ec instance.\n                // FIXME: auto detect it?\n                dataIndex: finder.dataIndex\n            }, ecModel).point;\n        }\n\n        var axesInfo = coordSysAxesInfo.axesInfo;\n        var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n        var outputFinder = {};\n\n        var showValueMap = {};\n        var dataByCoordSys = {list: [], map: {}};\n        var highlightBatch = [];\n        var updaters = {\n            showPointer: curry(showPointer, showValueMap),\n            showTooltip: curry(showTooltip, dataByCoordSys),\n            highlight: curry(highlight, highlightBatch)\n        };\n\n        // Process for triggered axes.\n        each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n            var coordSysContainsPoint = coordSys.containPoint(point);\n\n            each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n                var axis = axisInfo.axis;\n                if (!shouldHide && coordSysContainsPoint && !notTargetAxis(finder, axis)) {\n                    processOnAxis(axisInfo, axis.pointToData(point), updaters, false, outputFinder);\n                }\n            });\n        });\n\n        // Process for linked axes.\n        each(axesInfo, function (tarAxisInfo, tarKey) {\n            var linkGroup = tarAxisInfo.linkGroup;\n\n            // If axis has been triggered in the previous stage, it should not be triggered by link.\n            linkGroup && !showValueMap[tarKey] && each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n                var srcValItem = showValueMap[srcKey];\n                // If srcValItem exist, source axis is triggered, so link to target axis.\n                if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n                    var val = srcValItem.value;\n                    linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(\n                        val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo)\n                    )));\n                    processOnAxis(tarAxisInfo, val, updaters, true, outputFinder);\n                }\n            });\n        });\n\n        updateModelActually(showValueMap, axesInfo);\n        dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction);\n        dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey);\n\n        return outputFinder;\n    }\n\n    function processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n        var axis = axisInfo.axis;\n\n        if (axis.scale.isBlank() || !axis.containData(newValue)) {\n            return;\n        }\n\n        if (!axisInfo.involveSeries) {\n            updaters.showPointer(axisInfo, newValue);\n            return;\n        }\n\n        // Heavy calculation. So put it after axis.containData checking.\n        var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n        var payloadBatch = payloadInfo.payloadBatch;\n        var snapToValue = payloadInfo.snapToValue;\n\n        // Fill content of event obj for echarts.connect.\n        // By defualt use the first involved series data as a sample to connect.\n        if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n            zrUtil.extend(outputFinder, payloadBatch[0]);\n        }\n\n        // If no linkSource input, this process is for collecting link\n        // target, where snap should not be accepted.\n        if (!dontSnap && axisInfo.snap) {\n            if (axis.containData(snapToValue) && snapToValue != null) {\n                newValue = snapToValue;\n            }\n        }\n\n        updaters.highlight('highlight', payloadBatch);\n        updaters.showPointer(axisInfo, newValue, payloadBatch);\n        // Tooltip should always be snapToValue, otherwise there will be\n        // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n        updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n    }\n\n    function buildPayloadsBySeries(value, axisInfo) {\n        var axis = axisInfo.axis;\n        var dim = axis.dim;\n        var snapToValue = value;\n        var payloadBatch = [];\n        var minDist = Number.MAX_VALUE;\n        var minDiff = -1;\n\n        each(axisInfo.seriesModels, function (series, idx) {\n            var dataDim = series.coordDimToDataDim(dim);\n            var seriesNestestValue;\n            var dataIndices;\n\n            if (series.getAxisTooltipData) {\n                var result = series.getAxisTooltipData(dataDim, value, axis);\n                dataIndices = result.dataIndices;\n                seriesNestestValue = result.nestestValue;\n            }\n            else {\n                dataIndices = series.getData().indexOfNearest(\n                    dataDim[0],\n                    value,\n                    // Add a threshold to avoid find the wrong dataIndex\n                    // when data length is not same.\n                    false, axis.type === 'category' ? 0.5 : null\n                );\n                if (!dataIndices.length) {\n                    return;\n                }\n                seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n            }\n\n            if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n                return;\n            }\n\n            var diff = value - seriesNestestValue;\n            var dist = Math.abs(diff);\n            // Consider category case\n            if (dist <= minDist) {\n                if (dist < minDist || (diff >= 0 && minDiff < 0)) {\n                    minDist = dist;\n                    minDiff = diff;\n                    snapToValue = seriesNestestValue;\n                    payloadBatch.length = 0;\n                }\n                each(dataIndices, function (dataIndex) {\n                    payloadBatch.push({\n                        seriesIndex: series.seriesIndex,\n                        dataIndexInside: dataIndex,\n                        dataIndex: series.getData().getRawIndex(dataIndex)\n                    });\n                });\n            }\n        });\n\n        return {\n            payloadBatch: payloadBatch,\n            snapToValue: snapToValue\n        };\n    }\n\n    function showPointer(showValueMap, axisInfo, value, payloadBatch) {\n        showValueMap[axisInfo.key] = {value: value, payloadBatch: payloadBatch};\n    }\n\n    function showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n        var payloadBatch = payloadInfo.payloadBatch;\n        var axis = axisInfo.axis;\n        var axisModel = axis.model;\n        var axisPointerModel = axisInfo.axisPointerModel;\n\n        // If no data, do not create anything in dataByCoordSys,\n        // whose length will be used to judge whether dispatch action.\n        if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n            return;\n        }\n\n        var coordSysModel = axisInfo.coordSys.model;\n        var coordSysKey = modelHelper.makeKey(coordSysModel);\n        var coordSysItem = dataByCoordSys.map[coordSysKey];\n        if (!coordSysItem) {\n            coordSysItem = dataByCoordSys.map[coordSysKey] = {\n                coordSysId: coordSysModel.id,\n                coordSysIndex: coordSysModel.componentIndex,\n                coordSysType: coordSysModel.type,\n                coordSysMainType: coordSysModel.mainType,\n                dataByAxis: []\n            };\n            dataByCoordSys.list.push(coordSysItem);\n        }\n\n        coordSysItem.dataByAxis.push({\n            axisDim: axis.dim,\n            axisIndex: axisModel.componentIndex,\n            axisType: axisModel.type,\n            axisId: axisModel.id,\n            value: value,\n            // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n            // depends that all models have been updated. So it should not be performed\n            // here. Considering axisPointerModel used here is volatile, which is hard\n            // to be retrieve in TooltipView, we prepare parameters here.\n            valueLabelOpt: {\n                precision: axisPointerModel.get('label.precision'),\n                formatter: axisPointerModel.get('label.formatter')\n            },\n            seriesDataIndices: payloadBatch.slice()\n        });\n    }\n\n    function highlight(highlightBatch, actionType, batch) {\n        highlightBatch.push.apply(highlightBatch, batch);\n    }\n\n    function updateModelActually(showValueMap, axesInfo) {\n        // Basic logic: If no 'show' required, 'hide' this axisPointer.\n        each(axesInfo, function (axisInfo, key) {\n            var option = axisInfo.axisPointerModel.option;\n            var valItem = showValueMap[key];\n\n            if (valItem) {\n                !axisInfo.useHandle && (option.status = 'show');\n                option.value = valItem.value;\n                // For label formatter param.\n                option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n            }\n            // When always show (e.g., handle used), remain\n            // original value and status.\n            else {\n                // If hide, value still need to be set, consider\n                // click legend to toggle axis blank.\n                !axisInfo.useHandle && (option.status = 'hide');\n            }\n        });\n    }\n\n    function dispatchTooltipActually(dataByCoordSys, point, tooltipOption, dispatchAction) {\n        // Basic logic: If no showTip required, hideTip will be dispatched.\n        if (illegalPoint(point) || !dataByCoordSys.list.length) {\n            dispatchAction({type: 'hideTip'});\n            return;\n        }\n\n        // In most case only one axis (or event one series is used). It is\n        // convinient to fetch payload.seriesIndex and payload.dataIndex\n        // dirtectly. So put the first seriesIndex and dataIndex of the first\n        // axis on the payload.\n        var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n\n        dispatchAction({\n            type: 'showTip',\n            escapeConnect: true,\n            x: point[0],\n            y: point[1],\n            tooltipOption: tooltipOption,\n            dataIndexInside: sampleItem.dataIndexInside,\n            dataIndex: sampleItem.dataIndex,\n            seriesIndex: sampleItem.seriesIndex,\n            dataByCoordSys: dataByCoordSys.list\n        });\n    }\n\n    function dispatchHighDownActually(highlightBatch, dispatchAction, api, highDownKey) {\n        // Basic logic: If nothing highlighted, should downplay all highlighted items.\n        // This case will occur when mouse leave coordSys.\n\n        // FIXME\n        // (1) highlight status shoule be managemented in series.getData()?\n        // (2) If axisPointer A triggerOn 'handle' and axisPointer B triggerOn\n        // 'mousemove', items highlighted by A will be downplayed by B.\n        // It will not be fixed until someone requires this scenario.\n\n        // Consider items area hightlighted by 'handle', and globalListener may\n        // downplay all items (including just highlighted ones) when mousemove.\n        // So we use a highDownKey to separate them as a temporary solution.\n        var zr = api.getZr();\n        highDownKey = 'lastHighlights' + (highDownKey || '');\n        var lastHighlights = get(zr)[highDownKey] || {};\n        var newHighlights = get(zr)[highDownKey] = {};\n\n        // Build hash map and remove duplicate incidentally.\n        zrUtil.each(highlightBatch, function (batchItem) {\n            var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n            newHighlights[key] = batchItem;\n        });\n\n        // Diff.\n        var toHighlight = [];\n        var toDownplay = [];\n        zrUtil.each(lastHighlights, function (batchItem, key) {\n            !newHighlights[key] && toDownplay.push(batchItem);\n        });\n        zrUtil.each(newHighlights, function (batchItem, key) {\n            !lastHighlights[key] && toHighlight.push(batchItem);\n        });\n\n        toDownplay.length && api.dispatchAction({\n            type: 'downplay', escapeConnect: true, batch: toDownplay\n        });\n        toHighlight.length && api.dispatchAction({\n            type: 'highlight', escapeConnect: true, batch: toHighlight\n        });\n    }\n\n    function notTargetAxis(finder, axis) {\n        var isTarget = 1;\n        // If none of xxxAxisId and xxxAxisName and xxxAxisIndex exists in finder,\n        // no axis is not target axis.\n        each(finder, function (value, propName) {\n            isTarget &= !(/^.+(AxisId|AxisName|AxisIndex)$/.test(propName));\n        });\n        !isTarget && each(\n            [['AxisId', 'id'], ['AxisIndex', 'componentIndex'], ['AxisName', 'name']],\n            function (prop) {\n                var vals = modelUtil.normalizeToArray(finder[axis.dim + prop[0]]);\n                isTarget |= zrUtil.indexOf(vals, axis.model[prop[1]]) >= 0;\n            }\n        );\n        return !isTarget;\n    }\n\n    function makeMapperParam(axisInfo) {\n        var axisModel = axisInfo.axis.model;\n        var item = {};\n        var dim = item.axisDim = axisInfo.axis.dim;\n        item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n        item.axisName = item[dim + 'AxisName'] = axisModel.name;\n        item.axisId = item[dim + 'AxisId'] = axisModel.id;\n        return item;\n    }\n\n    function illegalPoint(point) {\n        return point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n    }\n\n    module.exports = axisTrigger;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axisPointer/axisTrigger.js\n// module id = 113\n// module chunks = 0","/**\n * @file Axis operator\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../../util/number');\n    var helper = require('./helper');\n    var each = zrUtil.each;\n    var asc = numberUtil.asc;\n\n    /**\n     * Operate single axis.\n     * One axis can only operated by one axis operator.\n     * Different dataZoomModels may be defined to operate the same axis.\n     * (i.e. 'inside' data zoom and 'slider' data zoom components)\n     * So dataZoomModels share one axisProxy in that case.\n     *\n     * @class\n     */\n    var AxisProxy = function (dimName, axisIndex, dataZoomModel, ecModel) {\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._dimName = dimName;\n\n        /**\n         * @private\n         */\n        this._axisIndex = axisIndex;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._valueWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._percentWindow;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._dataExtent;\n\n        /**\n         * @readOnly\n         * @type {module: echarts/model/Global}\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @private\n         * @type {module: echarts/component/dataZoom/DataZoomModel}\n         */\n        this._dataZoomModel = dataZoomModel;\n    };\n\n    AxisProxy.prototype = {\n\n        constructor: AxisProxy,\n\n        /**\n         * Whether the axisProxy is hosted by dataZoomModel.\n         *\n         * @public\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         * @return {boolean}\n         */\n        hostedBy: function (dataZoomModel) {\n            return this._dataZoomModel === dataZoomModel;\n        },\n\n        /**\n         * @return {Array.<number>} Value can only be NaN or finite value.\n         */\n        getDataValueWindow: function () {\n            return this._valueWindow.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getDataPercentWindow: function () {\n            return this._percentWindow.slice();\n        },\n\n        /**\n         * @public\n         * @param {number} axisIndex\n         * @return {Array} seriesModels\n         */\n        getTargetSeriesModels: function () {\n            var seriesModels = [];\n            var ecModel = this.ecModel;\n\n            ecModel.eachSeries(function (seriesModel) {\n                if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n                    var dimName = this._dimName;\n                    var axisModel = ecModel.queryComponents({\n                        mainType: dimName + 'Axis',\n                        index: seriesModel.get(dimName + 'AxisIndex'),\n                        id: seriesModel.get(dimName + 'AxisId')\n                    })[0];\n                    if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n                        seriesModels.push(seriesModel);\n                    }\n                }\n            }, this);\n\n            return seriesModels;\n        },\n\n        getAxisModel: function () {\n            return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n        },\n\n        getOtherAxisModel: function () {\n            var axisDim = this._dimName;\n            var ecModel = this.ecModel;\n            var axisModel = this.getAxisModel();\n            var isCartesian = axisDim === 'x' || axisDim === 'y';\n            var otherAxisDim;\n            var coordSysIndexName;\n            if (isCartesian) {\n                coordSysIndexName = 'gridIndex';\n                otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n            }\n            else {\n                coordSysIndexName = 'polarIndex';\n                otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n            }\n            var foundOtherAxisModel;\n            ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n                if ((otherAxisModel.get(coordSysIndexName) || 0)\n                    === (axisModel.get(coordSysIndexName) || 0)\n                ) {\n                    foundOtherAxisModel = otherAxisModel;\n                }\n            });\n            return foundOtherAxisModel;\n        },\n\n        /**\n         * Only calculate by given range and this._dataExtent, do not change anything.\n         *\n         * @param {Object} opt\n         * @param {number} [opt.start]\n         * @param {number} [opt.end]\n         * @param {number} [opt.startValue]\n         * @param {number} [opt.endValue]\n         */\n        calculateDataWindow: function (opt) {\n            var dataExtent = this._dataExtent;\n            var axisModel = this.getAxisModel();\n            var scale = axisModel.axis.scale;\n            var rangePropMode = this._dataZoomModel.getRangePropMode();\n            var percentExtent = [0, 100];\n            var percentWindow = [\n                opt.start,\n                opt.end\n            ];\n            var valueWindow = [];\n\n            each(['startValue', 'endValue'], function (prop) {\n                valueWindow.push(opt[prop] != null ? scale.parse(opt[prop]) : null);\n            });\n\n            // Normalize bound.\n            each([0, 1], function (idx) {\n                var boundValue = valueWindow[idx];\n                var boundPercent = percentWindow[idx];\n\n                // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n                // on `valueProp` ('startValue', 'endValue'). The former one is suitable\n                // for cases that a dataZoom component controls multiple axes with different\n                // unit or extent, and the latter one is suitable for accurate zoom by pixel\n                // (e.g., in dataZoomSelect). `valueProp` can be calculated from `percentProp`,\n                // but it is awkward that `percentProp` can not be obtained from `valueProp`\n                // accurately (because all of values that are overflow the `dataExtent` will\n                // be calculated to percent '100%'). So we have to use\n                // `dataZoom.getRangePropMode()` to mark which prop is used.\n                // `rangePropMode` is updated only when setOption or dispatchAction, otherwise\n                // it remains its original value.\n\n                if (rangePropMode[idx] === 'percent') {\n                    if (boundPercent == null) {\n                        boundPercent = percentExtent[idx];\n                    }\n                    // Use scale.parse to math round for category or time axis.\n                    boundValue = scale.parse(numberUtil.linearMap(\n                        boundPercent, percentExtent, dataExtent, true\n                    ));\n                }\n                else {\n                    // Calculating `percent` from `value` may be not accurate, because\n                    // This calculation can not be inversed, because all of values that\n                    // are overflow the `dataExtent` will be calculated to percent '100%'\n                    boundPercent = numberUtil.linearMap(\n                        boundValue, dataExtent, percentExtent, true\n                    );\n                }\n\n                // valueWindow[idx] = round(boundValue);\n                // percentWindow[idx] = round(boundPercent);\n                valueWindow[idx] = boundValue;\n                percentWindow[idx] = boundPercent;\n            });\n\n            return {\n                valueWindow: asc(valueWindow),\n                percentWindow: asc(percentWindow)\n            };\n        },\n\n        /**\n         * Notice: reset should not be called before series.restoreData() called,\n         * so it is recommanded to be called in \"process stage\" but not \"model init\n         * stage\".\n         *\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        reset: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            // Culculate data window and data extent, and record them.\n            this._dataExtent = calculateDataExtent(\n                this, this._dimName, this.getTargetSeriesModels()\n            );\n\n            var dataWindow = this.calculateDataWindow(dataZoomModel.option);\n\n            this._valueWindow = dataWindow.valueWindow;\n            this._percentWindow = dataWindow.percentWindow;\n\n            // Update axis setting then.\n            setAxisModel(this);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        restore: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            this._valueWindow = this._percentWindow = null;\n            setAxisModel(this, true);\n        },\n\n        /**\n         * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n         */\n        filterData: function (dataZoomModel) {\n            if (dataZoomModel !== this._dataZoomModel) {\n                return;\n            }\n\n            var axisDim = this._dimName;\n            var seriesModels = this.getTargetSeriesModels();\n            var filterMode = dataZoomModel.get('filterMode');\n            var valueWindow = this._valueWindow;\n\n            // FIXME\n            // Toolbox may has dataZoom injected. And if there are stacked bar chart\n            // with NaN data, NaN will be filtered and stack will be wrong.\n            // So we need to force the mode to be set empty.\n            // In fect, it is not a big deal that do not support filterMode-'filter'\n            // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n            // selection\" some day, which might need \"adapt to data extent on the\n            // otherAxis\", which is disabled by filterMode-'empty'.\n            var otherAxisModel = this.getOtherAxisModel();\n            if (dataZoomModel.get('$fromToolbox')\n                && otherAxisModel\n                && otherAxisModel.get('type') === 'category'\n            ) {\n                filterMode = 'empty';\n            }\n\n            // Process series data\n            each(seriesModels, function (seriesModel) {\n                var seriesData = seriesModel.getData();\n\n                seriesData && each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    if (filterMode === 'empty') {\n                        seriesModel.setData(\n                            seriesData.map(dim, function (value) {\n                                return !isInWindow(value) ? NaN : value;\n                            })\n                        );\n                    }\n                    else {\n                        seriesData.filterSelf(dim, isInWindow);\n                    }\n                });\n            });\n\n            function isInWindow(value) {\n                return value >= valueWindow[0] && value <= valueWindow[1];\n            }\n        }\n    };\n\n    function calculateDataExtent(axisProxy, axisDim, seriesModels) {\n        var dataExtent = [Infinity, -Infinity];\n\n        each(seriesModels, function (seriesModel) {\n            var seriesData = seriesModel.getData();\n            if (seriesData) {\n                each(seriesModel.coordDimToDataDim(axisDim), function (dim) {\n                    var seriesExtent = seriesData.getDataExtent(dim);\n                    seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n                    seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n                });\n            }\n        });\n\n        if (dataExtent[1] < dataExtent[0]) {\n            dataExtent = [NaN, NaN];\n        }\n\n        // It is important to get \"consistent\" extent when more then one axes is\n        // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n        // when zooming. But it is difficult to know what is \"consistent\", considering\n        // axes have different type or even different meanings (For example, two\n        // time axes are used to compare data of the same date in different years).\n        // So basically dataZoom just obtains extent by series.data (in category axis\n        // extent can be obtained from axis.data).\n        // Nevertheless, user can set min/max/scale on axes to make extent of axes\n        // consistent.\n        fixExtentByAxis(axisProxy, dataExtent);\n\n        return dataExtent;\n    }\n\n    function fixExtentByAxis(axisProxy, dataExtent) {\n        var axisModel = axisProxy.getAxisModel();\n        var min = axisModel.getMin(true);\n\n        // For category axis, if min/max/scale are not set, extent is determined\n        // by axis.data by default.\n        var isCategoryAxis = axisModel.get('type') === 'category';\n        var axisDataLen = isCategoryAxis && (axisModel.get('data') || []).length;\n\n        if (min != null && min !== 'dataMin') {\n            dataExtent[0] = min;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n        }\n\n        var max = axisModel.getMax(true);\n        if (max != null && max !== 'dataMax') {\n            dataExtent[1] = max;\n        }\n        else if (isCategoryAxis) {\n            dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n        }\n\n        if (!axisModel.get('scale', true)) {\n            dataExtent[0] > 0 && (dataExtent[0] = 0);\n            dataExtent[1] < 0 && (dataExtent[1] = 0);\n        }\n\n        // For value axis, if min/max/scale are not set, we just use the extent obtained\n        // by series data, which may be a little different from the extent calculated by\n        // `axisHelper.getScaleExtent`. But the different just affects the experience a\n        // little when zooming. So it will not be fixed until some users require it strongly.\n\n        return dataExtent;\n    }\n\n    function setAxisModel(axisProxy, isRestore) {\n        var axisModel = axisProxy.getAxisModel();\n\n        var percentWindow = axisProxy._percentWindow;\n        var valueWindow = axisProxy._valueWindow;\n\n        if (!percentWindow) {\n            return;\n        }\n\n        // [0, 500]: arbitrary value, guess axis extent.\n        var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n        // isRestore or isFull\n        var useOrigin = isRestore || (percentWindow[0] === 0 && percentWindow[1] === 100);\n\n        axisModel.setRange(\n            useOrigin ? null : +valueWindow[0].toFixed(precision),\n            useOrigin ? null : +valueWindow[1].toFixed(precision)\n        );\n    }\n\n    module.exports = AxisProxy;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/AxisProxy.js\n// module id = 114\n// module chunks = 0","/**\n * @file Data zoom model\n */\n\n\n    var DataZoomModel = require('./DataZoomModel');\n\n    module.exports = DataZoomModel.extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SelectZoomModel.js\n// module id = 115\n// module chunks = 0","\n\n    module.exports = require('./DataZoomView').extend({\n\n        type: 'dataZoom.select'\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/SelectZoomView.js\n// module id = 116\n// module chunks = 0","/**\n * @file Data zoom action\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var helper = require('./helper');\n    var echarts = require('../../echarts');\n\n\n    echarts.registerAction('dataZoom', function (payload, ecModel) {\n\n        var linkedNodesFinder = helper.createLinkedNodesFinder(\n            zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'),\n            helper.eachAxisDim,\n            function (model, dimNames) {\n                return model.get(dimNames.axisIndex);\n            }\n        );\n\n        var effectedModels = [];\n\n        ecModel.eachComponent(\n            {mainType: 'dataZoom', query: payload},\n            function (model, index) {\n                effectedModels.push.apply(\n                    effectedModels, linkedNodesFinder(model).nodes\n                );\n            }\n        );\n\n        zrUtil.each(effectedModels, function (dataZoomModel, index) {\n            dataZoomModel.setRawRange({\n                start: payload.start,\n                end: payload.end,\n                startValue: payload.startValue,\n                endValue: payload.endValue\n            });\n        });\n\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomAction.js\n// module id = 117\n// module chunks = 0","/**\n * @file Data zoom processor\n */\n\n\n    var echarts = require('../../echarts');\n\n    echarts.registerProcessor(function (ecModel, api) {\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // We calculate window and reset axis here but not in model\n            // init stage and not after action dispatch handler, because\n            // reset should be called after seriesData.restoreData.\n            dataZoomModel.eachTargetAxis(resetSingleAxis);\n\n            // Caution: data zoom filtering is order sensitive when using\n            // percent range and no min/max/scale set on axis.\n            // For example, we have dataZoom definition:\n            // [\n            //      {xAxisIndex: 0, start: 30, end: 70},\n            //      {yAxisIndex: 0, start: 20, end: 80}\n            // ]\n            // In this case, [20, 80] of y-dataZoom should be based on data\n            // that have filtered by x-dataZoom using range of [30, 70],\n            // but should not be based on full raw data. Thus sliding\n            // x-dataZoom will change both ranges of xAxis and yAxis,\n            // while sliding y-dataZoom will only change the range of yAxis.\n            // So we should filter x-axis after reset x-axis immediately,\n            // and then reset y-axis and filter y-axis.\n            dataZoomModel.eachTargetAxis(filterSingleAxis);\n        });\n\n        ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n            // Fullfill all of the range props so that user\n            // is able to get them from chart.getOption().\n            var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n            var percentRange = axisProxy.getDataPercentWindow();\n            var valueRange = axisProxy.getDataValueWindow();\n\n            dataZoomModel.setRawRange({\n                start: percentRange[0],\n                end: percentRange[1],\n                startValue: valueRange[0],\n                endValue: valueRange[1]\n            }, true);\n        });\n    });\n\n    function resetSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel);\n    }\n\n    function filterSingleAxis(dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel);\n    }\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/dataZoomProcessor.js\n// module id = 118\n// module chunks = 0","\n\n    require('../../model/Component').registerSubTypeDefaulter('dataZoom', function (option) {\n        // Default 'slider' when no type specified.\n        return 'slider';\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoom/typeDefaulter.js\n// module id = 119\n// module chunks = 0","/**\n * DataZoom component entry\n */\n\n\n    require('./dataZoom/typeDefaulter');\n\n    require('./dataZoom/DataZoomModel');\n    require('./dataZoom/DataZoomView');\n\n    require('./dataZoom/SelectZoomModel');\n    require('./dataZoom/SelectZoomView');\n\n    require('./dataZoom/dataZoomProcessor');\n    require('./dataZoom/dataZoomAction');\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/dataZoomSelect.js\n// module id = 120\n// module chunks = 0","/**\n * Box selection tool.\n *\n * @module echarts/component/helper/BrushController\n */\n\n\n\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var graphic = require('../../util/graphic');\n    var interactionMutex = require('./interactionMutex');\n    var DataDiffer = require('../../data/DataDiffer');\n\n    var curry = zrUtil.curry;\n    var each = zrUtil.each;\n    var map = zrUtil.map;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathPow = Math.pow;\n\n    var COVER_Z = 10000;\n    var UNSELECT_THRESHOLD = 6;\n    var MIN_RESIZE_LINE_WIDTH = 6;\n    var MUTEX_RESOURCE_KEY = 'globalPan';\n\n    var DIRECTION_MAP = {\n        w: [0, 0],\n        e: [0, 1],\n        n: [1, 0],\n        s: [1, 1]\n    };\n    var CURSOR_MAP = {\n        w: 'ew',\n        e: 'ew',\n        n: 'ns',\n        s: 'ns',\n        ne: 'nesw',\n        sw: 'nesw',\n        nw: 'nwse',\n        se: 'nwse'\n    };\n    var DEFAULT_BRUSH_OPT = {\n        brushStyle: {\n            lineWidth: 2,\n            stroke: 'rgba(0,0,0,0.3)',\n            fill: 'rgba(0,0,0,0.1)'\n        },\n        transformable: true,\n        brushMode: 'single',\n        removeOnClick: false\n    };\n\n    var baseUID = 0;\n\n    /**\n     * @alias module:echarts/component/helper/BrushController\n     * @constructor\n     * @mixin {module:zrender/mixin/Eventful}\n     * @event module:echarts/component/helper/BrushController#brush\n     *        params:\n     *            areas: Array.<Array>, coord relates to container group,\n     *                                    If no container specified, to global.\n     *            opt {\n     *                isEnd: boolean,\n     *                removeOnClick: boolean\n     *            }\n     *\n     * @param {module:zrender/zrender~ZRender} zr\n     */\n    function BrushController(zr) {\n\n        if (__DEV__) {\n            zrUtil.assert(zr);\n        }\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:zrender/zrender~ZRender}\n         * @private\n         */\n        this._zr = zr;\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *     'line', 'rect', 'polygon' or false\n         *     If passing false/null/undefined, disable brush.\n         *     If passing 'auto', determined by panel.defaultBrushType\n         * @private\n         * @type {string}\n         */\n        this._brushType;\n\n        /**\n         * Only for drawing (after enabledBrush).\n         *\n         * @private\n         * @type {Object}\n         */\n        this._brushOption;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._panels;\n\n        /**\n         * @private\n         * @type {Array.<nubmer>}\n         */\n        this._track = [];\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._dragging;\n\n        /**\n         * @private\n         * @type {Array}\n         */\n        this._covers = [];\n\n        /**\n         * @private\n         * @type {moudule:zrender/container/Group}\n         */\n        this._creatingCover;\n\n        /**\n         * true means global panel\n         * @private\n         * @type {module:zrender/container/Group|boolean}\n         */\n        this._creatingPanel;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._enableGlobalPan;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        if (__DEV__) {\n            this._mounted;\n        }\n\n        /**\n         * @private\n         * @type {string}\n         */\n        this._uid = 'brushController_' + baseUID++;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._handlers = {};\n        each(mouseHandlers, function (handler, eventName) {\n            this._handlers[eventName] = zrUtil.bind(handler, this);\n        }, this);\n    }\n\n    BrushController.prototype = {\n\n        constructor: BrushController,\n\n        /**\n         * If set to null/undefined/false, select disabled.\n         * @param {Object} brushOption\n         * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n         *                          If passing false/null/undefined, disable brush.\n         *                          If passing 'auto', determined by panel.defaultBrushType.\n         *                              ('auto' can not be used in global panel)\n         * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n         * @param {boolean} [brushOption.transformable=true]\n         * @param {boolean} [brushOption.removeOnClick=false]\n         * @param {Object} [brushOption.brushStyle]\n         * @param {number} [brushOption.brushStyle.width]\n         * @param {number} [brushOption.brushStyle.lineWidth]\n         * @param {string} [brushOption.brushStyle.stroke]\n         * @param {string} [brushOption.brushStyle.fill]\n         */\n        enableBrush: function (brushOption) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            this._brushType && doDisableBrush(this);\n            brushOption.brushType && doEnableBrush(this, brushOption);\n\n            return this;\n        },\n\n        /**\n         * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n         *        Each items: {\n         *            panelId, // mandatory.\n         *            rect, // mandatory.\n         *            defaultBrushType // optional, only used when brushType is 'auto'.\n         *        }\n         */\n        setPanels: function (panelOpts) {\n            var oldPanels = this._panels || {};\n            var newPanels = this._panels = panelOpts && panelOpts.length && {};\n            var thisGroup = this.group;\n\n            newPanels && each(panelOpts, function (panelOpt) {\n                var panelId = panelOpt.panelId;\n                var panel = oldPanels[panelId];\n                if (!panel) {\n                    panel = new graphic.Rect({\n                        silent: true,\n                        invisible: true\n                    });\n                    thisGroup.add(panel);\n                }\n\n                var rect = panelOpt.rect;\n                // Using BoundingRect to normalize negative width/height.\n                if (!(rect instanceof BoundingRect)) {\n                    rect = BoundingRect.create(rect);\n                }\n\n                panel.attr('shape', rect.plain());\n                panel.__brushPanelId = panelId;\n                panel.__defaultBrushType = panelOpt.defaultBrushType;\n                newPanels[panelId] = panel;\n                oldPanels[panelId] = null;\n            });\n\n            each(oldPanels, function (panel) {\n                panel && thisGroup.remove(panel);\n            });\n\n            return this;\n        },\n\n        /**\n         * @param {Object} [opt]\n         * @return {boolean} [opt.enableGlobalPan=false]\n         * @return {boolean} [opt.position=[0, 0]]\n         * @return {boolean} [opt.rotation=0]\n         * @return {boolean} [opt.scale=[1, 1]]\n         */\n        mount: function (opt) {\n            opt = opt || {};\n\n            if (__DEV__) {\n                this._mounted = true; // should be at first.\n            }\n\n            this._enableGlobalPan = opt.enableGlobalPan;\n\n            var thisGroup = this.group;\n            this._zr.add(thisGroup);\n\n            thisGroup.attr({\n                position: opt.position || [0, 0],\n                rotation: opt.rotation || 0,\n                scale: opt.scale || [1, 1]\n            });\n\n            return this;\n        },\n\n        eachCover: function (cb, context) {\n            each(this._covers, cb, context);\n        },\n\n        /**\n         * Update covers.\n         * @param {Array.<Object>} brushOptionList Like:\n         *        [\n         *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n         *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n         *            ...\n         *        ]\n         *        `brushType` is required in each cover info. (can not be 'auto')\n         *        `id` is not mandatory.\n         *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n         *        If brushOptionList is null/undefined, all covers removed.\n         */\n        updateCovers: function (brushOptionList) {\n            if (__DEV__) {\n                zrUtil.assert(this._mounted);\n            }\n\n            brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n                return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n            });\n\n            var tmpIdPrefix = '\\0-brush-index-';\n            var oldCovers = this._covers;\n            var newCovers = this._covers = [];\n            var controller = this;\n            var creatingCover = this._creatingCover;\n\n            (new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey))\n                .add(addOrUpdate)\n                .update(addOrUpdate)\n                .remove(remove)\n                .execute();\n\n            return this;\n\n            function getKey(brushOption, index) {\n                return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index)\n                    + '-' + brushOption.brushType;\n            }\n\n            function oldGetKey(cover, index) {\n                return getKey(cover.__brushOption, index);\n            }\n\n            function addOrUpdate(newIndex, oldIndex) {\n                var newBrushOption = brushOptionList[newIndex];\n                // Consider setOption in event listener of brushSelect,\n                // where updating cover when creating should be forbiden.\n                if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n                    newCovers[newIndex] = oldCovers[oldIndex];\n                }\n                else {\n                    var cover = newCovers[newIndex] = oldIndex != null\n                        ? (\n                            oldCovers[oldIndex].__brushOption = newBrushOption,\n                            oldCovers[oldIndex]\n                        )\n                        : endCreating(controller, createCover(controller, newBrushOption));\n                    updateCoverAfterCreation(controller, cover);\n                }\n            }\n\n            function remove(oldIndex) {\n                if (oldCovers[oldIndex] !== creatingCover) {\n                    controller.group.remove(oldCovers[oldIndex]);\n                }\n            }\n        },\n\n        unmount: function () {\n            if (__DEV__) {\n                if (!this._mounted) {\n                    return;\n                }\n            }\n\n            this.enableBrush(false);\n\n            // container may 'removeAll' outside.\n            clearCovers(this);\n            this._zr.remove(this.group);\n\n            if (__DEV__) {\n                this._mounted = false; // should be at last.\n            }\n\n            return this;\n        },\n\n        dispose: function () {\n            this.unmount();\n            this.off();\n        }\n    };\n\n    zrUtil.mixin(BrushController, Eventful);\n\n\n    function doEnableBrush(controller, brushOption) {\n        var zr = controller._zr;\n\n        // Consider roam, which takes globalPan too.\n        if (!controller._enableGlobalPan) {\n            interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n        }\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.on(eventName, handler);\n        });\n\n        controller._brushType = brushOption.brushType;\n        controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    }\n\n    function doDisableBrush(controller) {\n        var zr = controller._zr;\n\n        interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n\n        each(controller._handlers, function (handler, eventName) {\n            zr.off(eventName, handler);\n        });\n\n        controller._brushType = controller._brushOption = null;\n    }\n\n    function createCover(controller, brushOption) {\n        var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n        updateZ(cover);\n        cover.__brushOption = brushOption;\n        controller.group.add(cover);\n        return cover;\n    }\n\n    function endCreating(controller, creatingCover) {\n        var coverRenderer = getCoverRenderer(creatingCover);\n        if (coverRenderer.endCreating) {\n            coverRenderer.endCreating(controller, creatingCover);\n            updateZ(creatingCover);\n        }\n        return creatingCover;\n    }\n\n    function updateCoverShape(controller, cover) {\n        var brushOption = cover.__brushOption;\n        getCoverRenderer(cover).updateCoverShape(\n            controller, cover, brushOption.range, brushOption\n        );\n    }\n\n    function updateZ(group) {\n        group.traverse(function (el) {\n            el.z = COVER_Z;\n            el.z2 = COVER_Z; // Consider in given container.\n        });\n    }\n\n    function updateCoverAfterCreation(controller, cover) {\n        getCoverRenderer(cover).updateCommon(controller, cover);\n        updateCoverShape(controller, cover);\n    }\n\n    function getCoverRenderer(cover) {\n        return coverRenderers[cover.__brushOption.brushType];\n    }\n\n    function getPanelByPoint(controller, x, y) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panel;\n        each(panels, function (pn) {\n            pn.contain(x, y) && (panel = pn);\n        });\n        return panel;\n    }\n\n    function getPanelByCover(controller, cover) {\n        var panels = controller._panels;\n        if (!panels) {\n            return true; // Global panel\n        }\n        var panelId = cover.__brushOption.panelId;\n        // User may give cover without coord sys info,\n        // which is then treated as global panel.\n        return panelId != null ? panels[panelId] : true;\n    }\n\n    function clearCovers(controller) {\n        var covers = controller._covers;\n        var originalLength = covers.length;\n        each(covers, function (cover) {\n            controller.group.remove(cover);\n        }, controller);\n        covers.length = 0;\n\n        return !!originalLength;\n    }\n\n    function trigger(controller, opt) {\n        var areas = map(controller._covers, function (cover) {\n            var brushOption = cover.__brushOption;\n            var range = zrUtil.clone(brushOption.range);\n\n            return {\n                brushType: brushOption.brushType,\n                panelId: brushOption.panelId,\n                range: range\n            };\n        });\n\n        controller.trigger('brush', areas, {\n            isEnd: !!opt.isEnd,\n            removeOnClick: !!opt.removeOnClick\n        });\n    }\n\n    function shouldShowCover(controller) {\n        var track = controller._track;\n\n        if (!track.length) {\n            return false;\n        }\n\n        var p2 = track[track.length - 1];\n        var p1 = track[0];\n        var dx = p2[0] - p1[0];\n        var dy = p2[1] - p1[1];\n        var dist = mathPow(dx * dx + dy * dy, 0.5);\n\n        return dist > UNSELECT_THRESHOLD;\n    }\n\n    function getTrackEnds(track) {\n        var tail = track.length - 1;\n        tail < 0 && (tail = 0);\n        return [track[0], track[tail]];\n    }\n\n    function createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n        var cover = new graphic.Group();\n\n        cover.add(new graphic.Rect({\n            name: 'main',\n            style: makeStyle(brushOption),\n            silent: true,\n            draggable: true,\n            cursor: 'move',\n            drift: curry(doDrift, controller, cover, 'nswe'),\n            ondragend: curry(trigger, controller, {isEnd: true})\n        }));\n\n        each(\n            edgeNames,\n            function (name) {\n                cover.add(new graphic.Rect({\n                    name: name,\n                    style: {opacity: 0},\n                    draggable: true,\n                    silent: true,\n                    invisible: true,\n                    drift: curry(doDrift, controller, cover, name),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            }\n        );\n\n        return cover;\n    }\n\n    function updateBaseRect(controller, cover, localRange, brushOption) {\n        var lineWidth = brushOption.brushStyle.lineWidth || 0;\n        var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n        var x = localRange[0][0];\n        var y = localRange[1][0];\n        var xa = x - lineWidth / 2;\n        var ya = y - lineWidth / 2;\n        var x2 = localRange[0][1];\n        var y2 = localRange[1][1];\n        var x2a = x2 - handleSize + lineWidth / 2;\n        var y2a = y2 - handleSize + lineWidth / 2;\n        var width = x2 - x;\n        var height = y2 - y;\n        var widtha = width + lineWidth;\n        var heighta = height + lineWidth;\n\n        updateRectShape(controller, cover, 'main', x, y, width, height);\n\n        if (brushOption.transformable) {\n            updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n            updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n            updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n\n            updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n            updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n            updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n        }\n    }\n\n    function updateCommon(controller, cover) {\n        var brushOption = cover.__brushOption;\n        var transformable = brushOption.transformable;\n\n        var mainEl = cover.childAt(0);\n        mainEl.useStyle(makeStyle(brushOption));\n        mainEl.attr({\n            silent: !transformable,\n            cursor: transformable ? 'move' : 'default'\n        });\n\n        each(\n            ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'],\n            function (name) {\n                var el = cover.childOfName(name);\n                var globalDir = getGlobalDirection(controller, name);\n\n                el && el.attr({\n                    silent: !transformable,\n                    invisible: !transformable,\n                    cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n                });\n            }\n        );\n    }\n\n    function updateRectShape(controller, cover, name, x, y, w, h) {\n        var el = cover.childOfName(name);\n        el && el.setShape(pointsToRect(\n            clipByPanel(controller, cover, [[x, y], [x + w, y + h]])\n        ));\n    }\n\n    function makeStyle(brushOption) {\n        return zrUtil.defaults({strokeNoScale: true}, brushOption.brushStyle);\n    }\n\n    function formatRectRange(x, y, x2, y2) {\n        var min = [mathMin(x, x2), mathMin(y, y2)];\n        var max = [mathMax(x, x2), mathMax(y, y2)];\n\n        return [\n            [min[0], max[0]], // x range\n            [min[1], max[1]] // y range\n        ];\n    }\n\n    function getTransform(controller) {\n        return graphic.getTransform(controller.group);\n    }\n\n    function getGlobalDirection(controller, localDirection) {\n        if (localDirection.length > 1) {\n            localDirection = localDirection.split('');\n            var globalDir = [\n                getGlobalDirection(controller, localDirection[0]),\n                getGlobalDirection(controller, localDirection[1])\n            ];\n            (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n            return globalDir.join('');\n        }\n        else {\n            var map = {w: 'left', e: 'right', n: 'top', s: 'bottom'};\n            var inverseMap = {left: 'w', right: 'e', top: 'n', bottom: 's'};\n            var globalDir = graphic.transformDirection(\n                map[localDirection], getTransform(controller)\n            );\n            return inverseMap[globalDir];\n        }\n    }\n\n    function driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n        var brushOption = cover.__brushOption;\n        var rectRange = toRectRange(brushOption.range);\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(name.split(''), function (namePart) {\n            var ind = DIRECTION_MAP[namePart];\n            rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n        });\n\n        brushOption.range = fromRectRange(formatRectRange(\n            rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]\n        ));\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function driftPolygon(controller, cover, dx, dy, e) {\n        var range = cover.__brushOption.range;\n        var localDelta = toLocalDelta(controller, dx, dy);\n\n        each(range, function (point) {\n            point[0] += localDelta[0];\n            point[1] += localDelta[1];\n        });\n\n        updateCoverAfterCreation(controller, cover);\n        trigger(controller, {isEnd: false});\n    }\n\n    function toLocalDelta(controller, dx, dy) {\n        var thisGroup = controller.group;\n        var localD = thisGroup.transformCoordToLocal(dx, dy);\n        var localZero = thisGroup.transformCoordToLocal(0, 0);\n\n        return [localD[0] - localZero[0], localD[1] - localZero[1]];\n    }\n\n    function clipByPanel(controller, cover, data) {\n        var panel = getPanelByCover(controller, cover);\n        if (panel === true) { // Global panel\n            return zrUtil.clone(data);\n        }\n\n        var panelRect = panel.getBoundingRect();\n\n        return zrUtil.map(data, function (point) {\n            var x = point[0];\n            x = mathMax(x, panelRect.x);\n            x = mathMin(x, panelRect.x + panelRect.width);\n            var y = point[1];\n            y = mathMax(y, panelRect.y);\n            y = mathMin(y, panelRect.y + panelRect.height);\n            return [x, y];\n        });\n    }\n\n    function pointsToRect(points) {\n        var xmin = mathMin(points[0][0], points[1][0]);\n        var ymin = mathMin(points[0][1], points[1][1]);\n        var xmax = mathMax(points[0][0], points[1][0]);\n        var ymax = mathMax(points[0][1], points[1][1]);\n\n        return {\n            x: xmin,\n            y: ymin,\n            width: xmax - xmin,\n            height: ymax - ymin\n        };\n    }\n\n    function resetCursor(controller, e) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var zr = controller._zr;\n\n        if (controller._brushType) { // If active\n            var panels = controller._panels;\n            var covers = controller._covers;\n            var inCover;\n\n            for (var i = 0; i < covers.length; i++) {\n                if (coverRenderers[covers[i].__brushOption.brushType].contain(covers[i], x, y)) {\n                    inCover = true;\n                    break;\n                }\n            }\n\n            if (!inCover) {\n                if (panels) { // Brush on panels\n                    each(panels, function (panel) {\n                        panel.contain(x, y) && zr.setCursorStyle('crosshair');\n                    });\n                }\n                else { // Global brush\n                    zr.setCursorStyle('crosshair');\n                }\n            }\n        }\n    }\n\n    function preventDefault(e) {\n        var rawE = e.event;\n        rawE.preventDefault && rawE.preventDefault();\n    }\n\n    function mainShapeContain(cover, x, y) {\n        return cover.childOfName('main').contain(x, y);\n    }\n\n    function updateCoverByMouse(controller, e, isEnd) {\n        var x = e.offsetX;\n        var y = e.offsetY;\n        var creatingCover = controller._creatingCover;\n        var panel = controller._creatingPanel;\n        var thisBrushOption = controller._brushOption;\n        var eventParams;\n\n        controller._track.push(controller.group.transformCoordToLocal(x, y));\n\n        if (shouldShowCover(controller) || creatingCover) {\n\n            if (panel && !creatingCover) {\n                thisBrushOption.brushMode === 'single' && clearCovers(controller);\n                var brushOption = zrUtil.clone(thisBrushOption);\n                brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n                brushOption.panelId = panel === true ? null : panel.__brushPanelId;\n                creatingCover = controller._creatingCover = createCover(controller, brushOption);\n                controller._covers.push(creatingCover);\n            }\n\n            if (creatingCover) {\n                var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n                var coverBrushOption = creatingCover.__brushOption;\n\n                coverBrushOption.range = coverRenderer.getCreatingRange(\n                    clipByPanel(controller, creatingCover, controller._track)\n                );\n\n                if (isEnd) {\n                    endCreating(controller, creatingCover);\n                    coverRenderer.updateCommon(controller, creatingCover);\n                }\n\n                updateCoverShape(controller, creatingCover);\n\n                eventParams = {isEnd: isEnd};\n            }\n        }\n        else if (\n            isEnd\n            && thisBrushOption.brushMode === 'single'\n            && thisBrushOption.removeOnClick\n        ) {\n            // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n            // But a single click do not clear covers, because user may have casual\n            // clicks (for example, click on other component and do not expect covers\n            // disappear).\n            // Only some cover removed, trigger action, but not every click trigger action.\n            if (getPanelByPoint(controller, x, y) && clearCovers(controller)) {\n                eventParams = {isEnd: isEnd, removeOnClick: true};\n            }\n        }\n\n        return eventParams;\n    }\n\n    function determineBrushType(brushType, panel) {\n        if (brushType === 'auto') {\n            if (__DEV__) {\n                zrUtil.assert(\n                    panel && panel.__defaultBrushType,\n                    'MUST have defaultBrushType when brushType is \"atuo\"'\n                );\n            }\n            return panel.__defaultBrushType;\n        }\n        return brushType;\n    }\n\n    var mouseHandlers = {\n\n        mousedown: function (e) {\n            if (this._dragging) {\n                // In case some browser do not support globalOut,\n                // and release mose out side the browser.\n                handleDragEnd.call(this, e);\n            }\n            else if (!e.target || !e.target.draggable) {\n\n                preventDefault(e);\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                this._creatingCover = null;\n                var panel = this._creatingPanel = getPanelByPoint(this, x, y);\n\n                if (panel) {\n                    this._dragging = true;\n                    this._track = [this.group.transformCoordToLocal(x, y)];\n                }\n            }\n        },\n\n        mousemove: function (e) {\n            // set Cursor\n            resetCursor(this, e);\n\n            if (this._dragging) {\n\n                preventDefault(e);\n\n                var eventParams = updateCoverByMouse(this, e, false);\n\n                eventParams && trigger(this, eventParams);\n            }\n        },\n\n        mouseup: handleDragEnd //,\n\n        // FIXME\n        // in tooltip, globalout should not be triggered.\n        // globalout: handleDragEnd\n    };\n\n    function handleDragEnd(e) {\n        if (this._dragging) {\n\n            preventDefault(e);\n\n            var eventParams = updateCoverByMouse(this, e, true);\n\n            this._dragging = false;\n            this._track = [];\n            this._creatingCover = null;\n\n            // trigger event shoule be at final, after procedure will be nested.\n            eventParams && trigger(this, eventParams);\n        }\n    }\n\n    /**\n     * key: brushType\n     * @type {Object}\n     */\n    var coverRenderers = {\n\n        lineX: getLineRenderer(0),\n\n        lineY: getLineRenderer(1),\n\n        rect: {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            return range;\n                        },\n                        function (range) {\n                            return range;\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                updateBaseRect(controller, cover, localRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        },\n\n        polygon: {\n            createCover: function (controller, brushOption) {\n                var cover = new graphic.Group();\n\n                // Do not use graphic.Polygon because graphic.Polyline do not close the\n                // border of the shape when drawing, which is a better experience for user.\n                cover.add(new graphic.Polyline({\n                    name: 'main',\n                    style: makeStyle(brushOption),\n                    silent: true\n                }));\n\n                return cover;\n            },\n            getCreatingRange: function (localTrack) {\n                return localTrack;\n            },\n            endCreating: function (controller, cover) {\n                cover.remove(cover.childAt(0));\n                // Use graphic.Polygon close the shape.\n                cover.add(new graphic.Polygon({\n                    name: 'main',\n                    draggable: true,\n                    drift: curry(driftPolygon, controller, cover),\n                    ondragend: curry(trigger, controller, {isEnd: true})\n                }));\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                cover.childAt(0).setShape({\n                    points: clipByPanel(controller, cover, localRange)\n                });\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        }\n    };\n\n    function getLineRenderer(xyIndex) {\n        return {\n            createCover: function (controller, brushOption) {\n                return createBaseRectCover(\n                    curry(\n                        driftRect,\n                        function (range) {\n                            var rectRange = [range, [0, 100]];\n                            xyIndex && rectRange.reverse();\n                            return rectRange;\n                        },\n                        function (rectRange) {\n                            return rectRange[xyIndex];\n                        }\n                    ),\n                    controller,\n                    brushOption,\n                    [['w', 'e'], ['n', 's']][xyIndex]\n                );\n            },\n            getCreatingRange: function (localTrack) {\n                var ends = getTrackEnds(localTrack);\n                var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n                var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n\n                return [min, max];\n            },\n            updateCoverShape: function (controller, cover, localRange, brushOption) {\n                var brushWidth = brushOption.brushStyle.width;\n                var otherExtent;\n                // If brushWidth not specified, fit the panel.\n                if (brushWidth == null) {\n                    var panel = getPanelByCover(controller, cover);\n                    var base = 0;\n                    if (panel !== true) {\n                        var rect = panel.getBoundingRect();\n                        brushWidth = xyIndex ? rect.width : rect.height;\n                        base = xyIndex ? rect.x : rect.y;\n                    }\n                    // FIXME\n                    // do not support global panel yet.\n                    otherExtent = [base, base + (brushWidth || 0)];\n                }\n                else {\n                    otherExtent = [-brushWidth / 2, brushWidth / 2];\n                }\n                var rectRange = [localRange, otherExtent];\n                xyIndex && rectRange.reverse();\n\n                updateBaseRect(controller, cover, rectRange, brushOption);\n            },\n            updateCommon: updateCommon,\n            contain: mainShapeContain\n        };\n    }\n\n    module.exports = BrushController;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/BrushController.js\n// module id = 121\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n\n    var each = zrUtil.each;\n    var indexOf = zrUtil.indexOf;\n    var curry = zrUtil.curry;\n\n    var COORD_CONVERTS = ['dataToPoint', 'pointToData'];\n\n    // FIXME\n    // how to genarialize to more coordinate systems.\n    var INCLUDE_FINDER_MAIN_TYPES = [\n        'grid', 'xAxis', 'yAxis', 'geo', 'graph',\n        'polar', 'radiusAxis', 'angleAxis', 'bmap'\n    ];\n\n    /**\n     * [option in constructor]:\n     * {\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     * }\n     *\n     *\n     * [targetInfo]:\n     *\n     * There can be multiple axes in a single targetInfo. Consider the case\n     * of `grid` component, a targetInfo represents a grid which contains one or more\n     * cartesian and one or more axes. And consider the case of parallel system,\n     * which has multiple axes in a coordinate system.\n     * Can be {\n     *     panelId: ...,\n     *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n     *     coordSyses: all cartesians.\n     *     gridModel: <grid component>\n     *     xAxes: correspond to coordSyses on index\n     *     yAxes: correspond to coordSyses on index\n     * }\n     * or {\n     *     panelId: ...,\n     *     coordSys: <geo coord sys>\n     *     coordSyses: [<geo coord sys>]\n     *     geoModel: <geo component>\n     * }\n     *\n     *\n     * [panelOpt]:\n     *\n     * Make from targetInfo. Input to BrushController.\n     * {\n     *     panelId: ...,\n     *     rect: ...\n     * }\n     *\n     *\n     * [area]:\n     *\n     * Generated by BrushController or user input.\n     * {\n     *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n     *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n     *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n     *     range: pixel range.\n     *     coordRange: representitive coord range (the first one of coordRanges).\n     *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n     * }\n     */\n\n    /**\n     * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n     *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n     * @param {module:echarts/model/Global} ecModel\n     * @param {Object} [opt]\n     * @param {Array.<string>} [opt.include] include coordinate system types.\n     */\n    function BrushTargetManager(option, ecModel, opt) {\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        var targetInfoList = this._targetInfoList = [];\n        var info = {};\n        var foundCpts = parseFinder(ecModel, option);\n\n        each(targetInfoBuilders, function (builder, type) {\n            if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n                builder(foundCpts, targetInfoList, info);\n            }\n        });\n    }\n\n    var proto = BrushTargetManager.prototype;\n\n    proto.setOutputRanges = function (areas, ecModel) {\n        this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            (area.coordRanges || (area.coordRanges = [])).push(coordRange);\n            // area.coordRange is the first of area.coordRanges\n            if (!area.coordRange) {\n                area.coordRange = coordRange;\n                // In 'category' axis, coord to pixel is not reversible, so we can not\n                // rebuild range by coordRange accrately, which may bring trouble when\n                // brushing only one item. So we use __rangeOffset to rebuilding range\n                // by coordRange. And this it only used in brush component so it is no\n                // need to be adapted to coordRanges.\n                var result = coordConvert[area.brushType](0, coordSys, coordRange);\n                area.__rangeOffset = {\n                    offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n                    xyMinMax: result.xyMinMax\n                };\n            }\n        });\n    };\n\n    proto.matchOutputRanges = function (areas, ecModel, cb) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (targetInfo && targetInfo !== true) {\n                zrUtil.each(\n                    targetInfo.coordSyses,\n                    function (coordSys) {\n                        var result = coordConvert[area.brushType](1, coordSys, area.range);\n                        cb(area, result.values, coordSys, ecModel);\n                    }\n                );\n            }\n        }, this);\n    };\n\n    proto.setInputRanges = function (areas, ecModel) {\n        each(areas, function (area) {\n            var targetInfo = this.findTargetInfo(area, ecModel);\n\n            if (__DEV__) {\n                zrUtil.assert(\n                    !targetInfo || targetInfo === true || area.coordRange,\n                    'coordRange must be specified when coord index specified.'\n                );\n                zrUtil.assert(\n                    !targetInfo || targetInfo !== true || area.range,\n                    'range must be specified in global brush.'\n                );\n            }\n\n            area.range = area.range || [];\n\n            // convert coordRange to global range and set panelId.\n            if (targetInfo && targetInfo !== true) {\n                area.panelId = targetInfo.panelId;\n                // (1) area.range shoule always be calculate from coordRange but does\n                // not keep its original value, for the sake of the dataZoom scenario,\n                // where area.coordRange remains unchanged but area.range may be changed.\n                // (2) Only support converting one coordRange to pixel range in brush\n                // component. So do not consider `coordRanges`.\n                // (3) About __rangeOffset, see comment above.\n                var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n                var rangeOffset = area.__rangeOffset;\n                area.range = rangeOffset\n                    ? diffProcessor[area.brushType](\n                        result.values,\n                        rangeOffset.offset,\n                        getScales(result.xyMinMax, rangeOffset.xyMinMax)\n                    )\n                    : result.values;\n            }\n        }, this);\n    };\n\n    proto.makePanelOpts = function (getDefaultBrushType) {\n        return zrUtil.map(this._targetInfoList, function (targetInfo) {\n            return {\n                panelId: targetInfo.panelId,\n                rect: targetInfo.getPanelRect(),\n                defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo)\n            };\n        });\n    };\n\n    proto.controlSeries = function (area, seriesModel, ecModel) {\n        // Check whether area is bound in coord, and series do not belong to that coord.\n        // If do not do this check, some brush (like lineX) will controll all axes.\n        var targetInfo = this.findTargetInfo(area, ecModel);\n        return targetInfo === true || (\n            targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0\n        );\n    };\n\n    /**\n     * If return Object, a coord found.\n     * If reutrn true, global found.\n     * Otherwise nothing found.\n     *\n     * @param {Object} area\n     * @param {Array} targetInfoList\n     * @return {Obejct|boolean}\n     */\n    proto.findTargetInfo = function (area, ecModel) {\n        var targetInfoList = this._targetInfoList;\n        var foundCpts = parseFinder(ecModel, area);\n\n        for (var i = 0; i < targetInfoList.length; i++) {\n            var targetInfo = targetInfoList[i];\n            var areaPanelId = area.panelId;\n            if (areaPanelId) {\n                if (targetInfo.panelId === areaPanelId) {\n                    return targetInfo;\n                }\n            }\n            else {\n                for (var i = 0; i < targetInfoMatchers.length; i++) {\n                    if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n                        return targetInfo;\n                    }\n                }\n            }\n        }\n\n        return true;\n    };\n\n    function formatMinMax(minMax) {\n        minMax[0] > minMax[1] && minMax.reverse();\n        return minMax;\n    }\n\n    function parseFinder(ecModel, option) {\n        return modelUtil.parseFinder(\n            ecModel, option, {includeMainTypes: INCLUDE_FINDER_MAIN_TYPES}\n        );\n    }\n\n    var targetInfoBuilders = {\n\n        grid: function (foundCpts, targetInfoList) {\n            var xAxisModels = foundCpts.xAxisModels;\n            var yAxisModels = foundCpts.yAxisModels;\n            var gridModels = foundCpts.gridModels;\n            // Remove duplicated.\n            var gridModelMap = {};\n            var xAxesHas = {};\n            var yAxesHas = {};\n\n            if (!xAxisModels && !yAxisModels && !gridModels) {\n                return;\n            }\n\n            each(xAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n            });\n            each(yAxisModels, function (axisModel) {\n                var gridModel = axisModel.axis.grid.model;\n                gridModelMap[gridModel.id] = gridModel;\n                yAxesHas[gridModel.id] = true;\n            });\n            each(gridModels, function (gridModel) {\n                gridModelMap[gridModel.id] = gridModel;\n                xAxesHas[gridModel.id] = true;\n                yAxesHas[gridModel.id] = true;\n            });\n\n            each(gridModelMap, function (gridModel) {\n                var grid = gridModel.coordinateSystem;\n                var cartesians = [];\n\n                each(grid.getCartesians(), function (cartesian, index) {\n                    if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0\n                        || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0\n                    ) {\n                        cartesians.push(cartesian);\n                    }\n                });\n                targetInfoList.push({\n                    panelId: 'grid--' + gridModel.id,\n                    gridModel: gridModel,\n                    // Use the first one as the representitive coordSys.\n                    coordSys: cartesians[0],\n                    coordSyses: cartesians,\n                    getPanelRect: panelRectBuilder.grid,\n                    xAxisDeclared: xAxesHas[gridModel.id],\n                    yAxisDeclared: yAxesHas[gridModel.id]\n                });\n            });\n        },\n\n        geo: function (foundCpts, targetInfoList) {\n            each(foundCpts.geoModels, function (geoModel) {\n                var coordSys = geoModel.coordinateSystem;\n                targetInfoList.push({\n                    panelId: 'geo--' + geoModel.id,\n                    geoModel: geoModel,\n                    coordSys: coordSys,\n                    coordSyses: [coordSys],\n                    getPanelRect: panelRectBuilder.geo\n                });\n            });\n        }\n    };\n\n    var targetInfoMatchers = [\n\n        // grid\n        function (foundCpts, targetInfo) {\n            var xAxisModel = foundCpts.xAxisModel;\n            var yAxisModel = foundCpts.yAxisModel;\n            var gridModel = foundCpts.gridModel;\n\n            !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n            !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n\n            return gridModel && gridModel === targetInfo.gridModel;\n        },\n\n        // geo\n        function (foundCpts, targetInfo) {\n            var geoModel = foundCpts.geoModel;\n            return geoModel && geoModel === targetInfo.geoModel;\n        }\n    ];\n\n    var panelRectBuilder = {\n\n        grid: function () {\n            // grid is not Transformable.\n            return this.coordSys.grid.getRect().clone();\n        },\n\n        geo: function () {\n            var coordSys = this.coordSys;\n            var rect = coordSys.getBoundingRect().clone();\n            // geo roam and zoom transform\n            rect.applyTransform(graphic.getTransform(coordSys));\n            return rect;\n        }\n    };\n\n    var coordConvert = {\n\n        lineX: curry(axisConvert, 0),\n\n        lineY: curry(axisConvert, 1),\n\n        rect: function (to, coordSys, rangeOrCoordRange) {\n            var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n            var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n            var values = [\n                formatMinMax([xminymin[0], xmaxymax[0]]),\n                formatMinMax([xminymin[1], xmaxymax[1]])\n            ];\n            return {values: values, xyMinMax: values};\n        },\n\n        polygon: function (to, coordSys, rangeOrCoordRange) {\n            var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n            var values = zrUtil.map(rangeOrCoordRange, function (item) {\n                var p = coordSys[COORD_CONVERTS[to]](item);\n                xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n                xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n                xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n                xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n                return p;\n            });\n            return {values: values, xyMinMax: xyMinMax};\n        }\n    };\n\n    function axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n        if (__DEV__) {\n            zrUtil.assert(\n                coordSys.type === 'cartesian2d',\n                'lineX/lineY brush is available only in cartesian2d.'\n            );\n        }\n\n        var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n        var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n            return to\n                ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i]))\n                : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n        }));\n        var xyMinMax = [];\n        xyMinMax[axisNameIndex] = values;\n        xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n\n        return {values: values, xyMinMax: xyMinMax};\n    }\n\n    var diffProcessor = {\n        lineX: curry(axisDiffProcessor, 0),\n\n        lineY: curry(axisDiffProcessor, 1),\n\n        rect: function (values, refer, scales) {\n            return [\n                [values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]],\n                [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]\n            ];\n        },\n\n        polygon: function (values, refer, scales) {\n            return zrUtil.map(values, function (item, idx) {\n                return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n            });\n        }\n    };\n\n    function axisDiffProcessor(axisNameIndex, values, refer, scales) {\n        return [\n            values[0] - scales[axisNameIndex] * refer[0],\n            values[1] - scales[axisNameIndex] * refer[1]\n        ];\n    }\n\n    // We have to process scale caused by dataZoom manually,\n    // although it might be not accurate.\n    function getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n        var sizeCurr = getSize(xyMinMaxCurr);\n        var sizeOrigin = getSize(xyMinMaxOrigin);\n        var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n        isNaN(scales[0]) && (scales[0] = 1);\n        isNaN(scales[1]) && (scales[1] = 1);\n        return scales;\n    }\n\n    function getSize(xyMinMax) {\n        return xyMinMax\n            ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]]\n            : [NaN, NaN];\n    }\n\n    module.exports = BrushTargetManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/BrushTargetManager.js\n// module id = 122\n// module chunks = 0","\n\n    var ATTR = '\\0_ec_interaction_mutex';\n\n    var interactionMutex = {\n\n        take: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            store[resourceKey] = userKey;\n        },\n\n        release: function (zr, resourceKey, userKey) {\n            var store = getStore(zr);\n            var uKey = store[resourceKey];\n\n            if (uKey === userKey) {\n                store[resourceKey] = null;\n            }\n        },\n\n        isTaken: function (zr, resourceKey) {\n            return !!getStore(zr)[resourceKey];\n        }\n    };\n\n    function getStore(zr) {\n        return zr[ATTR] || (zr[ATTR] = {});\n    }\n\n    /**\n     * payload: {\n     *     type: 'takeGlobalCursor',\n     *     key: 'dataZoomSelect', or 'brush', or ...,\n     *         If no userKey, release global cursor.\n     * }\n     */\n    require('../../echarts').registerAction(\n        {type: 'takeGlobalCursor', event: 'globalCursorTaken', update: 'update'},\n        function () {}\n    );\n\n    module.exports = interactionMutex;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/interactionMutex.js\n// module id = 123\n// module chunks = 0","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 124\n// module chunks = 0","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 125\n// module chunks = 0","\n\n    require('./toolbox/ToolboxModel');\n    require('./toolbox/ToolboxView');\n\n    require('./toolbox/feature/SaveAsImage');\n    require('./toolbox/feature/MagicType');\n    require('./toolbox/feature/DataView');\n    require('./toolbox/feature/DataZoom');\n    require('./toolbox/feature/Restore');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox.js\n// module id = 126\n// module chunks = 0","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var ToolboxModel = require('../../echarts').extendComponentModel({\n\n        type: 'toolbox',\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        mergeDefaultAndTheme: function (option) {\n            ToolboxModel.superApply(this, 'mergeDefaultAndTheme', arguments);\n\n            zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n                var Feature = featureManager.get(featureName);\n                Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n            });\n        },\n\n        defaultOption: {\n\n            show: true,\n\n            z: 6,\n\n            zlevel: 0,\n\n            orient: 'horizontal',\n\n            left: 'right',\n\n            top: 'top',\n\n            // right\n            // bottom\n\n            backgroundColor: 'transparent',\n\n            borderColor: '#ccc',\n\n            borderWidth: 0,\n\n            padding: 5,\n\n            itemSize: 15,\n\n            itemGap: 8,\n\n            showTitle: true,\n\n            iconStyle: {\n                normal: {\n                    borderColor: '#666',\n                    color: 'none'\n                },\n                emphasis: {\n                    borderColor: '#3E98C5'\n                }\n            }\n            // textStyle: {},\n\n            // feature\n        }\n    });\n\n    module.exports = ToolboxModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/ToolboxModel.js\n// module id = 127\n// module chunks = 0","\n\n    var featureManager = require('./featureManager');\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var DataDiffer = require('../../data/DataDiffer');\n    var listComponentHelper = require('../helper/listComponent');\n    var textContain = require('zrender/lib/contain/text');\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'toolbox',\n\n        render: function (toolboxModel, ecModel, api, payload) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!toolboxModel.get('show')) {\n                return;\n            }\n\n            var itemSize = +toolboxModel.get('itemSize');\n            var featureOpts = toolboxModel.get('feature') || {};\n            var features = this._features || (this._features = {});\n\n            var featureNames = [];\n            zrUtil.each(featureOpts, function (opt, name) {\n                featureNames.push(name);\n            });\n\n            (new DataDiffer(this._featureNames || [], featureNames))\n                .add(process)\n                .update(process)\n                .remove(zrUtil.curry(process, null))\n                .execute();\n\n            // Keep for diff.\n            this._featureNames = featureNames;\n\n            function process(newIndex, oldIndex) {\n                var featureName = featureNames[newIndex];\n                var oldName = featureNames[oldIndex];\n                var featureOpt = featureOpts[featureName];\n                var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n                var feature;\n\n                if (featureName && !oldName) { // Create\n                    if (isUserFeatureName(featureName)) {\n                        feature = {\n                            model: featureModel,\n                            onclick: featureModel.option.onclick,\n                            featureName: featureName\n                        };\n                    }\n                    else {\n                        var Feature = featureManager.get(featureName);\n                        if (!Feature) {\n                            return;\n                        }\n                        feature = new Feature(featureModel, ecModel, api);\n                    }\n                    features[featureName] = feature;\n                }\n                else {\n                    feature = features[oldName];\n                    // If feature does not exsit.\n                    if (!feature) {\n                        return;\n                    }\n                    feature.model = featureModel;\n                    feature.ecModel = ecModel;\n                    feature.api = api;\n                }\n\n                if (!featureName && oldName) {\n                    feature.dispose && feature.dispose(ecModel, api);\n                    return;\n                }\n\n                if (!featureModel.get('show') || feature.unusable) {\n                    feature.remove && feature.remove(ecModel, api);\n                    return;\n                }\n\n                createIconPaths(featureModel, feature, featureName);\n\n                featureModel.setIconStatus = function (iconName, status) {\n                    var option = this.option;\n                    var iconPaths = this.iconPaths;\n                    option.iconStatus = option.iconStatus || {};\n                    option.iconStatus[iconName] = status;\n                    // FIXME\n                    iconPaths[iconName] && iconPaths[iconName].trigger(status);\n                };\n\n                if (feature.render) {\n                    feature.render(featureModel, ecModel, api, payload);\n                }\n            }\n\n            function createIconPaths(featureModel, feature, featureName) {\n                var iconStyleModel = featureModel.getModel('iconStyle');\n\n                // If one feature has mutiple icon. they are orginaized as\n                // {\n                //     icon: {\n                //         foo: '',\n                //         bar: ''\n                //     },\n                //     title: {\n                //         foo: '',\n                //         bar: ''\n                //     }\n                // }\n                var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n                var titles = featureModel.get('title') || {};\n                if (typeof icons === 'string') {\n                    var icon = icons;\n                    var title = titles;\n                    icons = {};\n                    titles = {};\n                    icons[featureName] = icon;\n                    titles[featureName] = title;\n                }\n                var iconPaths = featureModel.iconPaths = {};\n                zrUtil.each(icons, function (icon, iconName) {\n                    var normalStyle = iconStyleModel.getModel('normal').getItemStyle();\n                    var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n\n                    var style = {\n                        x: -itemSize / 2,\n                        y: -itemSize / 2,\n                        width: itemSize,\n                        height: itemSize\n                    };\n                    var path = icon.indexOf('image://') === 0\n                        ? (\n                            style.image = icon.slice(8),\n                            new graphic.Image({style: style})\n                        )\n                        : graphic.makePath(\n                            icon.replace('path://', ''),\n                            {\n                                style: normalStyle,\n                                hoverStyle: hoverStyle,\n                                rectHover: true\n                            },\n                            style,\n                            'center'\n                        );\n\n                    graphic.setHoverStyle(path);\n\n                    if (toolboxModel.get('showTitle')) {\n                        path.__title = titles[iconName];\n                        path.on('mouseover', function () {\n                                // Should not reuse above hoverStyle, which might be modified.\n                                var hoverStyle = iconStyleModel.getModel('emphasis').getItemStyle();\n                                path.setStyle({\n                                    text: titles[iconName],\n                                    textPosition: hoverStyle.textPosition || 'bottom',\n                                    textFill: hoverStyle.fill || hoverStyle.stroke || '#000',\n                                    textAlign: hoverStyle.textAlign || 'center'\n                                });\n                            })\n                            .on('mouseout', function () {\n                                path.setStyle({\n                                    textFill: null\n                                });\n                            });\n                    }\n                    path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n\n                    group.add(path);\n                    path.on('click', zrUtil.bind(\n                        feature.onclick, feature, ecModel, api, iconName\n                    ));\n\n                    iconPaths[iconName] = path;\n                });\n            }\n\n            listComponentHelper.layout(group, toolboxModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, toolboxModel);\n\n            // Adjust icon title positions to avoid them out of screen\n            group.eachChild(function (icon) {\n                var titleText = icon.__title;\n                var hoverStyle = icon.hoverStyle;\n                // May be background element\n                if (hoverStyle && titleText) {\n                    var rect = textContain.getBoundingRect(\n                        titleText, hoverStyle.font\n                    );\n                    var offsetX = icon.position[0] + group.position[0];\n                    var offsetY = icon.position[1] + group.position[1] + itemSize;\n\n                    var needPutOnTop = false;\n                    if (offsetY + rect.height > api.getHeight()) {\n                        hoverStyle.textPosition = 'top';\n                        needPutOnTop = true;\n                    }\n                    var topOffset = needPutOnTop ? (-5 - rect.height) : (itemSize + 8);\n                    if (offsetX + rect.width /  2 > api.getWidth()) {\n                        hoverStyle.textPosition = ['100%', topOffset];\n                        hoverStyle.textAlign = 'right';\n                    }\n                    else if (offsetX - rect.width / 2 < 0) {\n                        hoverStyle.textPosition = [0, topOffset];\n                        hoverStyle.textAlign = 'left';\n                    }\n                }\n            });\n        },\n\n        updateView: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n            });\n        },\n\n        updateLayout: function (toolboxModel, ecModel, api, payload) {\n            zrUtil.each(this._features, function (feature) {\n                feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n            });\n        },\n\n        remove: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.remove && feature.remove(ecModel, api);\n            });\n            this.group.removeAll();\n        },\n\n        dispose: function (ecModel, api) {\n            zrUtil.each(this._features, function (feature) {\n                feature.dispose && feature.dispose(ecModel, api);\n            });\n        }\n    });\n\n    function isUserFeatureName(featureName) {\n        return featureName.indexOf('my') === 0;\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/ToolboxView.js\n// module id = 128\n// module chunks = 0","/**\n * @module echarts/component/toolbox/feature/DataView\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var eventTool = require('zrender/lib/core/event');\n\n\n    var BLOCK_SPLITER = new Array(60).join('-');\n    var ITEM_SPLITER = '\\t';\n    /**\n     * Group series into two types\n     *  1. on category axis, like line, bar\n     *  2. others, like scatter, pie\n     * @param {module:echarts/model/Global} ecModel\n     * @return {Object}\n     * @inner\n     */\n    function groupSeries(ecModel) {\n        var seriesGroupByCategoryAxis = {};\n        var otherSeries = [];\n        var meta = [];\n        ecModel.eachRawSeries(function (seriesModel) {\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n                var baseAxis = coordSys.getBaseAxis();\n                if (baseAxis.type === 'category') {\n                    var key = baseAxis.dim + '_' + baseAxis.index;\n                    if (!seriesGroupByCategoryAxis[key]) {\n                        seriesGroupByCategoryAxis[key] = {\n                            categoryAxis: baseAxis,\n                            valueAxis: coordSys.getOtherAxis(baseAxis),\n                            series: []\n                        };\n                        meta.push({\n                            axisDim: baseAxis.dim,\n                            axisIndex: baseAxis.index\n                        });\n                    }\n                    seriesGroupByCategoryAxis[key].series.push(seriesModel);\n                }\n                else {\n                    otherSeries.push(seriesModel);\n                }\n            }\n            else {\n                otherSeries.push(seriesModel);\n            }\n        });\n\n        return {\n            seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n            other: otherSeries,\n            meta: meta\n        };\n    }\n\n    /**\n     * Assemble content of series on cateogory axis\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleSeriesWithCategoryAxis(series) {\n        var tables = [];\n        zrUtil.each(series, function (group, key) {\n            var categoryAxis = group.categoryAxis;\n            var valueAxis = group.valueAxis;\n            var valueAxisDim = valueAxis.dim;\n\n            var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n                return series.name;\n            }));\n            var columns = [categoryAxis.model.getCategories()];\n            zrUtil.each(group.series, function (series) {\n                columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n                    return val;\n                }));\n            });\n            // Assemble table content\n            var lines = [headers.join(ITEM_SPLITER)];\n            for (var i = 0; i < columns[0].length; i++) {\n                var items = [];\n                for (var j = 0; j < columns.length; j++) {\n                    items.push(columns[j][i]);\n                }\n                lines.push(items.join(ITEM_SPLITER));\n            }\n            tables.push(lines.join('\\n'));\n        });\n        return tables.join('\\n\\n' +  BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * Assemble content of other series\n     * @param {Array.<module:echarts/model/Series>} series\n     * @return {string}\n     * @inner\n     */\n    function assembleOtherSeries(series) {\n        return zrUtil.map(series, function (series) {\n            var data = series.getRawData();\n            var lines = [series.name];\n            var vals = [];\n            data.each(data.dimensions, function () {\n                var argLen = arguments.length;\n                var dataIndex = arguments[argLen - 1];\n                var name = data.getName(dataIndex);\n                for (var i = 0; i < argLen - 1; i++) {\n                    vals[i] = arguments[i];\n                }\n                lines.push((name ? (name + ITEM_SPLITER) : '') + vals.join(ITEM_SPLITER));\n            });\n            return lines.join('\\n');\n        }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n    }\n\n    /**\n     * @param {module:echarts/model/Global}\n     * @return {string}\n     * @inner\n     */\n    function getContentFromModel(ecModel) {\n\n        var result = groupSeries(ecModel);\n\n        return {\n            value: zrUtil.filter([\n                    assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis),\n                    assembleOtherSeries(result.other)\n                ], function (str) {\n                    return str.replace(/[\\n\\t\\s]/g, '');\n                }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n\n            meta: result.meta\n        };\n    }\n\n\n    function trim(str) {\n        return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n    }\n    /**\n     * If a block is tsv format\n     */\n    function isTSVFormat(block) {\n        // Simple method to find out if a block is tsv format\n        var firstLine = block.slice(0, block.indexOf('\\n'));\n        if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n            return true;\n        }\n    }\n\n    var itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n    /**\n     * @param {string} tsv\n     * @return {Array.<Object>}\n     */\n    function parseTSVContents(tsv) {\n        var tsvLines = tsv.split(/\\n+/g);\n        var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n\n        var categories = [];\n        var series = zrUtil.map(headers, function (header) {\n            return {\n                name: header,\n                data: []\n            };\n        });\n        for (var i = 0; i < tsvLines.length; i++) {\n            var items = trim(tsvLines[i]).split(itemSplitRegex);\n            categories.push(items.shift());\n            for (var j = 0; j < items.length; j++) {\n                series[j] && (series[j].data[i] = items[j]);\n            }\n        }\n        return {\n            series: series,\n            categories: categories\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @return {Array.<Object>}\n     * @inner\n     */\n    function parseListContents(str) {\n        var lines = str.split(/\\n+/g);\n        var seriesName = trim(lines.shift());\n\n        var data = [];\n        for (var i = 0; i < lines.length; i++) {\n            var items = trim(lines[i]).split(itemSplitRegex);\n            var name = '';\n            var value;\n            var hasName = false;\n            if (isNaN(items[0])) { // First item is name\n                hasName = true;\n                name = items[0];\n                items = items.slice(1);\n                data[i] = {\n                    name: name,\n                    value: []\n                };\n                value = data[i].value;\n            }\n            else {\n                value = data[i] = [];\n            }\n            for (var j = 0; j < items.length; j++) {\n                value.push(+items[j]);\n            }\n            if (value.length === 1) {\n                hasName ? (data[i].value = value[0]) : (data[i] = value[0]);\n            }\n        }\n\n        return {\n            name: seriesName,\n            data: data\n        };\n    }\n\n    /**\n     * @param {string} str\n     * @param {Array.<Object>} blockMetaList\n     * @return {Object}\n     * @inner\n     */\n    function parseContents(str, blockMetaList) {\n        var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n        var newOption = {\n            series: []\n        };\n        zrUtil.each(blocks, function (block, idx) {\n            if (isTSVFormat(block)) {\n                var result = parseTSVContents(block);\n                var blockMeta = blockMetaList[idx];\n                var axisKey = blockMeta.axisDim + 'Axis';\n\n                if (blockMeta) {\n                    newOption[axisKey] = newOption[axisKey] || [];\n                    newOption[axisKey][blockMeta.axisIndex] = {\n                        data: result.categories\n                    };\n                    newOption.series = newOption.series.concat(result.series);\n                }\n            }\n            else {\n                var result = parseListContents(block);\n                newOption.series.push(result);\n            }\n        });\n        return newOption;\n    }\n\n    /**\n     * @alias {module:echarts/component/toolbox/feature/DataView}\n     * @constructor\n     * @param {module:echarts/model/Model} model\n     */\n    function DataView(model) {\n\n        this._dom = null;\n\n        this.model = model;\n    }\n\n    DataView.defaultOption = {\n        show: true,\n        readOnly: false,\n        optionToContent: null,\n        contentToOption: null,\n\n        icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n        title: '数据视图',\n        lang: ['数据视图', '关闭', '刷新'],\n        backgroundColor: '#fff',\n        textColor: '#000',\n        textareaColor: '#fff',\n        textareaBorderColor: '#333',\n        buttonColor: '#c23531',\n        buttonTextColor: '#fff'\n    };\n\n    DataView.prototype.onclick = function (ecModel, api) {\n        var container = api.getDom();\n        var model = this.model;\n        if (this._dom) {\n            container.removeChild(this._dom);\n        }\n        var root = document.createElement('div');\n        root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n        root.style.backgroundColor = model.get('backgroundColor') || '#fff';\n\n        // Create elements\n        var header = document.createElement('h4');\n        var lang = model.get('lang') || [];\n        header.innerHTML = lang[0] || model.get('title');\n        header.style.cssText = 'margin: 10px 20px;';\n        header.style.color = model.get('textColor');\n\n        var viewMain = document.createElement('div');\n        var textarea = document.createElement('textarea');\n        viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n\n        var optionToContent = model.get('optionToContent');\n        var contentToOption = model.get('contentToOption');\n        var result = getContentFromModel(ecModel);\n        if (typeof optionToContent === 'function') {\n            var htmlOrDom = optionToContent(api.getOption());\n            if (typeof htmlOrDom === 'string') {\n                viewMain.innerHTML = htmlOrDom;\n            }\n            else if (zrUtil.isDom(htmlOrDom)) {\n                viewMain.appendChild(htmlOrDom);\n            }\n        }\n        else {\n            // Use default textarea\n            viewMain.appendChild(textarea);\n            textarea.readOnly = model.get('readOnly');\n            textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n            textarea.style.color = model.get('textColor');\n            textarea.style.borderColor = model.get('textareaBorderColor');\n            textarea.style.backgroundColor = model.get('textareaColor');\n            textarea.value = result.value;\n        }\n\n        var blockMetaList = result.meta;\n\n        var buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n\n        var buttonStyle = 'float:right;margin-right:20px;border:none;'\n            + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n        var closeButton = document.createElement('div');\n        var refreshButton = document.createElement('div');\n\n        buttonStyle += ';background-color:' + model.get('buttonColor');\n        buttonStyle += ';color:' + model.get('buttonTextColor');\n\n        var self = this;\n\n        function close() {\n            container.removeChild(root);\n            self._dom = null;\n        }\n        eventTool.addEventListener(closeButton, 'click', close);\n\n        eventTool.addEventListener(refreshButton, 'click', function () {\n            var newOption;\n            try {\n                if (typeof contentToOption === 'function') {\n                    newOption = contentToOption(viewMain, api.getOption());\n                }\n                else {\n                    newOption = parseContents(textarea.value, blockMetaList);\n                }\n            }\n            catch (e) {\n                close();\n                throw new Error('Data view format error ' + e);\n            }\n            if (newOption) {\n                api.dispatchAction({\n                    type: 'changeDataView',\n                    newOption: newOption\n                });\n            }\n\n            close();\n        });\n\n        closeButton.innerHTML = lang[1];\n        refreshButton.innerHTML = lang[2];\n        refreshButton.style.cssText = buttonStyle;\n        closeButton.style.cssText = buttonStyle;\n\n        !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n        buttonContainer.appendChild(closeButton);\n\n        // http://stackoverflow.com/questions/6637341/use-tab-to-indent-in-textarea\n        eventTool.addEventListener(textarea, 'keydown', function (e) {\n            if ((e.keyCode || e.which) === 9) {\n                // get caret position/selection\n                var val = this.value;\n                var start = this.selectionStart;\n                var end = this.selectionEnd;\n\n                // set textarea value to: text before caret + tab + text after caret\n                this.value = val.substring(0, start) + ITEM_SPLITER + val.substring(end);\n\n                // put caret at right position again\n                this.selectionStart = this.selectionEnd = start + 1;\n\n                // prevent the focus lose\n                eventTool.stop(e);\n            }\n        });\n\n        root.appendChild(header);\n        root.appendChild(viewMain);\n        root.appendChild(buttonContainer);\n\n        viewMain.style.height = (container.clientHeight - 80) + 'px';\n\n        container.appendChild(root);\n        this._dom = root;\n    };\n\n    DataView.prototype.remove = function (ecModel, api) {\n        this._dom && api.getDom().removeChild(this._dom);\n    };\n\n    DataView.prototype.dispose = function (ecModel, api) {\n        this.remove(ecModel, api);\n    };\n\n    /**\n     * @inner\n     */\n    function tryMergeDataOption(newData, originalData) {\n        return zrUtil.map(newData, function (newVal, idx) {\n            var original = originalData && originalData[idx];\n            if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n                if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n                    newVal = newVal.value;\n                }\n                // Original data has option\n                return zrUtil.defaults({\n                    value: newVal\n                }, original);\n            }\n            else {\n                return newVal;\n            }\n        });\n    }\n\n    require('../featureManager').register('dataView', DataView);\n\n    require('../../../echarts').registerAction({\n        type: 'changeDataView',\n        event: 'dataViewChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        var newSeriesOptList = [];\n        zrUtil.each(payload.newOption.series, function (seriesOpt) {\n            var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n            if (!seriesModel) {\n                // New created series\n                // Geuss the series type\n                newSeriesOptList.push(zrUtil.extend({\n                    // Default is scatter\n                    type: 'scatter'\n                }, seriesOpt));\n            }\n            else {\n                var originalData = seriesModel.get('data');\n                newSeriesOptList.push({\n                    name: seriesOpt.name,\n                    data: tryMergeDataOption(seriesOpt.data, originalData)\n                });\n            }\n        });\n\n        ecModel.mergeOption(zrUtil.defaults({\n            series: newSeriesOptList\n        }, payload.newOption));\n    });\n\n    module.exports = DataView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/DataView.js\n// module id = 129\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BrushController = require('../../helper/BrushController');\n    var BrushTargetManager = require('../../helper/BrushTargetManager');\n    var history = require('../../dataZoom/history');\n\n    var each = zrUtil.each;\n\n    // Use dataZoomSelect\n    require('../../dataZoomSelect');\n\n    // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n    var DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\n    function DataZoom(model, ecModel, api) {\n\n        /**\n         * @private\n         * @type {module:echarts/component/helper/BrushController}\n         */\n        (this._brushController = new BrushController(api.getZr()))\n            .on('brush', zrUtil.bind(this._onBrush, this))\n            .mount();\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._isZoomActive;\n    }\n\n    DataZoom.defaultOption = {\n        show: true,\n        // Icon group\n        icon: {\n            zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n            back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n        },\n        title: {\n            zoom: '区域缩放',\n            back: '区域缩放还原'\n        }\n    };\n\n    var proto = DataZoom.prototype;\n\n    proto.render = function (featureModel, ecModel, api, payload) {\n        this.model = featureModel;\n        this.ecModel = ecModel;\n        this.api = api;\n\n        updateZoomBtnStatus(featureModel, ecModel, this, payload);\n        updateBackBtnStatus(featureModel, ecModel);\n    };\n\n    proto.onclick = function (ecModel, api, type) {\n        handlers[type].call(this);\n    };\n\n    proto.remove = function (ecModel, api) {\n        this._brushController.unmount();\n    };\n\n    proto.dispose = function (ecModel, api) {\n        this._brushController.dispose();\n    };\n\n    /**\n     * @private\n     */\n    var handlers = {\n\n        zoom: function () {\n            var nextActive = !this._isZoomActive;\n\n            this.api.dispatchAction({\n                type: 'takeGlobalCursor',\n                key: 'dataZoomSelect',\n                dataZoomSelectActive: nextActive\n            });\n        },\n\n        back: function () {\n            this._dispatchZoomAction(history.pop(this.ecModel));\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._onBrush = function (areas, opt) {\n        if (!opt.isEnd || !areas.length) {\n            return;\n        }\n        var snapshot = {};\n        var ecModel = this.ecModel;\n\n        this._brushController.updateCovers([]); // remove cover\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(this.model.option), ecModel, {include: ['grid']}\n        );\n        brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n            if (coordSys.type !== 'cartesian2d') {\n                return;\n            }\n\n            var brushType = area.brushType;\n            if (brushType === 'rect') {\n                setBatch('x', coordSys, coordRange[0]);\n                setBatch('y', coordSys, coordRange[1]);\n            }\n            else {\n                setBatch(({lineX: 'x', lineY: 'y'})[brushType], coordSys, coordRange);\n            }\n        });\n\n        history.push(ecModel, snapshot);\n\n        this._dispatchZoomAction(snapshot);\n\n        function setBatch(dimName, coordSys, minMax) {\n            var dataZoomModel = findDataZoom(dimName, coordSys.getAxis(dimName).model, ecModel);\n            dataZoomModel && (snapshot[dataZoomModel.id] = {\n                dataZoomId: dataZoomModel.id,\n                startValue: minMax[0],\n                endValue: minMax[1]\n            });\n        }\n\n        function findDataZoom(dimName, axisModel, ecModel) {\n            var found;\n            ecModel.eachComponent({mainType: 'dataZoom', subType: 'select'}, function (dzModel) {\n                var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n                has && (found = dzModel);\n            });\n            return found;\n        }\n    };\n\n    /**\n     * @private\n     */\n    proto._dispatchZoomAction = function (snapshot) {\n        var batch = [];\n\n        // Convert from hash map to array.\n        each(snapshot, function (batchItem, dataZoomId) {\n            batch.push(zrUtil.clone(batchItem));\n        });\n\n        batch.length && this.api.dispatchAction({\n            type: 'dataZoom',\n            from: this.uid,\n            batch: batch\n        });\n    };\n\n    function retrieveAxisSetting(option) {\n        var setting = {};\n        // Compatible with previous setting: null => all axis, false => no axis.\n        zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n            setting[name] = option[name];\n            setting[name] == null && (setting[name] = 'all');\n            (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n        });\n        return setting;\n    }\n\n    function updateBackBtnStatus(featureModel, ecModel) {\n        featureModel.setIconStatus(\n            'back',\n            history.count(ecModel) > 1 ? 'emphasis' : 'normal'\n        );\n    }\n\n    function updateZoomBtnStatus(featureModel, ecModel, view, payload) {\n        var zoomActive = view._isZoomActive;\n\n        if (payload && payload.type === 'takeGlobalCursor') {\n            zoomActive = payload.key === 'dataZoomSelect'\n                ? payload.dataZoomSelectActive : false;\n        }\n\n        view._isZoomActive = zoomActive;\n\n        featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n\n        var brushTargetManager = new BrushTargetManager(\n            retrieveAxisSetting(featureModel.option), ecModel, {include: ['grid']}\n        );\n\n        view._brushController\n            .setPanels(brushTargetManager.makePanelOpts(function (targetInfo) {\n                return (targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared)\n                    ? 'lineX'\n                    : (!targetInfo.xAxisDeclared && targetInfo.yAxisDeclared)\n                    ? 'lineY'\n                    : 'rect';\n            }))\n            .enableBrush(\n                zoomActive\n                ? {\n                    brushType: 'auto',\n                    brushStyle: {\n                        // FIXME user customized?\n                        lineWidth: 0,\n                        fill: 'rgba(0,0,0,0.2)'\n                    }\n                }\n                : false\n            );\n    }\n\n\n    require('../featureManager').register('dataZoom', DataZoom);\n\n\n    // Create special dataZoom option for select\n    require('../../../echarts').registerPreprocessor(function (option) {\n        if (!option) {\n            return;\n        }\n\n        var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n        if (!zrUtil.isArray(dataZoomOpts)) {\n            option.dataZoom = dataZoomOpts = [dataZoomOpts];\n        }\n\n        var toolboxOpt = option.toolbox;\n        if (toolboxOpt) {\n            // Assume there is only one toolbox\n            if (zrUtil.isArray(toolboxOpt)) {\n                toolboxOpt = toolboxOpt[0];\n            }\n\n            if (toolboxOpt && toolboxOpt.feature) {\n                var dataZoomOpt = toolboxOpt.feature.dataZoom;\n                addForAxis('xAxis', dataZoomOpt);\n                addForAxis('yAxis', dataZoomOpt);\n            }\n        }\n\n        function addForAxis(axisName, dataZoomOpt) {\n            if (!dataZoomOpt) {\n                return;\n            }\n\n            // Try not to modify model, because it is not merged yet.\n            var axisIndicesName = axisName + 'Index';\n            var givenAxisIndices = dataZoomOpt[axisIndicesName];\n            if (givenAxisIndices != null\n                && givenAxisIndices != 'all'\n                && !zrUtil.isArray(givenAxisIndices)\n            ) {\n                givenAxisIndices = (givenAxisIndices === false || givenAxisIndices === 'none') ? [] : [givenAxisIndices];\n            }\n\n            forEachComponent(axisName, function (axisOpt, axisIndex) {\n                if (givenAxisIndices != null\n                    && givenAxisIndices != 'all'\n                    && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1\n                ) {\n                    return;\n                }\n                var newOpt = {\n                    type: 'select',\n                    $fromToolbox: true,\n                    // Id for merge mapping.\n                    id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n                };\n                // FIXME\n                // Only support one axis now.\n                newOpt[axisIndicesName] = axisIndex;\n                dataZoomOpts.push(newOpt);\n            });\n        }\n\n        function forEachComponent(mainType, cb) {\n            var opts = option[mainType];\n            if (!zrUtil.isArray(opts)) {\n                opts = opts ? [opts] : [];\n            }\n            each(opts, cb);\n        }\n    });\n\n    module.exports = DataZoom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/DataZoom.js\n// module id = 130\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function MagicType(model) {\n        this.model = model;\n    }\n\n    MagicType.defaultOption = {\n        show: true,\n        type: [],\n        // Icon group\n        icon: {\n            line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n            bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n            stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z', // jshint ignore:line\n            tiled: 'M2.3,2.2h22.8V25H2.3V2.2z M35,2.2h22.8V25H35V2.2zM2.3,35h22.8v22.8H2.3V35z M35,35h22.8v22.8H35V35z'\n        },\n        title: {\n            line: '切换为折线图',\n            bar: '切换为柱状图',\n            stack: '切换为堆叠',\n            tiled: '切换为平铺'\n        },\n        option: {},\n        seriesIndex: {}\n    };\n\n    var proto = MagicType.prototype;\n\n    proto.getIcons = function () {\n        var model = this.model;\n        var availableIcons = model.get('icon');\n        var icons = {};\n        zrUtil.each(model.get('type'), function (type) {\n            if (availableIcons[type]) {\n                icons[type] = availableIcons[type];\n            }\n        });\n        return icons;\n    };\n\n    var seriesOptGenreator = {\n        'line': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'line',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.line') || {}, true);\n            }\n        },\n        'bar': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    type: 'bar',\n                    // Preserve data related option\n                    data: seriesModel.get('data'),\n                    stack: seriesModel.get('stack'),\n                    markPoint: seriesModel.get('markPoint'),\n                    markLine: seriesModel.get('markLine')\n                }, model.get('option.bar') || {}, true);\n            }\n        },\n        'stack': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: '__ec_magicType_stack__'\n                }, model.get('option.stack') || {}, true);\n            }\n        },\n        'tiled': function (seriesType, seriesId, seriesModel, model) {\n            if (seriesType === 'line' || seriesType === 'bar') {\n                return zrUtil.merge({\n                    id: seriesId,\n                    stack: ''\n                }, model.get('option.tiled') || {}, true);\n            }\n        }\n    };\n\n    var radioTypes = [\n        ['line', 'bar'],\n        ['stack', 'tiled']\n    ];\n\n    proto.onclick = function (ecModel, api, type) {\n        var model = this.model;\n        var seriesIndex = model.get('seriesIndex.' + type);\n        // Not supported magicType\n        if (!seriesOptGenreator[type]) {\n            return;\n        }\n        var newOption = {\n            series: []\n        };\n        var generateNewSeriesTypes = function (seriesModel) {\n            var seriesType = seriesModel.subType;\n            var seriesId = seriesModel.id;\n            var newSeriesOpt = seriesOptGenreator[type](\n                seriesType, seriesId, seriesModel, model\n            );\n            if (newSeriesOpt) {\n                // PENDING If merge original option?\n                zrUtil.defaults(newSeriesOpt, seriesModel.option);\n                newOption.series.push(newSeriesOpt);\n            }\n            // Modify boundaryGap\n            var coordSys = seriesModel.coordinateSystem;\n            if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n                var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n                if (categoryAxis) {\n                    var axisDim = categoryAxis.dim;\n                    var axisType = axisDim + 'Axis';\n                    var axisModel = ecModel.queryComponents({\n                        mainType: axisType,\n                        index: seriesModel.get(name + 'Index'),\n                        id: seriesModel.get(name + 'Id')\n                    })[0];\n                    var axisIndex = axisModel.componentIndex;\n\n                    newOption[axisType] = newOption[axisType] || [];\n                    for (var i = 0; i <= axisIndex; i++) {\n                        newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n                    }\n                    newOption[axisType][axisIndex].boundaryGap = type === 'bar' ? true : false;\n                }\n            }\n        };\n\n        zrUtil.each(radioTypes, function (radio) {\n            if (zrUtil.indexOf(radio, type) >= 0) {\n                zrUtil.each(radio, function (item) {\n                    model.setIconStatus(item, 'normal');\n                });\n            }\n        });\n\n        model.setIconStatus(type, 'emphasis');\n\n        ecModel.eachComponent(\n            {\n                mainType: 'series',\n                query: seriesIndex == null ? null : {\n                    seriesIndex: seriesIndex\n                }\n            }, generateNewSeriesTypes\n        );\n        api.dispatchAction({\n            type: 'changeMagicType',\n            currentType: type,\n            newOption: newOption\n        });\n    };\n\n    var echarts = require('../../../echarts');\n    echarts.registerAction({\n        type: 'changeMagicType',\n        event: 'magicTypeChanged',\n        update: 'prepareAndUpdate'\n    }, function (payload, ecModel) {\n        ecModel.mergeOption(payload.newOption);\n    });\n\n    require('../featureManager').register('magicType', MagicType);\n\n    module.exports = MagicType;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/MagicType.js\n// module id = 131\n// module chunks = 0","'use strict';\n\n\n    var history = require('../../dataZoom/history');\n\n    function Restore(model) {\n        this.model = model;\n    }\n\n    Restore.defaultOption = {\n        show: true,\n        icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n        title: '还原'\n    };\n\n    var proto = Restore.prototype;\n\n    proto.onclick = function (ecModel, api, type) {\n        history.clear(ecModel);\n\n        api.dispatchAction({\n            type: 'restore',\n            from: this.uid\n        });\n    };\n\n\n    require('../featureManager').register('restore', Restore);\n\n\n    require('../../../echarts').registerAction(\n        {type: 'restore', event: 'restore', update: 'prepareAndUpdate'},\n        function (payload, ecModel) {\n            ecModel.resetOption('recreate');\n        }\n    );\n\n    module.exports = Restore;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/Restore.js\n// module id = 132\n// module chunks = 0","\n\n    var env = require('zrender/lib/core/env');\n\n    function SaveAsImage (model) {\n        this.model = model;\n    }\n\n    SaveAsImage.defaultOption = {\n        show: true,\n        icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n        title: '保存为图片',\n        type: 'png',\n        // Default use option.backgroundColor\n        // backgroundColor: '#fff',\n        name: '',\n        excludeComponents: ['toolbox'],\n        pixelRatio: 1,\n        lang: ['右键另存为图片']\n    };\n\n    SaveAsImage.prototype.unusable = !env.canvasSupported;\n\n    var proto = SaveAsImage.prototype;\n\n    proto.onclick = function (ecModel, api) {\n        var model = this.model;\n        var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n        var $a = document.createElement('a');\n        var type = model.get('type', true) || 'png';\n        $a.download = title + '.' + type;\n        $a.target = '_blank';\n        var url = api.getConnectedDataURL({\n            type: type,\n            backgroundColor: model.get('backgroundColor', true)\n                || ecModel.get('backgroundColor') || '#fff',\n            excludeComponents: model.get('excludeComponents'),\n            pixelRatio: model.get('pixelRatio')\n        });\n        $a.href = url;\n        // Chrome and Firefox\n        if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n            var evt = new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false\n            });\n            $a.dispatchEvent(evt);\n        }\n        // IE\n        else {\n            var lang = model.get('lang');\n            var html = ''\n                + '<body style=\"margin:0;\">'\n                + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + ((lang && lang[0]) || '') + '\" />'\n                + '</body>';\n            var tab = window.open();\n            tab.document.write(html);\n        }\n    };\n\n    require('../featureManager').register(\n        'saveAsImage', SaveAsImage\n    );\n\n    module.exports = SaveAsImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/toolbox/feature/SaveAsImage.js\n// module id = 133\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./axisPointer');\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'tooltip:manuallyShowTip'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'tooltip:manuallyHideTip'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 134\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition. Do not animate when transitionDuration is 0.\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = this._zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self._enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self._enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self._enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            // FIXME\n            // Move this logic to ec main?\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            this.el.innerHTML = content == null ? '' : content;\n        },\n\n        setEnterable: function (enterable) {\n            this._enterable = enterable;\n        },\n\n        getSize: function () {\n            var el = this.el;\n            return [el.clientWidth, el.clientHeight];\n        },\n\n        moveTo: function (x, y) {\n            // xy should be based on canvas root. But tooltipContent is\n            // the sibling of canvas root. So padding of ec container\n            // should be considered here.\n            var zr = this._zr;\n            var viewportRoot;\n            if (zr && zr.painter && (viewportRoot = zr.painter.getViewportRoot())) {\n                x += viewportRoot.offsetLeft || 0;\n                y += viewportRoot.offsetTop || 0;\n            }\n\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this._enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 135\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        dependencies: ['axisPointer'],\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 'trigger' only works on coordinate system.\n            // 'item' | 'axis' | 'none'\n            trigger: 'item',\n\n            // 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove|click',\n\n            alwaysShowContent: false,\n\n            displayMode: 'single', // 'single' | 'multipleByCoordSys'\n\n            // 位置 {Array} | {Function}\n            // position: null\n            // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n            // align: null,\n            // verticalAlign: null,\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: 'auto',\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                crossStyle: {\n                    color: '#999',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                }\n\n                // lineStyle and shadowStyle should not be specified here,\n                // otherwise it will always override those styles on option.axisPointer.\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 136\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var findPointFromSeries = require('../axisPointer/findPointFromSeries');\n    var layoutUtil = require('../../util/layout');\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n    var globalListener = require('../axisPointer/globalListener');\n    var axisHelper = require('../../coord/axisHelper');\n    var axisPointerViewHelper = require('../axisPointer/viewHelper');\n\n    var bind = zrUtil.bind;\n    var each = zrUtil.each;\n    var parsePercent = numberUtil.parsePercent;\n\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @private\n             * @type {Array.<Array.<Object>>}\n             */\n            this._lastDataByCoordSys;\n\n            /**\n             * @private\n             * @type {boolean}\n             */\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n            this._initGlobalListener();\n\n            this._keepShow();\n        },\n\n        _initGlobalListener: function () {\n            var tooltipModel = this._tooltipModel;\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            globalListener.register(\n                'itemTooltip',\n                this._api,\n                bind(function (currTrigger, e, dispatchAction) {\n                    // If 'none', it is not controlled by mouse totally.\n                    if (triggerOn !== 'none') {\n                        if (triggerOn.indexOf(currTrigger) >= 0) {\n                            this._tryShow(e, dispatchAction);\n                        }\n                        else if (currTrigger === 'leave') {\n                            this._hide(dispatchAction);\n                        }\n                    }\n                }, this)\n            );\n        },\n\n        _keepShow: function () {\n            var tooltipModel = this._tooltipModel;\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self.manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && tooltipModel.get('triggerOn') !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self.manuallyShowTip(tooltipModel, ecModel, api, {\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        manuallyShowTip: function (tooltipModel, ecModel, api, payload) {\n            if (payload.from === this.uid || env.node) {\n                return;\n            }\n\n            var dispatchAction = makeDispatchAction(payload, api);\n\n            // Reset ticket\n            this._ticket = '';\n\n            // When triggered from axisPointer.\n            var dataByCoordSys = payload.dataByCoordSys;\n            if (dataByCoordSys) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    event: {},\n                    dataByCoordSys: payload.dataByCoordSys,\n                    tooltipOption: payload.tooltipOption\n                }, dispatchAction);\n            }\n            else if (payload.seriesIndex != null) {\n\n                if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n                    return;\n                }\n\n                var pointInfo = findPointFromSeries(payload, ecModel);\n                var cx = pointInfo.point[0];\n                var cy = pointInfo.point[1];\n                if (cx != null && cy != null) {\n                    this._tryShow({\n                        offsetX: cx,\n                        offsetY: cy,\n                        position: payload.position,\n                        target: pointInfo.el,\n                        event: {}\n                    }, dispatchAction);\n                }\n            }\n            else if (payload.x != null && payload.y != null) {\n                this._tryShow({\n                    offsetX: payload.x,\n                    offsetY: payload.y,\n                    position: payload.position,\n                    target: api.getZr().handler.findHover(payload.x, payload.y),\n                    event: {}\n                }, dispatchAction);\n            }\n        },\n\n        manuallyHideTip: function (tooltipModel, ecModel, api, payload) {\n            var tooltipContent = this._tooltipContent;\n\n            if (!this._alwaysShowContent) {\n                tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._lastX = this._lastY = null;\n\n            if (payload.from !== this.uid) {\n                this._hide(makeDispatchAction(payload, api));\n            }\n        },\n\n        // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n        // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n        // and tooltip.\n        _manuallyAxisShowTip: function (tooltipModel, ecModel, api, payload) {\n            var seriesIndex = payload.seriesIndex;\n            var dataIndex = payload.dataIndex;\n            var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n            if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n                return;\n            }\n\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            if (!seriesModel) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                seriesModel,\n                (seriesModel.coordinateSystem || {}).model,\n                tooltipModel\n            ]);\n\n            if (tooltipModel.get('trigger') !== 'axis') {\n                return;\n            }\n\n            api.dispatchAction({\n                type: 'updateAxisPointer',\n                seriesIndex: seriesIndex,\n                dataIndex: dataIndex\n            });\n\n            return true;\n        },\n\n        _tryShow: function (e, dispatchAction) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            var dataByCoordSys = e.dataByCoordSys;\n            if (dataByCoordSys && dataByCoordSys.length) {\n                this._showAxisTooltip(dataByCoordSys, e);\n            }\n            // Always show item tooltip if mouse is on the element with dataIndex\n            else if (el && el.dataIndex != null) {\n                this._lastDataByCoordSys = null;\n                this._showSeriesItemTooltip(e, el, dispatchAction);\n            }\n            // Tooltip provided directly. Like legend.\n            else if (el && el.tooltip) {\n                this._lastDataByCoordSys = null;\n                this._showComponentItemTooltip(e, el, dispatchAction);\n            }\n            else {\n                this._lastDataByCoordSys = null;\n                this._hide(dispatchAction);\n            }\n        },\n\n        _showOrMove: function (tooltipModel, cb) {\n            // showDelay is used in this case: tooltip.enterable is set\n            // as true. User intent to move mouse into tooltip and click\n            // something. `showDelay` makes it easyer to enter the content\n            // but tooltip do not move immediately.\n            var delay = tooltipModel.get('showDelay');\n            cb = zrUtil.bind(cb, this);\n            clearTimeout(this._showTimout);\n            delay > 0\n                ? (this._showTimout = setTimeout(cb, delay))\n                : cb();\n        },\n\n        _showAxisTooltip: function (dataByCoordSys, e) {\n            var ecModel = this._ecModel;\n            var globalTooltipModel = this._tooltipModel;\n            var point = [e.offsetX, e.offsetY];\n            var singleDefaultHTML = [];\n            var singleParamsList = [];\n            var singleTooltipModel = buildTooltipModel([\n                e.tooltipOption,\n                globalTooltipModel\n            ]);\n\n            each(dataByCoordSys, function (itemCoordSys) {\n                // var coordParamList = [];\n                // var coordDefaultHTML = [];\n                // var coordTooltipModel = buildTooltipModel([\n                //     e.tooltipOption,\n                //     itemCoordSys.tooltipOption,\n                //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n                //     globalTooltipModel\n                // ]);\n                // var displayMode = coordTooltipModel.get('displayMode');\n                // var paramsList = displayMode === 'single' ? singleParamsList : [];\n\n                each(itemCoordSys.dataByAxis, function (item) {\n                    var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n                    var axisValue = item.value;\n                    var seriesDefaultHTML = [];\n\n                    if (!axisModel || axisValue == null) {\n                        return;\n                    }\n\n                    var valueLabel = axisPointerViewHelper.getValueLabel(\n                        axisValue, axisModel.axis, ecModel,\n                        item.seriesDataIndices,\n                        item.valueLabelOpt\n                    );\n\n                    zrUtil.each(item.seriesDataIndices, function (idxItem) {\n                        var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n                        var dataIndex = idxItem.dataIndexInside;\n                        var dataParams = series && series.getDataParams(dataIndex);\n                        dataParams.axisDim = item.axisDim;\n                        dataParams.axisIndex = item.axisIndex;\n                        dataParams.axisType = item.axisType;\n                        dataParams.axisId = item.axisId;\n                        dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n                        dataParams.axisValueLabel = valueLabel;\n\n                        if (dataParams) {\n                            singleParamsList.push(dataParams);\n                            seriesDefaultHTML.push(series.formatTooltip(dataIndex, true));\n                        }\n                    });\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = valueLabel;\n                    singleDefaultHTML.push(\n                        (firstLine ? formatUtil.encodeHTML(firstLine) + '<br />' : '')\n                        + seriesDefaultHTML.join('<br />')\n                    );\n                });\n            }, this);\n\n            // In most case, the second axis is shown upper than the first one.\n            singleDefaultHTML.reverse();\n            singleDefaultHTML = singleDefaultHTML.join('<br /><br />');\n\n            var positionExpr = e.position;\n            this._showOrMove(singleTooltipModel, function () {\n                if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n                    this._updatePosition(\n                        singleTooltipModel,\n                        positionExpr,\n                        point[0], point[1],\n                        this._tooltipContent,\n                        singleParamsList\n                    );\n                }\n                else {\n                    this._showTooltipContent(\n                        singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(),\n                        point[0], point[1], positionExpr\n                    );\n                }\n            });\n\n            // Do not trigger events here, because this branch only be entered\n            // from dispatchAction.\n        },\n\n        _showSeriesItemTooltip: function (e, el, dispatchAction) {\n            var ecModel = this._ecModel;\n            // Use dataModel in element if possible\n            // Used when mouseover on a element like markPoint or edge\n            // In which case, the data is not main data in series.\n            var seriesIndex = el.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n            // For example, graph link.\n            var dataModel = el.dataModel || seriesModel;\n            var dataIndex = el.dataIndex;\n            var dataType = el.dataType;\n            var data = dataModel.getData();\n\n            var tooltipModel = buildTooltipModel([\n                data.getItemModel(dataIndex),\n                dataModel,\n                seriesModel && (seriesModel.coordinateSystem || {}).model,\n                this._tooltipModel\n            ]);\n\n            var tooltipTrigger = tooltipModel.get('trigger');\n            if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n                return;\n            }\n\n            var params = dataModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = dataModel.formatTooltip(dataIndex, false, dataType);\n            var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n            this._showOrMove(tooltipModel, function () {\n                this._showTooltipContent(\n                    tooltipModel, defaultHtml, params, asyncTicket,\n                    e.offsetX, e.offsetY, e.position, e.target\n                );\n            });\n\n            // FIXME\n            // duplicated showtip if manuallyShowTip is called from dispatchAction.\n            dispatchAction({\n                type: 'showTip',\n                dataIndexInside: dataIndex,\n                dataIndex: data.getRawIndex(dataIndex),\n                seriesIndex: seriesIndex,\n                from: this.uid\n            });\n        },\n\n        _showComponentItemTooltip: function (e, el, dispatchAction) {\n            var tooltipOpt = el.tooltip;\n            if (typeof tooltipOpt === 'string') {\n                var content = tooltipOpt;\n                tooltipOpt = {\n                    content: content,\n                    // Fixed formatter\n                    formatter: content\n                };\n            }\n            var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n            var defaultHtml = subTooltipModel.get('content');\n            var asyncTicket = Math.random();\n\n            // Do not check whether `trigger` is 'none' here, because `trigger`\n            // only works on cooridinate system. In fact, we have not found case\n            // that requires setting `trigger` nothing on component yet.\n\n            this._showOrMove(subTooltipModel, function () {\n                this._showTooltipContent(\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el\n                );\n            });\n\n            // If not dispatch showTip, tip may be hide triggered by axis.\n            dispatchAction({\n                type: 'showTip',\n                from: this.uid\n            });\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n                return;\n            }\n\n            var tooltipContent = this._tooltipContent;\n\n            var formatter = tooltipModel.get('formatter');\n            positionExpr = positionExpr || tooltipModel.get('position');\n            var html = defaultHtml;\n\n            if (formatter && typeof formatter === 'string') {\n                html = formatUtil.formatTpl(formatter, params, true);\n            }\n            else if (typeof formatter === 'function') {\n                var callback = bind(function (cbTicket, html) {\n                    if (cbTicket === this._ticket) {\n                        tooltipContent.setContent(html);\n                        this._updatePosition(\n                            tooltipModel, positionExpr, x, y, tooltipContent, params, el\n                        );\n                    }\n                }, this);\n                this._ticket = asyncTicket;\n                html = formatter(params, asyncTicket, callback);\n            }\n\n            tooltipContent.setContent(html);\n            tooltipContent.show(tooltipModel);\n\n            this._updatePosition(\n                tooltipModel, positionExpr, x, y, tooltipContent, params, el\n            );\n        },\n\n        /**\n         * @param  {string|Function|Array.<number>} positionExpr\n         * @param  {number} x Mouse x\n         * @param  {number} y Mouse y\n         * @param  {boolean} confine Whether confine tooltip content in view rect.\n         * @param  {Object|<Array.<Object>} params\n         * @param  {module:zrender/Element} el target element\n         * @param  {module:echarts/ExtensionAPI} api\n         * @return {Array.<number>}\n         */\n        _updatePosition: function (tooltipModel, positionExpr, x, y, content, params, el) {\n            var viewWidth = this._api.getWidth();\n            var viewHeight = this._api.getHeight();\n            positionExpr = positionExpr || tooltipModel.get('position');\n\n            var contentSize = content.getSize();\n            var align = tooltipModel.get('align');\n            var vAlign = tooltipModel.get('verticalAlign');\n            var rect = el && el.getBoundingRect().clone();\n            el && rect.applyTransform(el.transform);\n\n            if (typeof positionExpr === 'function') {\n                // Callback of position can be an array or a string specify the position\n                positionExpr = positionExpr([x, y], params, content.el, rect, {\n                    viewSize: [viewWidth, viewHeight],\n                    contentSize: contentSize.slice()\n                });\n            }\n\n            if (zrUtil.isArray(positionExpr)) {\n                x = parsePercent(positionExpr[0], viewWidth);\n                y = parsePercent(positionExpr[1], viewHeight);\n            }\n            else if (zrUtil.isObject(positionExpr)) {\n                positionExpr.width = contentSize[0];\n                positionExpr.height = contentSize[1];\n                var layoutRect = layoutUtil.getLayoutRect(\n                    positionExpr, {width: viewWidth, height: viewHeight}\n                );\n                x = layoutRect.x;\n                y = layoutRect.y;\n                align = null;\n                // When positionExpr is left/top/right/bottom,\n                // align and verticalAlign will not work.\n                vAlign = null;\n            }\n            // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n            else if (typeof positionExpr === 'string' && el) {\n                var pos = calcTooltipPosition(\n                    positionExpr, rect, contentSize\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n            else {\n                var pos = refixTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight, align ? 0 : 20, vAlign ? 0 : 20\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n            vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n            if (tooltipModel.get('confine')) {\n                var pos = confineTooltipPosition(\n                    x, y, content.el, viewWidth, viewHeight\n                );\n                x = pos[0];\n                y = pos[1];\n            }\n\n            content.moveTo(x, y);\n        },\n\n        // FIXME\n        // Should we remove this but leave this to user?\n        _updateContentNotChangedOnAxis: function (dataByCoordSys) {\n            var lastCoordSys = this._lastDataByCoordSys;\n            var contentNotChanged = !!lastCoordSys\n                && lastCoordSys.length === dataByCoordSys.length;\n\n            each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n                var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n                var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n                var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n                contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n\n                each(lastDataByAxis, function (lastItem, indexAxis) {\n                    var thisItem = thisDataByAxis[indexAxis] || {};\n                    var lastIndices = lastItem.seriesDataIndices || [];\n                    var newIndices = thisItem.seriesDataIndices || [];\n\n                    contentNotChanged &=\n                        lastItem.value === thisItem.value\n                        && lastItem.axisType === thisItem.axisType\n                        && lastItem.axisId === thisItem.axisId\n                        && lastIndices.length === newIndices.length;\n\n                    each(lastIndices, function (lastIdxItem, j) {\n                        var newIdxItem = newIndices[j];\n                        contentNotChanged &=\n                            lastIdxItem.seriesIndex === newIdxItem.seriesIndex\n                            && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n                    });\n                });\n            });\n\n            this._lastDataByCoordSys = dataByCoordSys;\n\n            return !!contentNotChanged;\n        },\n\n        _hide: function (dispatchAction) {\n            // Do not directly hideLater here, because this behavior may be prevented\n            // in dispatchAction when showTip is dispatched.\n\n            // FIXME\n            // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n            this._lastDataByCoordSys = null;\n            dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            this._tooltipContent.hide();\n            globalListener.unregister('itemTooltip', api);\n        }\n    });\n\n\n    /**\n     * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n     * From top to bottom. (the last one should be globalTooltipModel);\n     */\n    function buildTooltipModel(modelCascade) {\n        var resultModel = modelCascade.pop();\n        while (modelCascade.length) {\n            var tooltipOpt = modelCascade.pop();\n            if (tooltipOpt) {\n                if (tooltipOpt instanceof Model) {\n                    tooltipOpt = tooltipOpt.get('tooltip', true);\n                }\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                if (typeof tooltipOpt === 'string') {\n                    tooltipOpt = {formatter: tooltipOpt};\n                }\n                resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n            }\n        }\n        return resultModel;\n    }\n\n    function makeDispatchAction(payload, api) {\n        return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight, gapH, gapV) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        if (x + width + gapH > viewWidth) {\n            x -= width + gapH;\n        }\n        else {\n            x += gapH;\n        }\n        if (y + height + gapV > viewHeight) {\n            y -= height + gapV;\n        }\n        else {\n            y += gapV;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, contentSize) {\n        var domWidth = contentSize[0];\n        var domHeight = contentSize[1];\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    function isCenterAlign(align) {\n        return align === 'center' || align === 'middle';\n    }\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 137\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n\n        /**\n         * Convert pixel point to data in axis\n         * @param {Array.<number>} point\n         * @param  {boolean} clamp\n         * @return {number} data\n         */\n        pointToData: function (point, clamp) {\n            // Should be implemented in derived class if necessary.\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 138\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n\n    module.exports = {\n\n        /**\n         * Format labels\n         * @return {Array.<string>}\n         */\n        getFormattedLabels: function () {\n            return axisHelper.getFormattedLabels(\n                this.axis,\n                this.get('axisLabel.formatter')\n            );\n        },\n\n        /**\n         * Get categories\n         */\n        getCategories: function () {\n            return this.get('type') === 'category'\n                && zrUtil.map(this.get('data'), getName);\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n         */\n        getMin: function (origin) {\n            var option = this.option;\n            var min = (!origin && option.rangeStart != null)\n                ? option.rangeStart : option.min;\n\n            if (this.axis && min != null && min !== 'dataMin' && !zrUtil.eqNaN(min)) {\n                min = this.axis.scale.parse(min);\n            }\n            return min;\n        },\n\n        /**\n         * @param {boolean} origin\n         * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n         */\n        getMax: function (origin) {\n            var option = this.option;\n            var max = (!origin && option.rangeEnd != null)\n                ? option.rangeEnd : option.max;\n\n            if (this.axis && max != null && max !== 'dataMax' && !zrUtil.eqNaN(max)) {\n                max = this.axis.scale.parse(max);\n            }\n            return max;\n        },\n\n        /**\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * Should be implemented by each axis model if necessary.\n         * @return {module:echarts/model/Component} coordinate system model\n         */\n        getCoordSysModel: zrUtil.noop,\n\n        /**\n         * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n         * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * Reset range\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 139\n// module chunks = 0","\n\n    var createListFromArray = require('./chart/helper/createListFromArray');\n    var symbolUtil = require('./util/symbol');\n    var axisHelper = require('./coord/axisHelper');\n    var axisModelCommonMixin = require('./coord/axisModelCommonMixin');\n    var Model = require('./model/Model');\n    var util = require('zrender/lib/core/util');\n\n    module.exports = {\n        /**\n         * Create a muti dimension List structure from seriesModel.\n         * @param  {module:echarts/model/Model} seriesModel\n         * @return {module:echarts/data/List} list\n         */\n        createList: function (seriesModel) {\n            var data = seriesModel.get('data');\n            return createListFromArray(data, seriesModel, seriesModel.ecModel);\n        },\n\n        /**\n         * Complete the dimensions array guessed from the data structure.\n         * @param  {Array.<string>} dimensions Necessary dimensions, like ['x', 'y']\n         * @param  {Array} data Data list. [[1, 2, 3], [2, 3, 4]]\n         * @param  {Object} [opt]\n         * @param  {Array.<string>} [opt.defaultNames] Default names to fill not necessary dimensions, like ['value']\n         * @param  {string} [opt.extraPrefix] Prefix of name when filling the left dimensions.\n         * @param  {number} [opt.dimCount] If not specified, guess by the first data item.\n         * @return {Array.<string>}\n         */\n        completeDimensions: require('./data/helper/completeDimensions'),\n\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @see http://echarts.baidu.com/option.html#series-scatter.symbol\n         * @param {string} symbolDesc\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: symbolUtil.createSymbol,\n\n        /**\n         * Create scale\n         * @param {Array.<number>} dataExtent\n         * @param {Object|module:echarts/Model} option\n         */\n        createScale: function (dataExtent, option) {\n            var axisModel = option;\n            if (!(option instanceof Model)) {\n                axisModel = new Model(option);\n                util.mixin(axisModel, axisModelCommonMixin);\n            }\n\n            var scale = axisHelper.createScaleByModel(axisModel);\n            scale.setExtent(dataExtent[0], dataExtent[1]);\n\n            axisHelper.niceScaleExtent(scale, axisModel);\n            return scale;\n        },\n\n        /**\n         * Mixin common methods to axis model,\n         *\n         * Inlcude methods\n         * `getFormattedLabels() => Array.<string>`\n         * `getCategories() => Array.<string>`\n         * `getMin(origin: boolean) => number`\n         * `getMax(origin: boolean) => number`\n         * `getNeedCrossZero() => boolean`\n         * `setRange(start: number, end: number)`\n         * `resetRange()`\n         */\n        mixinAxisModelCommonMethods: function (Model) {\n            util.mixin(Model, axisModelCommonMixin);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/helper.js\n// module id = 140\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 141\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs, onlyGraphic) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption(null, onlyGraphic);\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type, onlyGraphic) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    // If only graphic, other series and component will not\n                    // go through update process, data should not be restored.\n                    // Otherwise grphic els mounted on data will be eliminated\n                    // and downplay will not work.\n                    !onlyGraphic && this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * If none of index and id and name used, return all components with mainType.\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts.slice();\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q[indexAttr] != null\n                        || q[idAttr] != null\n                        || q[nameAttr] != null\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * Init with series: [], in case of calling findSeries method\n         * before series initialized.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {series: []};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 142\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 143\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var classUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var set = classUtil.set;\n    var get = classUtil.get;\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            var data = this.getInitialData(option, ecModel);\n            if (__DEV__) {\n                zrUtil.assert(data, 'getInitialData returned invalid data.');\n            }\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            set(this, 'dataBeforeProcessed', data);\n\n            // If we reverse the order (make data firstly, and then make\n            // dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause data.graph.data !== data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this.restoreData();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                set(this, 'data', data);\n                set(this, 'dataBeforeProcessed', data.cloneShallow());\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            var data = get(this, 'data');\n            return dataType == null ? data : data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            set(this, 'data', data);\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return get(this, 'dataBeforeProcessed');\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = get(this, 'data');\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = encodeHTML(\n                zrUtil.isArray(value) ? formatArrayValue(value) : addCommas(value)\n            );\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + encodeHTML(color) + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue\n                    )\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        isAnimationEnabled: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            set(this, 'data', get(this, 'dataBeforeProcessed').cloneShallow());\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Object} {dataIndices, nestestValue}.\n         */\n        getAxisTooltipData: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 144\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: 'auto',\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000,\n\n        // See: module:echarts/scale/Time\n        useUTC: false\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 145\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 146\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 147\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes, includes) {\n            var style = getItemStyle.call(this, excludes, includes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 148\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 149\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 150\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 151\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 152\n// module chunks = 0","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 153\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, true, function (val) {\n                return val > 0;\n            }));\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 154\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        /**\n         * @override\n         */\n        unionExtentFromData: function (data, dim) {\n            this.unionExtent(data.getDataExtent(dim, false));\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 155\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    // [About UTC and local time zone]:\n    // In most cases, `number.parseDate` will treat input data string as local time\n    // (except time zone is specified in time string). And `format.formateTime` returns\n    // local time by default. option.useUTC is false by default. This design have\n    // concidered these common case:\n    // (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n    // in local time by default.\n    // (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n    // as its original time, without any time difference.\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var scaleHelper = require('./helper');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            var timezoneOffset = this.getSetting('useUTC')\n                ? 0 : numberUtil.getTimezoneOffset() * 60 * 1000;\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset),\n                Math.round(mathFloor((extent[1] - timezoneOffset)/ interval) * interval + timezoneOffset)\n            ];\n\n            scaleHelper.fixExtent(niceExtent, extent);\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @param {module:echarts/model/Model}\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function (model) {\n        return new TimeScale({useUTC: model.ecModel.get('useUTC')});\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 156\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            // TODO Support image object, DynamicImage.\n\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 157\n// module chunks = 0","// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        // FIXME Performance\n                        var itemModel = dataAll.getItemModel(rawIdx);\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 158\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 159\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 167\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/setimmediate/setImmediate.js\n// module id = 168\n// module chunks = 0","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/timers-browserify/main.js\n// module id = 169\n// module chunks = 0","/**\n  * vue-router v2.8.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also register instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    var propsToPass = data.props = resolveProps(route, matched.props && matched.props[name]);\n    if (propsToPass) {\n      // clone to prevent mutation\n      propsToPass = data.props = extend({}, propsToPass);\n      // pass non-declared props as attrs\n      var attrs = data.attrs = data.attrs || {};\n      for (var key in propsToPass) {\n        if (!component.props || !(key in component.props)) {\n          attrs[key] = propsToPass[key];\n          delete propsToPass[key];\n        }\n      }\n    }\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\nfunction extend (to, from) {\n  for (var key in from) {\n    to[key] = from[key];\n  }\n  return to\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    parsedQuery[key] = extraQuery[key];\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n\n  var query = location.query || {};\n  try {\n    query = clone(query);\n  } catch (e) {}\n\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: query,\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\nfunction clone (value) {\n  if (Array.isArray(value)) {\n    return value.map(clone)\n  } else if (value && typeof value === 'object') {\n    var res = {};\n    for (var key in value) {\n      res[key] = clone(value[key]);\n    }\n    return res\n  } else {\n    return value\n  }\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  // handle null value #1566\n  if (!a || !b) { return a === b }\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed && _Vue === Vue) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.beforeRouteUpdate = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar isarray = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar pathToRegexp_1 = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\npathToRegexp_1.parse = parse_1;\npathToRegexp_1.compile = compile_1;\npathToRegexp_1.tokensToFunction = tokensToFunction_1;\npathToRegexp_1.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\n// $flow-disable-line\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = pathToRegexp_1.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  // $flow-disable-line\n  var pathMap = oldPathMap || Object.create(null);\n  // $flow-disable-line\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n  var normalizedPath = normalizePath(\n    path,\n    parent,\n    pathToRegexpOptions.strict\n  );\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = pathToRegexp_1(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = Object.create(null);\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent, strict) {\n  if (!strict) { path = path.replace(/\\/$/, ''); }\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  // Fix for #1585 for Firefox\n  window.history.replaceState({ key: getStateKey() }, '');\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n\n    if (!shouldScroll) {\n      return\n    }\n\n    if (typeof shouldScroll.then === 'function') {\n      shouldScroll.then(function (shouldScroll) {\n        scrollToPosition((shouldScroll), position);\n      }).catch(function (err) {\n        if (process.env.NODE_ENV !== 'production') {\n          assert(false, err.toString());\n        }\n      });\n    } else {\n      scrollToPosition(shouldScroll, position);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\nfunction scrollToPosition (shouldScroll, position) {\n  var isObject = typeof shouldScroll === 'object';\n  if (isObject && typeof shouldScroll.selector === 'string') {\n    var el = document.querySelector(shouldScroll.selector);\n    if (el) {\n      var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n      offset = normalizeOffset(offset);\n      position = getElementPosition(el, offset);\n    } else if (isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n  } else if (isObject && isValidPosition(shouldScroll)) {\n    position = normalizePosition(shouldScroll);\n  }\n\n  if (position) {\n    window.scrollTo(position.x, position.y);\n  }\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          if (isESModule(resolvedDef)) {\n            resolvedDef = resolvedDef.default;\n          }\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\nvar hasSymbol =\n  typeof Symbol === 'function' &&\n  typeof Symbol.toStringTag === 'symbol';\n\nfunction isESModule (obj) {\n  return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module')\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    var initLocation = getLocation(this.base);\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n\n      // Avoiding first `popstate` event dispatched in some browsers but first\n      // history route not updated since async guard at the same time.\n      var location = getLocation(this$1.base);\n      if (this$1.current === START && location === initLocation) {\n        return\n      }\n\n      this$1.transitionTo(location, function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    var router = this.router;\n    var expectScroll = router.options.scrollBehavior;\n    var supportsScroll = supportsPushState && expectScroll;\n\n    if (supportsScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener(supportsPushState ? 'popstate' : 'hashchange', function () {\n      var current = this$1.current;\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        if (supportsScroll) {\n          handleScroll(this$1.router, route, current, true);\n        }\n        if (!supportsPushState) {\n          replaceHash(route.fullPath);\n        }\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction getUrl (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  return (base + \"#\" + path)\n}\n\nfunction pushHash (path) {\n  if (supportsPushState) {\n    pushState(getUrl(path));\n  } else {\n    window.location.hash = path;\n  }\n}\n\nfunction replaceHash (path) {\n  if (supportsPushState) {\n    replaceState(getUrl(path));\n  } else {\n    window.location.replace(getUrl(path));\n  }\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: { configurable: true } };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.8.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.esm.js\n// module id = 183\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 184\n// module chunks = 0","var _zrender = require(\"./lib/zrender\");\n\n(function () {\n  for (var key in _zrender) {\n    if (_zrender == null || !_zrender.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _zrender[key];\n  }\n})();\n\nvar _export = require(\"./lib/export\");\n\n(function () {\n  for (var key in _export) {\n    if (_export == null || !_export.hasOwnProperty(key) || key === 'default' || key === '__esModule') return;\n    exports[key] = _export[key];\n  }\n})();\n\nrequire(\"./lib/svg/svg\");\n\nrequire(\"./lib/vml/vml\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/index.js\n// module id = 185\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar vec2 = require(\"./core/vector\");\n\nvar Draggable = require(\"./mixin/Draggable\");\n\nvar Eventful = require(\"./mixin/Eventful\");\n\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\nvar SILENT = 'silent';\n\nfunction makeEventPacket(eveType, targetInfo, event) {\n  return {\n    type: eveType,\n    event: event,\n    // target can only be an element that is not silent.\n    target: targetInfo.target,\n    // topTarget can be a silent element.\n    topTarget: targetInfo.topTarget,\n    cancelBubble: false,\n    offsetX: event.zrX,\n    offsetY: event.zrY,\n    gestureEvent: event.gestureEvent,\n    pinchX: event.pinchX,\n    pinchY: event.pinchY,\n    pinchScale: event.pinchScale,\n    wheelDelta: event.zrDelta,\n    zrByTouch: event.zrByTouch,\n    which: event.which\n  };\n}\n\nfunction EmptyProxy() {}\n\nEmptyProxy.prototype.dispose = function () {};\n\nvar handlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\n/**\n * @alias module:zrender/Handler\n * @constructor\n * @extends module:zrender/mixin/Eventful\n * @param {module:zrender/Storage} storage Storage instance.\n * @param {module:zrender/Painter} painter Painter instance.\n * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n */\n\nvar Handler = function (storage, painter, proxy, painterRoot) {\n  Eventful.call(this);\n  this.storage = storage;\n  this.painter = painter;\n  this.painterRoot = painterRoot;\n  proxy = proxy || new EmptyProxy();\n  /**\n   * Proxy of event. can be Dom, WebGLSurface, etc.\n   */\n\n  this.proxy = proxy; // Attach handler\n\n  proxy.handler = this;\n  /**\n   * {target, topTarget, x, y}\n   * @private\n   * @type {Object}\n   */\n\n  this._hovered = {};\n  /**\n   * @private\n   * @type {Date}\n   */\n\n  this._lastTouchMoment;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastX;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._lastY;\n  Draggable.call(this);\n  util.each(handlerNames, function (name) {\n    proxy.on && proxy.on(name, this[name], this);\n  }, this);\n};\n\nHandler.prototype = {\n  constructor: Handler,\n  mousemove: function (event) {\n    var x = event.zrX;\n    var y = event.zrY;\n    var lastHovered = this._hovered;\n    var lastHoveredTarget = lastHovered.target; // If lastHoveredTarget is removed from zr (detected by '__zr') by some API call\n    // (like 'setOption' or 'dispatchAction') in event handlers, we should find\n    // lastHovered again here. Otherwise 'mouseout' can not be triggered normally.\n    // See #6198.\n\n    if (lastHoveredTarget && !lastHoveredTarget.__zr) {\n      lastHovered = this.findHover(lastHovered.x, lastHovered.y);\n      lastHoveredTarget = lastHovered.target;\n    }\n\n    var hovered = this._hovered = this.findHover(x, y);\n    var hoveredTarget = hovered.target;\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(hoveredTarget ? hoveredTarget.cursor : 'default'); // Mouse out on previous hovered element\n\n    if (lastHoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(lastHovered, 'mouseout', event);\n    } // Mouse moving on one element\n\n\n    this.dispatchToElement(hovered, 'mousemove', event); // Mouse over on a new element\n\n    if (hoveredTarget && hoveredTarget !== lastHoveredTarget) {\n      this.dispatchToElement(hovered, 'mouseover', event);\n    }\n  },\n  mouseout: function (event) {\n    this.dispatchToElement(this._hovered, 'mouseout', event); // There might be some doms created by upper layer application\n    // at the same level of painter.getViewportRoot() (e.g., tooltip\n    // dom created by echarts), where 'globalout' event should not\n    // be triggered when mouse enters these doms. (But 'mouseout'\n    // should be triggered at the original hovered element as usual).\n\n    var element = event.toElement || event.relatedTarget;\n    var innerDom;\n\n    do {\n      element = element && element.parentNode;\n    } while (element && element.nodeType != 9 && !(innerDom = element === this.painterRoot));\n\n    !innerDom && this.trigger('globalout', {\n      event: event\n    });\n  },\n\n  /**\n   * Resize\n   */\n  resize: function (event) {\n    this._hovered = {};\n  },\n\n  /**\n   * Dispatch event\n   * @param {string} eventName\n   * @param {event=} eventArgs\n   */\n  dispatch: function (eventName, eventArgs) {\n    var handler = this[eventName];\n    handler && handler.call(this, eventArgs);\n  },\n\n  /**\n   * Dispose\n   */\n  dispose: function () {\n    this.proxy.dispose();\n    this.storage = this.proxy = this.painter = null;\n  },\n\n  /**\n   * 设置默认的cursor style\n   * @param {string} [cursorStyle='default'] 例如 crosshair\n   */\n  setCursorStyle: function (cursorStyle) {\n    var proxy = this.proxy;\n    proxy.setCursor && proxy.setCursor(cursorStyle);\n  },\n\n  /**\n   * 事件分发代理\n   *\n   * @private\n   * @param {Object} targetInfo {target, topTarget} 目标图形元素\n   * @param {string} eventName 事件名称\n   * @param {Object} event 事件对象\n   */\n  dispatchToElement: function (targetInfo, eventName, event) {\n    targetInfo = targetInfo || {};\n    var el = targetInfo.target;\n\n    if (el && el.silent) {\n      return;\n    }\n\n    var eventHandler = 'on' + eventName;\n    var eventPacket = makeEventPacket(eventName, targetInfo, event);\n\n    while (el) {\n      el[eventHandler] && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n      el.trigger(eventName, eventPacket);\n      el = el.parent;\n\n      if (eventPacket.cancelBubble) {\n        break;\n      }\n    }\n\n    if (!eventPacket.cancelBubble) {\n      // 冒泡到顶级 zrender 对象\n      this.trigger(eventName, eventPacket); // 分发事件到用户自定义层\n      // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n\n      this.painter && this.painter.eachOtherLayer(function (layer) {\n        if (typeof layer[eventHandler] == 'function') {\n          layer[eventHandler].call(layer, eventPacket);\n        }\n\n        if (layer.trigger) {\n          layer.trigger(eventName, eventPacket);\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {number} x\n   * @param {number} y\n   * @param {module:zrender/graphic/Displayable} exclude\n   * @return {model:zrender/Element}\n   * @method\n   */\n  findHover: function (x, y, exclude) {\n    var list = this.storage.getDisplayList();\n    var out = {\n      x: x,\n      y: y\n    };\n\n    for (var i = list.length - 1; i >= 0; i--) {\n      var hoverCheckResult;\n\n      if (list[i] !== exclude // getDisplayList may include ignored item in VML mode\n      && !list[i].ignore && (hoverCheckResult = isHover(list[i], x, y))) {\n        !out.topTarget && (out.topTarget = list[i]);\n\n        if (hoverCheckResult !== SILENT) {\n          out.target = list[i];\n          break;\n        }\n      }\n    }\n\n    return out;\n  }\n}; // Common handlers\n\nutil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  Handler.prototype[name] = function (event) {\n    // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n    var hovered = this.findHover(event.zrX, event.zrY);\n    var hoveredTarget = hovered.target;\n\n    if (name === 'mousedown') {\n      this._downEl = hoveredTarget;\n      this._downPoint = [event.zrX, event.zrY]; // In case click triggered before mouseup\n\n      this._upEl = hoveredTarget;\n    } else if (name === 'mosueup') {\n      this._upEl = hoveredTarget;\n    } else if (name === 'click') {\n      if (this._downEl !== this._upEl // Original click event is triggered on the whole canvas element,\n      // including the case that `mousedown` - `mousemove` - `mouseup`,\n      // which should be filtered, otherwise it will bring trouble to\n      // pan and zoom.\n      || !this._downPoint // Arbitrary value\n      || vec2.dist(this._downPoint, [event.zrX, event.zrY]) > 4) {\n        return;\n      }\n\n      this._downPoint = null;\n    }\n\n    this.dispatchToElement(hovered, name, event);\n  };\n});\n\nfunction isHover(displayable, x, y) {\n  if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n    var el = displayable;\n    var isSilent;\n\n    while (el) {\n      // If clipped by ancestor.\n      // FIXME: If clipPath has neither stroke nor fill,\n      // el.clipPath.contain(x, y) will always return false.\n      if (el.clipPath && !el.clipPath.contain(x, y)) {\n        return false;\n      }\n\n      if (el.silent) {\n        isSilent = true;\n      }\n\n      el = el.parent;\n    }\n\n    return isSilent ? SILENT : true;\n  }\n\n  return false;\n}\n\nutil.mixin(Handler, Eventful);\nutil.mixin(Handler, Draggable);\nvar _default = Handler;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 186\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar Style = require(\"./graphic/Style\");\n\nvar Pattern = require(\"./graphic/Pattern\");\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\nfunction returnFalse() {\n  return false;\n}\n/**\n * 创建dom\n *\n * @inner\n * @param {string} id dom id 待用\n * @param {Painter} painter painter instance\n * @param {number} number\n */\n\n\nfunction createDom(id, painter, dpr) {\n  var newDom = util.createCanvas();\n  var width = painter.getWidth();\n  var height = painter.getHeight();\n  var newDomStyle = newDom.style; // 没append呢，请原谅我这样写，清晰~\n\n  newDomStyle.position = 'absolute';\n  newDomStyle.left = 0;\n  newDomStyle.top = 0;\n  newDomStyle.width = width + 'px';\n  newDomStyle.height = height + 'px';\n  newDom.width = width * dpr;\n  newDom.height = height * dpr; // id不作为索引用，避免可能造成的重名，定义为私有属性\n\n  newDom.setAttribute('data-zr-dom-id', id);\n  return newDom;\n}\n/**\n * @alias module:zrender/Layer\n * @constructor\n * @extends module:zrender/mixin/Transformable\n * @param {string} id\n * @param {module:zrender/Painter} painter\n * @param {number} [dpr]\n */\n\n\nvar Layer = function (id, painter, dpr) {\n  var dom;\n  dpr = dpr || devicePixelRatio;\n\n  if (typeof id === 'string') {\n    dom = createDom(id, painter, dpr);\n  } // Not using isDom because in node it will return false\n  else if (util.isObject(id)) {\n      dom = id;\n      id = dom.id;\n    }\n\n  this.id = id;\n  this.dom = dom;\n  var domStyle = dom.style;\n\n  if (domStyle) {\n    // Not in node\n    dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n    domStyle['-webkit-user-select'] = 'none';\n    domStyle['user-select'] = 'none';\n    domStyle['-webkit-touch-callout'] = 'none';\n    domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n    domStyle['padding'] = 0;\n    domStyle['margin'] = 0;\n    domStyle['border-width'] = 0;\n  }\n\n  this.domBack = null;\n  this.ctxBack = null;\n  this.painter = painter;\n  this.config = null; // Configs\n\n  /**\n   * 每次清空画布的颜色\n   * @type {string}\n   * @default 0\n   */\n\n  this.clearColor = 0;\n  /**\n   * 是否开启动态模糊\n   * @type {boolean}\n   * @default false\n   */\n\n  this.motionBlur = false;\n  /**\n   * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   * @type {number}\n   * @default 0.7\n   */\n\n  this.lastFrameAlpha = 0.7;\n  /**\n   * Layer dpr\n   * @type {number}\n   */\n\n  this.dpr = dpr;\n};\n\nLayer.prototype = {\n  constructor: Layer,\n  elCount: 0,\n  __dirty: true,\n  initContext: function () {\n    this.ctx = this.dom.getContext('2d');\n    this.ctx.__currentValues = {};\n    this.ctx.dpr = this.dpr;\n  },\n  createBackBuffer: function () {\n    var dpr = this.dpr;\n    this.domBack = createDom('back-' + this.id, this.painter, dpr);\n    this.ctxBack = this.domBack.getContext('2d');\n    this.ctxBack.__currentValues = {};\n\n    if (dpr != 1) {\n      this.ctxBack.scale(dpr, dpr);\n    }\n  },\n\n  /**\n   * @param  {number} width\n   * @param  {number} height\n   */\n  resize: function (width, height) {\n    var dpr = this.dpr;\n    var dom = this.dom;\n    var domStyle = dom.style;\n    var domBack = this.domBack;\n    domStyle.width = width + 'px';\n    domStyle.height = height + 'px';\n    dom.width = width * dpr;\n    dom.height = height * dpr;\n\n    if (domBack) {\n      domBack.width = width * dpr;\n      domBack.height = height * dpr;\n\n      if (dpr != 1) {\n        this.ctxBack.scale(dpr, dpr);\n      }\n    }\n  },\n\n  /**\n   * 清空该层画布\n   * @param {boolean} clearAll Clear all with out motion blur\n   */\n  clear: function (clearAll) {\n    var dom = this.dom;\n    var ctx = this.ctx;\n    var width = dom.width;\n    var height = dom.height;\n    var clearColor = this.clearColor;\n    var haveMotionBLur = this.motionBlur && !clearAll;\n    var lastFrameAlpha = this.lastFrameAlpha;\n    var dpr = this.dpr;\n\n    if (haveMotionBLur) {\n      if (!this.domBack) {\n        this.createBackBuffer();\n      }\n\n      this.ctxBack.globalCompositeOperation = 'copy';\n      this.ctxBack.drawImage(dom, 0, 0, width / dpr, height / dpr);\n    }\n\n    ctx.clearRect(0, 0, width, height);\n\n    if (clearColor) {\n      var clearColorGradientOrPattern; // Gradient\n\n      if (clearColor.colorStops) {\n        // Cache canvas gradient\n        clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n          x: 0,\n          y: 0,\n          width: width,\n          height: height\n        });\n        clearColor.__canvasGradient = clearColorGradientOrPattern;\n      } // Pattern\n      else if (clearColor.image) {\n          clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n        }\n\n      ctx.save();\n      ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    if (haveMotionBLur) {\n      var domBack = this.domBack;\n      ctx.save();\n      ctx.globalAlpha = lastFrameAlpha;\n      ctx.drawImage(domBack, 0, 0, width, height);\n      ctx.restore();\n    }\n  }\n};\nvar _default = Layer;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 187\n// module chunks = 0","var _config = require(\"./config\");\n\nvar devicePixelRatio = _config.devicePixelRatio;\n\nvar util = require(\"./core/util\");\n\nvar log = require(\"./core/log\");\n\nvar BoundingRect = require(\"./core/BoundingRect\");\n\nvar timsort = require(\"./core/timsort\");\n\nvar Layer = require(\"./Layer\");\n\nvar requestAnimationFrame = require(\"./animation/requestAnimationFrame\");\n\nvar Image = require(\"./graphic/Image\");\n\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n// PENDIGN\n// Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n//\n// Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\nvar MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction isLayerValid(layer) {\n  if (!layer) {\n    return false;\n  }\n\n  if (layer.__builtin__) {\n    return true;\n  }\n\n  if (typeof layer.resize !== 'function' || typeof layer.refresh !== 'function') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction preProcessLayer(layer) {\n  layer.__unusedCount++;\n}\n\nfunction postProcessLayer(layer) {\n  if (layer.__unusedCount == 1) {\n    layer.clear();\n  }\n}\n\nvar tmpRect = new BoundingRect(0, 0, 0, 0);\nvar viewRect = new BoundingRect(0, 0, 0, 0);\n\nfunction isDisplayableCulled(el, width, height) {\n  tmpRect.copy(el.getBoundingRect());\n\n  if (el.transform) {\n    tmpRect.applyTransform(el.transform);\n  }\n\n  viewRect.width = width;\n  viewRect.height = height;\n  return !tmpRect.intersect(viewRect);\n}\n\nfunction isClipPathChanged(clipPaths, prevClipPaths) {\n  if (clipPaths == prevClipPaths) {\n    // Can both be null or undefined\n    return false;\n  }\n\n  if (!clipPaths || !prevClipPaths || clipPaths.length !== prevClipPaths.length) {\n    return true;\n  }\n\n  for (var i = 0; i < clipPaths.length; i++) {\n    if (clipPaths[i] !== prevClipPaths[i]) {\n      return true;\n    }\n  }\n}\n\nfunction doClip(clipPaths, ctx) {\n  for (var i = 0; i < clipPaths.length; i++) {\n    var clipPath = clipPaths[i];\n    clipPath.setTransform(ctx);\n    ctx.beginPath();\n    clipPath.buildPath(ctx, clipPath.shape);\n    ctx.clip(); // Transform back\n\n    clipPath.restoreTransform(ctx);\n  }\n}\n\nfunction createRoot(width, height) {\n  var domRoot = document.createElement('div'); // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n\n  domRoot.style.cssText = ['position:relative', 'overflow:hidden', 'width:' + width + 'px', 'height:' + height + 'px', 'padding:0', 'margin:0', 'border-width:0'].join(';') + ';';\n  return domRoot;\n}\n/**\n * @alias module:zrender/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar Painter = function (root, storage, opts) {\n  this.type = 'canvas'; // In node environment using node-canvas\n\n  var singleCanvas = !root.nodeName // In node ?\n  || root.nodeName.toUpperCase() === 'CANVAS';\n  this._opts = opts = util.extend({}, opts || {});\n  /**\n   * @type {number}\n   */\n\n  this.dpr = opts.devicePixelRatio || devicePixelRatio;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._singleCanvas = singleCanvas;\n  /**\n   * 绘图容器\n   * @type {HTMLElement}\n   */\n\n  this.root = root;\n  var rootStyle = root.style;\n\n  if (rootStyle) {\n    rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n    rootStyle['-webkit-user-select'] = rootStyle['user-select'] = rootStyle['-webkit-touch-callout'] = 'none';\n    root.innerHTML = '';\n  }\n  /**\n   * @type {module:zrender/Storage}\n   */\n\n\n  this.storage = storage;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  var zlevelList = this._zlevelList = [];\n  /**\n   * @type {Object.<string, module:zrender/Layer>}\n   * @private\n   */\n\n  var layers = this._layers = {};\n  /**\n   * @type {Object.<string, Object>}\n   * @type {private}\n   */\n\n  this._layerConfig = {};\n\n  if (!singleCanvas) {\n    this._width = this._getSize(0);\n    this._height = this._getSize(1);\n    var domRoot = this._domRoot = createRoot(this._width, this._height);\n    root.appendChild(domRoot);\n  } else {\n    if (opts.width != null) {\n      root.width = opts.width;\n    }\n\n    if (opts.height != null) {\n      root.height = opts.height;\n    } // Use canvas width and height directly\n\n\n    var width = root.width;\n    var height = root.height;\n    this._width = width;\n    this._height = height; // Create layer if only one given canvas\n    // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n\n    var mainLayer = new Layer(root, this, 1);\n    mainLayer.initContext(); // FIXME Use canvas width and height\n    // mainLayer.resize(width, height);\n\n    layers[0] = mainLayer;\n    zlevelList.push(0);\n    this._domRoot = root;\n  } // Layers for progressive rendering\n\n\n  this._progressiveLayers = [];\n  /**\n   * @type {module:zrender/Layer}\n   * @private\n   */\n\n  this._hoverlayer;\n  this._hoverElements = [];\n};\n\nPainter.prototype = {\n  constructor: Painter,\n  getType: function () {\n    return 'canvas';\n  },\n\n  /**\n   * If painter use a single canvas\n   * @return {boolean}\n   */\n  isSingleCanvas: function () {\n    return this._singleCanvas;\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._domRoot;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   * @param {boolean} [paintAll=false] 强制绘制所有displayable\n   */\n  refresh: function (paintAll) {\n    var list = this.storage.getDisplayList(true);\n    var zlevelList = this._zlevelList;\n\n    this._paintList(list, paintAll); // Paint custum layers\n\n\n    for (var i = 0; i < zlevelList.length; i++) {\n      var z = zlevelList[i];\n      var layer = this._layers[z];\n\n      if (!layer.__builtin__ && layer.refresh) {\n        layer.refresh();\n      }\n    }\n\n    this.refreshHover();\n\n    if (this._progressiveLayers.length) {\n      this._startProgessive();\n    }\n\n    return this;\n  },\n  addHover: function (el, hoverStyle) {\n    if (el.__hoverMir) {\n      return;\n    }\n\n    var elMirror = new el.constructor({\n      style: el.style,\n      shape: el.shape\n    });\n    elMirror.__from = el;\n    el.__hoverMir = elMirror;\n    elMirror.setStyle(hoverStyle);\n\n    this._hoverElements.push(elMirror);\n  },\n  removeHover: function (el) {\n    var elMirror = el.__hoverMir;\n    var hoverElements = this._hoverElements;\n    var idx = util.indexOf(hoverElements, elMirror);\n\n    if (idx >= 0) {\n      hoverElements.splice(idx, 1);\n    }\n\n    el.__hoverMir = null;\n  },\n  clearHover: function (el) {\n    var hoverElements = this._hoverElements;\n\n    for (var i = 0; i < hoverElements.length; i++) {\n      var from = hoverElements[i].__from;\n\n      if (from) {\n        from.__hoverMir = null;\n      }\n    }\n\n    hoverElements.length = 0;\n  },\n  refreshHover: function () {\n    var hoverElements = this._hoverElements;\n    var len = hoverElements.length;\n    var hoverLayer = this._hoverlayer;\n    hoverLayer && hoverLayer.clear();\n\n    if (!len) {\n      return;\n    }\n\n    timsort(hoverElements, this.storage.displayableSortFunc); // Use a extream large zlevel\n    // FIXME?\n\n    if (!hoverLayer) {\n      hoverLayer = this._hoverlayer = this.getLayer(1e5);\n    }\n\n    var scope = {};\n    hoverLayer.ctx.save();\n\n    for (var i = 0; i < len;) {\n      var el = hoverElements[i];\n      var originalEl = el.__from; // Original el is removed\n      // PENDING\n\n      if (!(originalEl && originalEl.__zr)) {\n        hoverElements.splice(i, 1);\n        originalEl.__hoverMir = null;\n        len--;\n        continue;\n      }\n\n      i++; // Use transform\n      // FIXME style and shape ?\n\n      if (!originalEl.invisible) {\n        el.transform = originalEl.transform;\n        el.invTransform = originalEl.invTransform;\n        el.__clipPaths = originalEl.__clipPaths; // el.\n\n        this._doPaintEl(el, hoverLayer, true, scope);\n      }\n    }\n\n    hoverLayer.ctx.restore();\n  },\n  _startProgessive: function () {\n    var self = this;\n\n    if (!self._furtherProgressive) {\n      return;\n    } // Use a token to stop progress steps triggered by\n    // previous zr.refresh calling.\n\n\n    var token = self._progressiveToken = +new Date();\n    self._progress++;\n    requestAnimationFrame(step);\n\n    function step() {\n      // In case refreshed or disposed\n      if (token === self._progressiveToken && self.storage) {\n        self._doPaintList(self.storage.getDisplayList());\n\n        if (self._furtherProgressive) {\n          self._progress++;\n          requestAnimationFrame(step);\n        } else {\n          self._progressiveToken = -1;\n        }\n      }\n    }\n  },\n  _clearProgressive: function () {\n    this._progressiveToken = -1;\n    this._progress = 0;\n    util.each(this._progressiveLayers, function (layer) {\n      layer.__dirty && layer.clear();\n    });\n  },\n  _paintList: function (list, paintAll) {\n    if (paintAll == null) {\n      paintAll = false;\n    }\n\n    this._updateLayerStatus(list);\n\n    this._clearProgressive();\n\n    this.eachBuiltinLayer(preProcessLayer);\n\n    this._doPaintList(list, paintAll);\n\n    this.eachBuiltinLayer(postProcessLayer);\n  },\n  _doPaintList: function (list, paintAll) {\n    var currentLayer;\n    var currentZLevel;\n    var ctx; // var invTransform = [];\n\n    var scope;\n    var progressiveLayerIdx = 0;\n    var currentProgressiveLayer;\n    var width = this._width;\n    var height = this._height;\n    var layerProgress;\n    var frame = this._progress;\n\n    function flushProgressiveLayer(layer) {\n      var dpr = ctx.dpr || 1;\n      ctx.save();\n      ctx.globalAlpha = 1;\n      ctx.shadowBlur = 0; // Avoid layer don't clear in next progressive frame\n\n      currentLayer.__dirty = true;\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n      ctx.restore();\n    }\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n      var elFrame = el.__frame; // Flush at current context\n      // PENDING\n\n      if (elFrame < 0 && currentProgressiveLayer) {\n        flushProgressiveLayer(currentProgressiveLayer);\n        currentProgressiveLayer = null;\n      } // Change draw layer\n\n\n      if (currentZLevel !== elZLevel) {\n        if (ctx) {\n          ctx.restore();\n        } // Reset scope\n\n\n        scope = {}; // Only 0 zlevel if only has one canvas\n\n        currentZLevel = elZLevel;\n        currentLayer = this.getLayer(currentZLevel);\n\n        if (!currentLayer.__builtin__) {\n          log('ZLevel ' + currentZLevel + ' has been used by unkown layer ' + currentLayer.id);\n        }\n\n        ctx = currentLayer.ctx;\n        ctx.save(); // Reset the count\n\n        currentLayer.__unusedCount = 0;\n\n        if (currentLayer.__dirty || paintAll) {\n          currentLayer.clear();\n        }\n      }\n\n      if (!(currentLayer.__dirty || paintAll)) {\n        continue;\n      }\n\n      if (elFrame >= 0) {\n        // Progressive layer changed\n        if (!currentProgressiveLayer) {\n          currentProgressiveLayer = this._progressiveLayers[Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)];\n          currentProgressiveLayer.ctx.save();\n          currentProgressiveLayer.renderScope = {};\n\n          if (currentProgressiveLayer && currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress) {\n            // flushProgressiveLayer(currentProgressiveLayer);\n            // Quick jump all progressive elements\n            // All progressive element are not dirty, jump over and flush directly\n            i = currentProgressiveLayer.__nextIdxNotProg - 1; // currentProgressiveLayer = null;\n\n            continue;\n          }\n\n          layerProgress = currentProgressiveLayer.__progress;\n\n          if (!currentProgressiveLayer.__dirty) {\n            // Keep rendering\n            frame = layerProgress;\n          }\n\n          currentProgressiveLayer.__progress = frame + 1;\n        }\n\n        if (elFrame === frame) {\n          this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n        }\n      } else {\n        this._doPaintEl(el, currentLayer, paintAll, scope);\n      }\n\n      el.__dirty = false;\n    }\n\n    if (currentProgressiveLayer) {\n      flushProgressiveLayer(currentProgressiveLayer);\n    } // Restore the lastLayer ctx\n\n\n    ctx && ctx.restore(); // If still has clipping state\n    // if (scope.prevElClipPaths) {\n    //     ctx.restore();\n    // }\n\n    this._furtherProgressive = false;\n    util.each(this._progressiveLayers, function (layer) {\n      if (layer.__maxProgress >= layer.__progress) {\n        this._furtherProgressive = true;\n      }\n    }, this);\n  },\n  _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n    var ctx = currentLayer.ctx;\n    var m = el.transform;\n\n    if ((currentLayer.__dirty || forcePaint) && // Ignore invisible element\n    !el.invisible // Ignore transparent element\n    && el.style.opacity !== 0 // Ignore scale 0 element, in some environment like node-canvas\n    // Draw a scale 0 element can cause all following draw wrong\n    // And setTransform with scale 0 will cause set back transform failed.\n    && !(m && !m[0] && !m[3]) // Ignore culled element\n    && !(el.culling && isDisplayableCulled(el, this._width, this._height))) {\n      var clipPaths = el.__clipPaths; // Optimize when clipping on group with several elements\n\n      if (scope.prevClipLayer !== currentLayer || isClipPathChanged(clipPaths, scope.prevElClipPaths)) {\n        // If has previous clipping state, restore from it\n        if (scope.prevElClipPaths) {\n          scope.prevClipLayer.ctx.restore();\n          scope.prevClipLayer = scope.prevElClipPaths = null; // Reset prevEl since context has been restored\n\n          scope.prevEl = null;\n        } // New clipping state\n\n\n        if (clipPaths) {\n          ctx.save();\n          doClip(clipPaths, ctx);\n          scope.prevClipLayer = currentLayer;\n          scope.prevElClipPaths = clipPaths;\n        }\n      }\n\n      el.beforeBrush && el.beforeBrush(ctx);\n      el.brush(ctx, scope.prevEl || null);\n      scope.prevEl = el;\n      el.afterBrush && el.afterBrush(ctx);\n    }\n  },\n\n  /**\n   * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n   * @param {number} zlevel\n   * @return {module:zrender/Layer}\n   */\n  getLayer: function (zlevel) {\n    if (this._singleCanvas) {\n      return this._layers[0];\n    }\n\n    var layer = this._layers[zlevel];\n\n    if (!layer) {\n      // Create a new layer\n      layer = new Layer('zr_' + zlevel, this, this.dpr);\n      layer.__builtin__ = true;\n\n      if (this._layerConfig[zlevel]) {\n        util.merge(layer, this._layerConfig[zlevel], true);\n      }\n\n      this.insertLayer(zlevel, layer); // Context is created after dom inserted to document\n      // Or excanvas will get 0px clientWidth and clientHeight\n\n      layer.initContext();\n    }\n\n    return layer;\n  },\n  insertLayer: function (zlevel, layer) {\n    var layersMap = this._layers;\n    var zlevelList = this._zlevelList;\n    var len = zlevelList.length;\n    var prevLayer = null;\n    var i = -1;\n    var domRoot = this._domRoot;\n\n    if (layersMap[zlevel]) {\n      log('ZLevel ' + zlevel + ' has been used already');\n      return;\n    } // Check if is a valid layer\n\n\n    if (!isLayerValid(layer)) {\n      log('Layer of zlevel ' + zlevel + ' is not valid');\n      return;\n    }\n\n    if (len > 0 && zlevel > zlevelList[0]) {\n      for (i = 0; i < len - 1; i++) {\n        if (zlevelList[i] < zlevel && zlevelList[i + 1] > zlevel) {\n          break;\n        }\n      }\n\n      prevLayer = layersMap[zlevelList[i]];\n    }\n\n    zlevelList.splice(i + 1, 0, zlevel);\n    layersMap[zlevel] = layer; // Vitual layer will not directly show on the screen.\n    // (It can be a WebGL layer and assigned to a ZImage element)\n    // But it still under management of zrender.\n\n    if (!layer.virtual) {\n      if (prevLayer) {\n        var prevDom = prevLayer.dom;\n\n        if (prevDom.nextSibling) {\n          domRoot.insertBefore(layer.dom, prevDom.nextSibling);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      } else {\n        if (domRoot.firstChild) {\n          domRoot.insertBefore(layer.dom, domRoot.firstChild);\n        } else {\n          domRoot.appendChild(layer.dom);\n        }\n      }\n    }\n  },\n  // Iterate each layer\n  eachLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      cb.call(context, this._layers[z], z);\n    }\n  },\n  // Iterate each buildin layer\n  eachBuiltinLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n  // Iterate each other layer except buildin layer\n  eachOtherLayer: function (cb, context) {\n    var zlevelList = this._zlevelList;\n    var layer;\n    var z;\n    var i;\n\n    for (i = 0; i < zlevelList.length; i++) {\n      z = zlevelList[i];\n      layer = this._layers[z];\n\n      if (!layer.__builtin__) {\n        cb.call(context, layer, z);\n      }\n    }\n  },\n\n  /**\n   * 获取所有已创建的层\n   * @param {Array.<module:zrender/Layer>} [prevLayer]\n   */\n  getLayers: function () {\n    return this._layers;\n  },\n  _updateLayerStatus: function (list) {\n    var layers = this._layers;\n    var progressiveLayers = this._progressiveLayers;\n    var elCountsLastFrame = {};\n    var progressiveElCountsLastFrame = {};\n    this.eachBuiltinLayer(function (layer, z) {\n      elCountsLastFrame[z] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    util.each(progressiveLayers, function (layer, idx) {\n      progressiveElCountsLastFrame[idx] = layer.elCount;\n      layer.elCount = 0;\n      layer.__dirty = false;\n    });\n    var progressiveLayerCount = 0;\n    var currentProgressiveLayer;\n    var lastProgressiveKey;\n    var frameCount = 0;\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      var el = list[i];\n      var zlevel = this._singleCanvas ? 0 : el.zlevel;\n      var layer = layers[zlevel];\n      var elProgress = el.progressive;\n\n      if (layer) {\n        layer.elCount++;\n        layer.__dirty = layer.__dirty || el.__dirty;\n      } /////// Update progressive\n\n\n      if (elProgress >= 0) {\n        // Fix wrong progressive sequence problem.\n        if (lastProgressiveKey !== elProgress) {\n          lastProgressiveKey = elProgress;\n          frameCount++;\n        }\n\n        var elFrame = el.__frame = frameCount - 1;\n\n        if (!currentProgressiveLayer) {\n          var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n          currentProgressiveLayer = progressiveLayers[idx];\n\n          if (!currentProgressiveLayer) {\n            currentProgressiveLayer = progressiveLayers[idx] = new Layer('progressive', this, this.dpr);\n            currentProgressiveLayer.initContext();\n          }\n\n          currentProgressiveLayer.__maxProgress = 0;\n        }\n\n        currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n        currentProgressiveLayer.elCount++;\n        currentProgressiveLayer.__maxProgress = Math.max(currentProgressiveLayer.__maxProgress, elFrame);\n\n        if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n          // Should keep rendering this  layer because progressive rendering is not finished yet\n          layer.__dirty = true;\n        }\n      } else {\n        el.__frame = -1;\n\n        if (currentProgressiveLayer) {\n          currentProgressiveLayer.__nextIdxNotProg = i;\n          progressiveLayerCount++;\n          currentProgressiveLayer = null;\n        }\n      }\n    }\n\n    if (currentProgressiveLayer) {\n      progressiveLayerCount++;\n      currentProgressiveLayer.__nextIdxNotProg = i;\n    } // 层中的元素数量有发生变化\n\n\n    this.eachBuiltinLayer(function (layer, z) {\n      if (elCountsLastFrame[z] !== layer.elCount) {\n        layer.__dirty = true;\n      }\n    });\n    progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n    util.each(progressiveLayers, function (layer, idx) {\n      if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n        el.__dirty = true;\n      }\n\n      if (layer.__dirty) {\n        layer.__progress = 0;\n      }\n    });\n  },\n\n  /**\n   * 清除hover层外所有内容\n   */\n  clear: function () {\n    this.eachBuiltinLayer(this._clearLayer);\n    return this;\n  },\n  _clearLayer: function (layer) {\n    layer.clear();\n  },\n\n  /**\n   * 修改指定zlevel的绘制参数\n   *\n   * @param {string} zlevel\n   * @param {Object} config 配置对象\n   * @param {string} [config.clearColor=0] 每次清空画布的颜色\n   * @param {string} [config.motionBlur=false] 是否开启动态模糊\n   * @param {number} [config.lastFrameAlpha=0.7]\n   *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n   */\n  configLayer: function (zlevel, config) {\n    if (config) {\n      var layerConfig = this._layerConfig;\n\n      if (!layerConfig[zlevel]) {\n        layerConfig[zlevel] = config;\n      } else {\n        util.merge(layerConfig[zlevel], config, true);\n      }\n\n      var layer = this._layers[zlevel];\n\n      if (layer) {\n        util.merge(layer, layerConfig[zlevel], true);\n      }\n    }\n  },\n\n  /**\n   * 删除指定层\n   * @param {number} zlevel 层所在的zlevel\n   */\n  delLayer: function (zlevel) {\n    var layers = this._layers;\n    var zlevelList = this._zlevelList;\n    var layer = layers[zlevel];\n\n    if (!layer) {\n      return;\n    }\n\n    layer.dom.parentNode.removeChild(layer.dom);\n    delete layers[zlevel];\n    zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n  },\n\n  /**\n   * 区域大小变化后重绘\n   */\n  resize: function (width, height) {\n    var domRoot = this._domRoot; // FIXME Why ?\n\n    domRoot.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    domRoot.style.display = ''; // 优化没有实际改变的resize\n\n    if (this._width != width || height != this._height) {\n      domRoot.style.width = width + 'px';\n      domRoot.style.height = height + 'px';\n\n      for (var id in this._layers) {\n        if (this._layers.hasOwnProperty(id)) {\n          this._layers[id].resize(width, height);\n        }\n      }\n\n      util.each(this._progressiveLayers, function (layer) {\n        layer.resize(width, height);\n      });\n      this.refresh(true);\n    }\n\n    this._width = width;\n    this._height = height;\n    return this;\n  },\n\n  /**\n   * 清除单独的一个层\n   * @param {number} zlevel\n   */\n  clearLayer: function (zlevel) {\n    var layer = this._layers[zlevel];\n\n    if (layer) {\n      layer.clear();\n    }\n  },\n\n  /**\n   * 释放\n   */\n  dispose: function () {\n    this.root.innerHTML = '';\n    this.root = this.storage = this._domRoot = this._layers = null;\n  },\n\n  /**\n   * Get canvas which has all thing rendered\n   * @param {Object} opts\n   * @param {string} [opts.backgroundColor]\n   * @param {number} [opts.pixelRatio]\n   */\n  getRenderedCanvas: function (opts) {\n    opts = opts || {};\n\n    if (this._singleCanvas) {\n      return this._layers[0].dom;\n    }\n\n    var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n    imageLayer.initContext();\n    imageLayer.clearColor = opts.backgroundColor;\n    imageLayer.clear();\n    var displayList = this.storage.getDisplayList(true);\n    var scope = {};\n    var zlevel;\n    var self = this;\n\n    function findAndDrawOtherLayer(smaller, larger) {\n      var zlevelList = self._zlevelList;\n\n      if (smaller == null) {\n        smaller = -Infinity;\n      }\n\n      var intermediateLayer;\n\n      for (var i = 0; i < zlevelList.length; i++) {\n        var z = zlevelList[i];\n        var layer = self._layers[z];\n\n        if (!layer.__builtin__ && z > smaller && z < larger) {\n          intermediateLayer = layer;\n          break;\n        }\n      }\n\n      if (intermediateLayer && intermediateLayer.renderToCanvas) {\n        imageLayer.ctx.save();\n        intermediateLayer.renderToCanvas(imageLayer.ctx);\n        imageLayer.ctx.restore();\n      }\n    }\n\n    for (var i = 0; i < displayList.length; i++) {\n      var el = displayList[i];\n\n      if (el.zlevel !== zlevel) {\n        findAndDrawOtherLayer(zlevel, el.zlevel);\n        zlevel = el.zlevel;\n      }\n\n      this._doPaintEl(el, imageLayer, true, scope);\n    }\n\n    findAndDrawOtherLayer(zlevel, Infinity);\n    return imageLayer.dom;\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  pathToImage: function (path, dpr) {\n    dpr = dpr || this.dpr;\n    var canvas = document.createElement('canvas');\n    var ctx = canvas.getContext('2d');\n    var rect = path.getBoundingRect();\n    var style = path.style;\n    var shadowBlurSize = style.shadowBlur;\n    var shadowOffsetX = style.shadowOffsetX;\n    var shadowOffsetY = style.shadowOffsetY;\n    var lineWidth = style.hasStroke() ? style.lineWidth : 0;\n    var leftMargin = Math.max(lineWidth / 2, -shadowOffsetX + shadowBlurSize);\n    var rightMargin = Math.max(lineWidth / 2, shadowOffsetX + shadowBlurSize);\n    var topMargin = Math.max(lineWidth / 2, -shadowOffsetY + shadowBlurSize);\n    var bottomMargin = Math.max(lineWidth / 2, shadowOffsetY + shadowBlurSize);\n    var width = rect.width + leftMargin + rightMargin;\n    var height = rect.height + topMargin + bottomMargin;\n    canvas.width = width * dpr;\n    canvas.height = height * dpr;\n    ctx.scale(dpr, dpr);\n    ctx.clearRect(0, 0, width, height);\n    ctx.dpr = dpr;\n    var pathTransform = {\n      position: path.position,\n      rotation: path.rotation,\n      scale: path.scale\n    };\n    path.position = [leftMargin - rect.x, topMargin - rect.y];\n    path.rotation = 0;\n    path.scale = [1, 1];\n    path.updateTransform();\n\n    if (path) {\n      path.brush(ctx);\n    }\n\n    var ImageShape = Image;\n    var imgShape = new ImageShape({\n      style: {\n        x: 0,\n        y: 0,\n        image: canvas\n      }\n    });\n\n    if (pathTransform.position != null) {\n      imgShape.position = path.position = pathTransform.position;\n    }\n\n    if (pathTransform.rotation != null) {\n      imgShape.rotation = path.rotation = pathTransform.rotation;\n    }\n\n    if (pathTransform.scale != null) {\n      imgShape.scale = path.scale = pathTransform.scale;\n    }\n\n    return imgShape;\n  }\n};\nvar _default = Painter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 188\n// module chunks = 0","var util = require(\"./core/util\");\n\nvar env = require(\"./core/env\");\n\nvar Group = require(\"./container/Group\");\n\nvar timsort = require(\"./core/timsort\");\n\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n// Use timsort because in most case elements are partially sorted\n// https://jsfiddle.net/pissang/jr4x7mdm/8/\nfunction shapeCompareFunc(a, b) {\n  if (a.zlevel === b.zlevel) {\n    if (a.z === b.z) {\n      // if (a.z2 === b.z2) {\n      //     // FIXME Slow has renderidx compare\n      //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n      //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n      //     return a.__renderidx - b.__renderidx;\n      // }\n      return a.z2 - b.z2;\n    }\n\n    return a.z - b.z;\n  }\n\n  return a.zlevel - b.zlevel;\n}\n/**\n * 内容仓库 (M)\n * @alias module:zrender/Storage\n * @constructor\n */\n\n\nvar Storage = function () {\n  // jshint ignore:line\n  this._roots = [];\n  this._displayList = [];\n  this._displayListLen = 0;\n};\n\nStorage.prototype = {\n  constructor: Storage,\n\n  /**\n   * @param  {Function} cb\n   *\n   */\n  traverse: function (cb, context) {\n    for (var i = 0; i < this._roots.length; i++) {\n      this._roots[i].traverse(cb, context);\n    }\n  },\n\n  /**\n   * 返回所有图形的绘制队列\n   * @param {boolean} [update=false] 是否在返回前更新该数组\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n   *\n   * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n   * @return {Array.<module:zrender/graphic/Displayable>}\n   */\n  getDisplayList: function (update, includeIgnore) {\n    includeIgnore = includeIgnore || false;\n\n    if (update) {\n      this.updateDisplayList(includeIgnore);\n    }\n\n    return this._displayList;\n  },\n\n  /**\n   * 更新图形的绘制队列。\n   * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n   * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n   * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n   */\n  updateDisplayList: function (includeIgnore) {\n    this._displayListLen = 0;\n    var roots = this._roots;\n    var displayList = this._displayList;\n\n    for (var i = 0, len = roots.length; i < len; i++) {\n      this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n    }\n\n    displayList.length = this._displayListLen; // for (var i = 0, len = displayList.length; i < len; i++) {\n    //     displayList[i].__renderidx = i;\n    // }\n    // displayList.sort(shapeCompareFunc);\n\n    env.canvasSupported && timsort(displayList, shapeCompareFunc);\n  },\n  _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n    if (el.ignore && !includeIgnore) {\n      return;\n    }\n\n    el.beforeUpdate();\n\n    if (el.__dirty) {\n      el.update();\n    }\n\n    el.afterUpdate();\n    var userSetClipPath = el.clipPath;\n\n    if (userSetClipPath) {\n      // FIXME 效率影响\n      if (clipPaths) {\n        clipPaths = clipPaths.slice();\n      } else {\n        clipPaths = [];\n      }\n\n      var currentClipPath = userSetClipPath;\n      var parentClipPath = el; // Recursively add clip path\n\n      while (currentClipPath) {\n        // clipPath 的变换是基于使用这个 clipPath 的元素\n        currentClipPath.parent = parentClipPath;\n        currentClipPath.updateTransform();\n        clipPaths.push(currentClipPath);\n        parentClipPath = currentClipPath;\n        currentClipPath = currentClipPath.clipPath;\n      }\n    }\n\n    if (el.isGroup) {\n      var children = el._children;\n\n      for (var i = 0; i < children.length; i++) {\n        var child = children[i]; // Force to mark as dirty if group is dirty\n        // FIXME __dirtyPath ?\n\n        if (el.__dirty) {\n          child.__dirty = true;\n        }\n\n        this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n      } // Mark group clean here\n\n\n      el.__dirty = false;\n    } else {\n      el.__clipPaths = clipPaths;\n      this._displayList[this._displayListLen++] = el;\n    }\n  },\n\n  /**\n   * 添加图形(Shape)或者组(Group)到根节点\n   * @param {module:zrender/Element} el\n   */\n  addRoot: function (el) {\n    if (el.__storage === this) {\n      return;\n    }\n\n    if (el instanceof Group) {\n      el.addChildrenToStorage(this);\n    }\n\n    this.addToStorage(el);\n\n    this._roots.push(el);\n  },\n\n  /**\n   * 删除指定的图形(Shape)或者组(Group)\n   * @param {string|Array.<string>} [el] 如果为空清空整个Storage\n   */\n  delRoot: function (el) {\n    if (el == null) {\n      // 不指定el清空\n      for (var i = 0; i < this._roots.length; i++) {\n        var root = this._roots[i];\n\n        if (root instanceof Group) {\n          root.delChildrenFromStorage(this);\n        }\n      }\n\n      this._roots = [];\n      this._displayList = [];\n      this._displayListLen = 0;\n      return;\n    }\n\n    if (el instanceof Array) {\n      for (var i = 0, l = el.length; i < l; i++) {\n        this.delRoot(el[i]);\n      }\n\n      return;\n    }\n\n    var idx = util.indexOf(this._roots, el);\n\n    if (idx >= 0) {\n      this.delFromStorage(el);\n\n      this._roots.splice(idx, 1);\n\n      if (el instanceof Group) {\n        el.delChildrenFromStorage(this);\n      }\n    }\n  },\n  addToStorage: function (el) {\n    el.__storage = this;\n    el.dirty(false);\n    return this;\n  },\n  delFromStorage: function (el) {\n    if (el) {\n      el.__storage = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * 清空并且释放Storage\n   */\n  dispose: function () {\n    this._renderList = this._roots = null;\n  },\n  displayableSortFunc: shapeCompareFunc\n};\nvar _default = Storage;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 189\n// module chunks = 0","var util = require(\"../core/util\");\n\nvar _event = require(\"../core/event\");\n\nvar Dispatcher = _event.Dispatcher;\n\nvar requestAnimationFrame = require(\"./requestAnimationFrame\");\n\nvar Animator = require(\"./Animator\");\n\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n/**\n * @typedef {Object} IZRenderStage\n * @property {Function} update\n */\n\n/**\n * @alias module:zrender/animation/Animation\n * @constructor\n * @param {Object} [options]\n * @param {Function} [options.onframe]\n * @param {IZRenderStage} [options.stage]\n * @example\n *     var animation = new Animation();\n *     var obj = {\n *         x: 100,\n *         y: 100\n *     };\n *     animation.animate(node.position)\n *         .when(1000, {\n *             x: 500,\n *             y: 500\n *         })\n *         .when(2000, {\n *             x: 100,\n *             y: 100\n *         })\n *         .start('spline');\n */\nvar Animation = function (options) {\n  options = options || {};\n  this.stage = options.stage || {};\n\n  this.onframe = options.onframe || function () {}; // private properties\n\n\n  this._clips = [];\n  this._running = false;\n  this._time;\n  this._pausedTime;\n  this._pauseStart;\n  this._paused = false;\n  Dispatcher.call(this);\n};\n\nAnimation.prototype = {\n  constructor: Animation,\n\n  /**\n   * 添加 clip\n   * @param {module:zrender/animation/Clip} clip\n   */\n  addClip: function (clip) {\n    this._clips.push(clip);\n  },\n\n  /**\n   * 添加 animator\n   * @param {module:zrender/animation/Animator} animator\n   */\n  addAnimator: function (animator) {\n    animator.animation = this;\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.addClip(clips[i]);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Clip} clip\n   */\n  removeClip: function (clip) {\n    var idx = util.indexOf(this._clips, clip);\n\n    if (idx >= 0) {\n      this._clips.splice(idx, 1);\n    }\n  },\n\n  /**\n   * 删除动画片段\n   * @param {module:zrender/animation/Animator} animator\n   */\n  removeAnimator: function (animator) {\n    var clips = animator.getClips();\n\n    for (var i = 0; i < clips.length; i++) {\n      this.removeClip(clips[i]);\n    }\n\n    animator.animation = null;\n  },\n  _update: function () {\n    var time = new Date().getTime() - this._pausedTime;\n\n    var delta = time - this._time;\n    var clips = this._clips;\n    var len = clips.length;\n    var deferredEvents = [];\n    var deferredClips = [];\n\n    for (var i = 0; i < len; i++) {\n      var clip = clips[i];\n      var e = clip.step(time, delta); // Throw out the events need to be called after\n      // stage.update, like destroy\n\n      if (e) {\n        deferredEvents.push(e);\n        deferredClips.push(clip);\n      }\n    } // Remove the finished clip\n\n\n    for (var i = 0; i < len;) {\n      if (clips[i]._needsRemove) {\n        clips[i] = clips[len - 1];\n        clips.pop();\n        len--;\n      } else {\n        i++;\n      }\n    }\n\n    len = deferredEvents.length;\n\n    for (var i = 0; i < len; i++) {\n      deferredClips[i].fire(deferredEvents[i]);\n    }\n\n    this._time = time;\n    this.onframe(delta);\n    this.trigger('frame', delta);\n\n    if (this.stage.update) {\n      this.stage.update();\n    }\n  },\n  _startLoop: function () {\n    var self = this;\n    this._running = true;\n\n    function step() {\n      if (self._running) {\n        requestAnimationFrame(step);\n        !self._paused && self._update();\n      }\n    }\n\n    requestAnimationFrame(step);\n  },\n\n  /**\n   * 开始运行动画\n   */\n  start: function () {\n    this._time = new Date().getTime();\n    this._pausedTime = 0;\n\n    this._startLoop();\n  },\n\n  /**\n   * 停止运行动画\n   */\n  stop: function () {\n    this._running = false;\n  },\n\n  /**\n   * Pause\n   */\n  pause: function () {\n    if (!this._paused) {\n      this._pauseStart = new Date().getTime();\n      this._paused = true;\n    }\n  },\n\n  /**\n   * Resume\n   */\n  resume: function () {\n    if (this._paused) {\n      this._pausedTime += new Date().getTime() - this._pauseStart;\n      this._paused = false;\n    }\n  },\n\n  /**\n   * 清除所有动画片段\n   */\n  clear: function () {\n    this._clips = [];\n  },\n\n  /**\n   * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n   * @param  {Object} target\n   * @param  {Object} options\n   * @param  {boolean} [options.loop=false] 是否循环播放动画\n   * @param  {Function} [options.getter=null]\n   *         如果指定getter函数，会通过getter函数取属性值\n   * @param  {Function} [options.setter=null]\n   *         如果指定setter函数，会通过setter函数设置属性值\n   * @return {module:zrender/animation/Animation~Animator}\n   */\n  // TODO Gap\n  animate: function (target, options) {\n    options = options || {};\n    var animator = new Animator(target, options.loop, options.getter, options.setter);\n    this.addAnimator(animator);\n    return animator;\n  }\n};\nutil.mixin(Animation, Dispatcher);\nvar _default = Animation;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 190\n// module chunks = 0","var easingFuncs = require(\"./easing\");\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\nfunction Clip(options) {\n  this._target = options.target; // 生命周期\n\n  this._life = options.life || 1000; // 延时\n\n  this._delay = options.delay || 0; // 开始时间\n  // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n\n  this._initialized = false; // 是否循环\n\n  this.loop = options.loop == null ? false : options.loop;\n  this.gap = options.gap || 0;\n  this.easing = options.easing || 'Linear';\n  this.onframe = options.onframe;\n  this.ondestroy = options.ondestroy;\n  this.onrestart = options.onrestart;\n  this._pausedTime = 0;\n  this._paused = false;\n}\n\nClip.prototype = {\n  constructor: Clip,\n  step: function (globalTime, deltaTime) {\n    // Set startTime on first step, or _startTime may has milleseconds different between clips\n    // PENDING\n    if (!this._initialized) {\n      this._startTime = globalTime + this._delay;\n      this._initialized = true;\n    }\n\n    if (this._paused) {\n      this._pausedTime += deltaTime;\n      return;\n    }\n\n    var percent = (globalTime - this._startTime - this._pausedTime) / this._life; // 还没开始\n\n    if (percent < 0) {\n      return;\n    }\n\n    percent = Math.min(percent, 1);\n    var easing = this.easing;\n    var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n    var schedule = typeof easingFunc === 'function' ? easingFunc(percent) : percent;\n    this.fire('frame', schedule); // 结束\n\n    if (percent == 1) {\n      if (this.loop) {\n        this.restart(globalTime); // 重新开始周期\n        // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n\n        return 'restart';\n      } // 动画完成将这个控制器标识为待删除\n      // 在Animation.update中进行批量删除\n\n\n      this._needsRemove = true;\n      return 'destroy';\n    }\n\n    return null;\n  },\n  restart: function (globalTime) {\n    var remainder = (globalTime - this._startTime - this._pausedTime) % this._life;\n    this._startTime = globalTime - remainder + this.gap;\n    this._pausedTime = 0;\n    this._needsRemove = false;\n  },\n  fire: function (eventType, arg) {\n    eventType = 'on' + eventType;\n\n    if (this[eventType]) {\n      this[eventType](this._target, arg);\n    }\n  },\n  pause: function () {\n    this._paused = true;\n  },\n  resume: function () {\n    this._paused = false;\n  }\n};\nvar _default = Clip;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 191\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\nvar easing = {\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  linear: function (k) {\n    return k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticIn: function (k) {\n    return k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticOut: function (k) {\n    return k * (2 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quadraticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k;\n    }\n\n    return -0.5 * (--k * (k - 2) - 1);\n  },\n  // 三次方的缓动（t^3）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicIn: function (k) {\n    return k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicOut: function (k) {\n    return --k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  cubicInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  },\n  // 四次方的缓动（t^4）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticIn: function (k) {\n    return k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticOut: function (k) {\n    return 1 - --k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quarticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k;\n    }\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  },\n  // 五次方的缓动（t^5）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticIn: function (k) {\n    return k * k * k * k * k;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticOut: function (k) {\n    return --k * k * k * k * k + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  quinticInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return 0.5 * k * k * k * k * k;\n    }\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  },\n  // 正弦曲线的缓动（sin(t)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalIn: function (k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalOut: function (k) {\n    return Math.sin(k * Math.PI / 2);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  sinusoidalInOut: function (k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  },\n  // 指数曲线的缓动（2^t）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialIn: function (k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialOut: function (k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  exponentialInOut: function (k) {\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if ((k *= 2) < 1) {\n      return 0.5 * Math.pow(1024, k - 1);\n    }\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  },\n  // 圆形曲线的缓动（sqrt(1-t^2)）\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularIn: function (k) {\n    return 1 - Math.sqrt(1 - k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularOut: function (k) {\n    return Math.sqrt(1 - --k * k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  circularInOut: function (k) {\n    if ((k *= 2) < 1) {\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n    }\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  },\n  // 创建类似于弹簧在停止前来回振荡的动画\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticIn: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    return a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  elasticInOut: function (k) {\n    var s;\n    var a = 0.1;\n    var p = 0.4;\n\n    if (k === 0) {\n      return 0;\n    }\n\n    if (k === 1) {\n      return 1;\n    }\n\n    if (!a || a < 1) {\n      a = 1;\n      s = p / 4;\n    } else {\n      s = p * Math.asin(1 / a) / (2 * Math.PI);\n    }\n\n    if ((k *= 2) < 1) {\n      return -0.5 * (a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\n    }\n\n    return a * Math.pow(2, -10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n  },\n  // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backIn: function (k) {\n    var s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backOut: function (k) {\n    var s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  backInOut: function (k) {\n    var s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1) {\n      return 0.5 * (k * k * ((s + 1) * k - s));\n    }\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  },\n  // 创建弹跳效果\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceIn: function (k) {\n    return 1 - easing.bounceOut(1 - k);\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceOut: function (k) {\n    if (k < 1 / 2.75) {\n      return 7.5625 * k * k;\n    } else if (k < 2 / 2.75) {\n      return 7.5625 * (k -= 1.5 / 2.75) * k + 0.75;\n    } else if (k < 2.5 / 2.75) {\n      return 7.5625 * (k -= 2.25 / 2.75) * k + 0.9375;\n    } else {\n      return 7.5625 * (k -= 2.625 / 2.75) * k + 0.984375;\n    }\n  },\n\n  /**\n  * @param {number} k\n  * @return {number}\n  */\n  bounceInOut: function (k) {\n    if (k < 0.5) {\n      return easing.bounceIn(k * 2) * 0.5;\n    }\n\n    return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n};\nvar _default = easing;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 192\n// module chunks = 0","var _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\nvar PI2 = Math.PI * 2;\n/**\n * 圆弧描边包含判断\n * @param  {number}  cx\n * @param  {number}  cy\n * @param  {number}  r\n * @param  {number}  startAngle\n * @param  {number}  endAngle\n * @param  {boolean}  anticlockwise\n * @param  {number} lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {Boolean}\n */\n\nfunction containStroke(cx, cy, r, startAngle, endAngle, anticlockwise, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  x -= cx;\n  y -= cy;\n  var d = Math.sqrt(x * x + y * y);\n\n  if (d - _l > r || d + _l < r) {\n    return false;\n  }\n\n  if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n    // Is a circle\n    return true;\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var angle = Math.atan2(y, x);\n\n  if (angle < 0) {\n    angle += PI2;\n  }\n\n  return angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 193\n// module chunks = 0","var curve = require(\"../core/curve\");\n\n/**\n * 三次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  x3\n * @param  {number}  y3\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l) {\n    return false;\n  }\n\n  var d = curve.cubicProjectPoint(x0, y0, x1, y1, x2, y2, x3, y3, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 194\n// module chunks = 0","/**\n * 线段包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth;\n  var _a = 0;\n  var _b = x0; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l || y < y0 - _l && y < y1 - _l || x > x0 + _l && x > x1 + _l || x < x0 - _l && x < x1 - _l) {\n    return false;\n  }\n\n  if (x0 !== x1) {\n    _a = (y0 - y1) / (x0 - x1);\n    _b = (x0 * y1 - x1 * y0) / (x0 - x1);\n  } else {\n    return Math.abs(x - x0) <= _l / 2;\n  }\n\n  var tmp = _a * x - y + _b;\n\n  var _s = tmp * tmp / (_a * _a + 1);\n\n  return _s <= _l / 2 * _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 195\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar line = require(\"./line\");\n\nvar cubic = require(\"./cubic\");\n\nvar quadratic = require(\"./quadratic\");\n\nvar arc = require(\"./arc\");\n\nvar _util = require(\"./util\");\n\nvar normalizeRadian = _util.normalizeRadian;\n\nvar curve = require(\"../core/curve\");\n\nvar windingLine = require(\"./windingLine\");\n\nvar CMD = PathProxy.CMD;\nvar PI2 = Math.PI * 2;\nvar EPSILON = 1e-4;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n} // 临时数组\n\n\nvar roots = [-1, -1, -1];\nvar extrema = [-1, -1];\n\nfunction swapExtrema() {\n  var tmp = extrema[0];\n  extrema[0] = extrema[1];\n  extrema[1] = tmp;\n}\n\nfunction windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 && y > y3 || y < y0 && y < y1 && y < y2 && y < y3) {\n    return 0;\n  }\n\n  var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var w = 0;\n    var nExtrema = -1;\n    var y0_, y1_;\n\n    for (var i = 0; i < nRoots; i++) {\n      var t = roots[i]; // Avoid winding error when intersection point is the connect point of two line of polygon\n\n      var unit = t === 0 || t === 1 ? 0.5 : 1;\n      var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n\n      if (x_ < x) {\n        // Quick reject\n        continue;\n      }\n\n      if (nExtrema < 0) {\n        nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n\n        if (extrema[1] < extrema[0] && nExtrema > 1) {\n          swapExtrema();\n        }\n\n        y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n\n        if (nExtrema > 1) {\n          y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n        }\n      }\n\n      if (nExtrema == 2) {\n        // 分成三段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else if (t < extrema[1]) {\n          w += y1_ < y0_ ? unit : -unit;\n        } else {\n          w += y3 < y1_ ? unit : -unit;\n        }\n      } else {\n        // 分成两段单调函数\n        if (t < extrema[0]) {\n          w += y0_ < y0 ? unit : -unit;\n        } else {\n          w += y3 < y0_ ? unit : -unit;\n        }\n      }\n    }\n\n    return w;\n  }\n}\n\nfunction windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n  // Quick reject\n  if (y > y0 && y > y1 && y > y2 || y < y0 && y < y1 && y < y2) {\n    return 0;\n  }\n\n  var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n\n  if (nRoots === 0) {\n    return 0;\n  } else {\n    var t = curve.quadraticExtremum(y0, y1, y2);\n\n    if (t >= 0 && t <= 1) {\n      var w = 0;\n      var y_ = curve.quadraticAt(y0, y1, y2, t);\n\n      for (var i = 0; i < nRoots; i++) {\n        // Remove one endpoint.\n        var unit = roots[i] === 0 || roots[i] === 1 ? 0.5 : 1;\n        var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n\n        if (x_ < x) {\n          // Quick reject\n          continue;\n        }\n\n        if (roots[i] < t) {\n          w += y_ < y0 ? unit : -unit;\n        } else {\n          w += y2 < y_ ? unit : -unit;\n        }\n      }\n\n      return w;\n    } else {\n      // Remove one endpoint.\n      var unit = roots[0] === 0 || roots[0] === 1 ? 0.5 : 1;\n      var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n\n      if (x_ < x) {\n        // Quick reject\n        return 0;\n      }\n\n      return y2 < y0 ? unit : -unit;\n    }\n  }\n} // TODO\n// Arc 旋转\n\n\nfunction windingArc(cx, cy, r, startAngle, endAngle, anticlockwise, x, y) {\n  y -= cy;\n\n  if (y > r || y < -r) {\n    return 0;\n  }\n\n  var tmp = Math.sqrt(r * r - y * y);\n  roots[0] = -tmp;\n  roots[1] = tmp;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff < 1e-4) {\n    return 0;\n  }\n\n  if (diff % PI2 < 1e-4) {\n    // Is a circle\n    startAngle = 0;\n    endAngle = PI2;\n    var dir = anticlockwise ? 1 : -1;\n\n    if (x >= roots[0] + cx && x <= roots[1] + cx) {\n      return dir;\n    } else {\n      return 0;\n    }\n  }\n\n  if (anticlockwise) {\n    var tmp = startAngle;\n    startAngle = normalizeRadian(endAngle);\n    endAngle = normalizeRadian(tmp);\n  } else {\n    startAngle = normalizeRadian(startAngle);\n    endAngle = normalizeRadian(endAngle);\n  }\n\n  if (startAngle > endAngle) {\n    endAngle += PI2;\n  }\n\n  var w = 0;\n\n  for (var i = 0; i < 2; i++) {\n    var x_ = roots[i];\n\n    if (x_ + cx > x) {\n      var angle = Math.atan2(y, x_);\n      var dir = anticlockwise ? 1 : -1;\n\n      if (angle < 0) {\n        angle = PI2 + angle;\n      }\n\n      if (angle >= startAngle && angle <= endAngle || angle + PI2 >= startAngle && angle + PI2 <= endAngle) {\n        if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n          dir = -dir;\n        }\n\n        w += dir;\n      }\n    }\n  }\n\n  return w;\n}\n\nfunction containPath(data, lineWidth, isStroke, x, y) {\n  var w = 0;\n  var xi = 0;\n  var yi = 0;\n  var x0 = 0;\n  var y0 = 0;\n\n  for (var i = 0; i < data.length;) {\n    var cmd = data[i++]; // Begin a new subpath\n\n    if (cmd === CMD.M && i > 1) {\n      // Close previous subpath\n      if (!isStroke) {\n        w += windingLine(xi, yi, x0, y0, x, y);\n      } // 如果被任何一个 subpath 包含\n      // if (w !== 0) {\n      //     return true;\n      // }\n\n    }\n\n    if (i == 1) {\n      // 如果第一个命令是 L, C, Q\n      // 则 previous point 同绘制命令的第一个 point\n      //\n      // 第一个命令为 Arc 的情况下会在后面特殊处理\n      xi = data[i];\n      yi = data[i + 1];\n      x0 = xi;\n      y0 = yi;\n    }\n\n    switch (cmd) {\n      case CMD.M:\n        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n        // 在 closePath 的时候使用\n        x0 = data[i++];\n        y0 = data[i++];\n        xi = x0;\n        yi = y0;\n        break;\n\n      case CMD.L:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n          w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.C:\n        if (isStroke) {\n          if (cubic.containStroke(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingCubic(xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.Q:\n        if (isStroke) {\n          if (quadratic.containStroke(xi, yi, data[i++], data[i++], data[i], data[i + 1], lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          w += windingQuadratic(xi, yi, data[i++], data[i++], data[i], data[i + 1], x, y) || 0;\n        }\n\n        xi = data[i++];\n        yi = data[i++];\n        break;\n\n      case CMD.A:\n        // TODO Arc 判断的开销比较大\n        var cx = data[i++];\n        var cy = data[i++];\n        var rx = data[i++];\n        var ry = data[i++];\n        var theta = data[i++];\n        var dTheta = data[i++]; // TODO Arc 旋转\n\n        var psi = data[i++];\n        var anticlockwise = 1 - data[i++];\n        var x1 = Math.cos(theta) * rx + cx;\n        var y1 = Math.sin(theta) * ry + cy; // 不是直接使用 arc 命令\n\n        if (i > 1) {\n          w += windingLine(xi, yi, x1, y1, x, y);\n        } else {\n          // 第一个命令起点还未定义\n          x0 = x1;\n          y0 = y1;\n        } // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n\n\n        var _x = (x - cx) * ry / rx + cx;\n\n        if (isStroke) {\n          if (arc.containStroke(cx, cy, ry, theta, theta + dTheta, anticlockwise, lineWidth, _x, y)) {\n            return true;\n          }\n        } else {\n          w += windingArc(cx, cy, ry, theta, theta + dTheta, anticlockwise, _x, y);\n        }\n\n        xi = Math.cos(theta + dTheta) * rx + cx;\n        yi = Math.sin(theta + dTheta) * ry + cy;\n        break;\n\n      case CMD.R:\n        x0 = xi = data[i++];\n        y0 = yi = data[i++];\n        var width = data[i++];\n        var height = data[i++];\n        var x1 = x0 + width;\n        var y1 = y0 + height;\n\n        if (isStroke) {\n          if (line.containStroke(x0, y0, x1, y0, lineWidth, x, y) || line.containStroke(x1, y0, x1, y1, lineWidth, x, y) || line.containStroke(x1, y1, x0, y1, lineWidth, x, y) || line.containStroke(x0, y1, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // FIXME Clockwise ?\n          w += windingLine(x1, y0, x1, y1, x, y);\n          w += windingLine(x0, y1, x0, y0, x, y);\n        }\n\n        break;\n\n      case CMD.Z:\n        if (isStroke) {\n          if (line.containStroke(xi, yi, x0, y0, lineWidth, x, y)) {\n            return true;\n          }\n        } else {\n          // Close a subpath\n          w += windingLine(xi, yi, x0, y0, x, y); // 如果被任何一个 subpath 包含\n          // FIXME subpaths may overlap\n          // if (w !== 0) {\n          //     return true;\n          // }\n        }\n\n        xi = x0;\n        yi = y0;\n        break;\n    }\n  }\n\n  if (!isStroke && !isAroundEqual(yi, y0)) {\n    w += windingLine(xi, yi, x0, y0, x, y) || 0;\n  }\n\n  return w !== 0;\n}\n\nfunction contain(pathData, x, y) {\n  return containPath(pathData, 0, false, x, y);\n}\n\nfunction containStroke(pathData, lineWidth, x, y) {\n  return containPath(pathData, lineWidth, true, x, y);\n}\n\nexports.contain = contain;\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 196\n// module chunks = 0","var _curve = require(\"../core/curve\");\n\nvar quadraticProjectPoint = _curve.quadraticProjectPoint;\n\n/**\n * 二次贝塞尔曲线描边包含判断\n * @param  {number}  x0\n * @param  {number}  y0\n * @param  {number}  x1\n * @param  {number}  y1\n * @param  {number}  x2\n * @param  {number}  y2\n * @param  {number}  lineWidth\n * @param  {number}  x\n * @param  {number}  y\n * @return {boolean}\n */\nfunction containStroke(x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n  if (lineWidth === 0) {\n    return false;\n  }\n\n  var _l = lineWidth; // Quick reject\n\n  if (y > y0 + _l && y > y1 + _l && y > y2 + _l || y < y0 - _l && y < y1 - _l && y < y2 - _l || x > x0 + _l && x > x1 + _l && x > x2 + _l || x < x0 - _l && x < x1 - _l && x < x2 - _l) {\n    return false;\n  }\n\n  var d = quadraticProjectPoint(x0, y0, x1, y1, x2, y2, x, y, null);\n  return d <= _l / 2;\n}\n\nexports.containStroke = containStroke;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 197\n// module chunks = 0","function windingLine(x0, y0, x1, y1, x, y) {\n  if (y > y0 && y > y1 || y < y0 && y < y1) {\n    return 0;\n  } // Ignore horizontal line\n\n\n  if (y1 === y0) {\n    return 0;\n  }\n\n  var dir = y1 < y0 ? 1 : -1;\n  var t = (y - y0) / (y1 - y0); // Avoid winding error when intersection point is the connect point of two line of polygon\n\n  if (t === 1 || t === 0) {\n    dir = y1 < y0 ? 0.5 : -0.5;\n  }\n\n  var x_ = t * (x1 - x0) + x0;\n  return x_ > x ? dir : 0;\n}\n\nmodule.exports = windingLine;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 198\n// module chunks = 0","var eventUtil = require(\"./event\");\n\n/**\n * Only implements needed gestures for mobile.\n */\nvar GestureMgr = function () {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  this._track = [];\n};\n\nGestureMgr.prototype = {\n  constructor: GestureMgr,\n  recognize: function (event, target, root) {\n    this._doTrack(event, target, root);\n\n    return this._recognize(event);\n  },\n  clear: function () {\n    this._track.length = 0;\n    return this;\n  },\n  _doTrack: function (event, target, root) {\n    var touches = event.touches;\n\n    if (!touches) {\n      return;\n    }\n\n    var trackItem = {\n      points: [],\n      touches: [],\n      target: target,\n      event: event\n    };\n\n    for (var i = 0, len = touches.length; i < len; i++) {\n      var touch = touches[i];\n      var pos = eventUtil.clientToLocal(root, touch, {});\n      trackItem.points.push([pos.zrX, pos.zrY]);\n      trackItem.touches.push(touch);\n    }\n\n    this._track.push(trackItem);\n  },\n  _recognize: function (event) {\n    for (var eventName in recognizers) {\n      if (recognizers.hasOwnProperty(eventName)) {\n        var gestureInfo = recognizers[eventName](this._track, event);\n\n        if (gestureInfo) {\n          return gestureInfo;\n        }\n      }\n    }\n  }\n};\n\nfunction dist(pointPair) {\n  var dx = pointPair[1][0] - pointPair[0][0];\n  var dy = pointPair[1][1] - pointPair[0][1];\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nfunction center(pointPair) {\n  return [(pointPair[0][0] + pointPair[1][0]) / 2, (pointPair[0][1] + pointPair[1][1]) / 2];\n}\n\nvar recognizers = {\n  pinch: function (track, event) {\n    var trackLen = track.length;\n\n    if (!trackLen) {\n      return;\n    }\n\n    var pinchEnd = (track[trackLen - 1] || {}).points;\n    var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n    if (pinchPre && pinchPre.length > 1 && pinchEnd && pinchEnd.length > 1) {\n      var pinchScale = dist(pinchEnd) / dist(pinchPre);\n      !isFinite(pinchScale) && (pinchScale = 1);\n      event.pinchScale = pinchScale;\n      var pinchCenter = center(pinchEnd);\n      event.pinchX = pinchCenter[0];\n      event.pinchY = pinchCenter[1];\n      return {\n        type: 'pinch',\n        target: track[0].target,\n        event: event\n      };\n    }\n  } // Only pinch currently.\n\n};\nvar _default = GestureMgr;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 199\n// module chunks = 0","// Myers' Diff Algorithm\n// Modified from https://github.com/kpdecker/jsdiff/blob/master/src/diff/base.js\nfunction Diff() {}\n\nDiff.prototype = {\n  diff: function (oldArr, newArr, equals) {\n    if (!equals) {\n      equals = function (a, b) {\n        return a === b;\n      };\n    }\n\n    this.equals = equals;\n    var self = this;\n    oldArr = oldArr.slice();\n    newArr = newArr.slice(); // Allow subclasses to massage the input prior to running\n\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newArr, oldArr, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      var indices = [];\n\n      for (var i = 0; i < newArr.length; i++) {\n        indices.push(i);\n      } // Identity per the equality and tokenizer\n\n\n      return [{\n        indices: indices,\n        count: newArr.length\n      }];\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath;\n        var addPath = bestPath[diagonalPath - 1];\n        var removePath = bestPath[diagonalPath + 1];\n        var oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen;\n        var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        oldPos = self.extractCommon(basePath, newArr, oldArr, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n          return buildValues(self, basePath.components, newArr, oldArr);\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    }\n\n    while (editLength <= maxEditLength) {\n      var ret = execEditLength();\n\n      if (ret) {\n        return ret;\n      }\n    }\n  },\n  pushComponent: function (components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n  extractCommon: function (basePath, newArr, oldArr, diagonalPath) {\n    var newLen = newArr.length;\n    var oldLen = oldArr.length;\n    var newPos = basePath.newPos;\n    var oldPos = newPos - diagonalPath;\n    var commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newArr[newPos + 1], oldArr[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n  tokenize: function (value) {\n    return value.slice();\n  },\n  join: function (value) {\n    return value.slice();\n  }\n};\n\nfunction buildValues(diff, components, newArr, oldArr) {\n  var componentPos = 0;\n  var componentLen = components.length;\n  var newPos = 0;\n  var oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      var indices = [];\n\n      for (var i = newPos; i < newPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      var indices = [];\n\n      for (var i = oldPos; i < oldPos + component.count; i++) {\n        indices.push(i);\n      }\n\n      component.indices = indices;\n      oldPos += component.count;\n    }\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n\nvar arrayDiff = new Diff();\n\nfunction _default(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/arrayDiff2.js\n// module id = 200\n// module chunks = 0","var vec2 = require(\"./vector\");\n\nvar curve = require(\"./curve\");\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathSin = Math.sin;\nvar mathCos = Math.cos;\nvar PI2 = Math.PI * 2;\nvar start = vec2.create();\nvar end = vec2.create();\nvar extremity = vec2.create();\n/**\n * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n * @module zrender/core/bbox\n * @param {Array<Object>} points 顶点数组\n * @param {number} min\n * @param {number} max\n */\n\nfunction fromPoints(points, min, max) {\n  if (points.length === 0) {\n    return;\n  }\n\n  var p = points[0];\n  var left = p[0];\n  var right = p[0];\n  var top = p[1];\n  var bottom = p[1];\n  var i;\n\n  for (i = 1; i < points.length; i++) {\n    p = points[i];\n    left = mathMin(left, p[0]);\n    right = mathMax(right, p[0]);\n    top = mathMin(top, p[1]);\n    bottom = mathMax(bottom, p[1]);\n  }\n\n  min[0] = left;\n  min[1] = top;\n  max[0] = right;\n  max[1] = bottom;\n}\n/**\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromLine(x0, y0, x1, y1, min, max) {\n  min[0] = mathMin(x0, x1);\n  min[1] = mathMin(y0, y1);\n  max[0] = mathMax(x0, x1);\n  max[1] = mathMax(y0, y1);\n}\n\nvar xDim = [];\nvar yDim = [];\n/**\n * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {number} x3\n * @param {number} y3\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\nfunction fromCubic(x0, y0, x1, y1, x2, y2, x3, y3, min, max) {\n  var cubicExtrema = curve.cubicExtrema;\n  var cubicAt = curve.cubicAt;\n  var i;\n  var n = cubicExtrema(x0, x1, x2, x3, xDim);\n  min[0] = Infinity;\n  min[1] = Infinity;\n  max[0] = -Infinity;\n  max[1] = -Infinity;\n\n  for (i = 0; i < n; i++) {\n    var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n    min[0] = mathMin(x, min[0]);\n    max[0] = mathMax(x, max[0]);\n  }\n\n  n = cubicExtrema(y0, y1, y2, y3, yDim);\n\n  for (i = 0; i < n; i++) {\n    var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n    min[1] = mathMin(y, min[1]);\n    max[1] = mathMax(y, max[1]);\n  }\n\n  min[0] = mathMin(x0, min[0]);\n  max[0] = mathMax(x0, max[0]);\n  min[0] = mathMin(x3, min[0]);\n  max[0] = mathMax(x3, max[0]);\n  min[1] = mathMin(y0, min[1]);\n  max[1] = mathMax(y0, max[1]);\n  min[1] = mathMin(y3, min[1]);\n  max[1] = mathMax(y3, max[1]);\n}\n/**\n * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n * @memberOf module:zrender/core/bbox\n * @param {number} x0\n * @param {number} y0\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromQuadratic(x0, y0, x1, y1, x2, y2, min, max) {\n  var quadraticExtremum = curve.quadraticExtremum;\n  var quadraticAt = curve.quadraticAt; // Find extremities, where derivative in x dim or y dim is zero\n\n  var tx = mathMax(mathMin(quadraticExtremum(x0, x1, x2), 1), 0);\n  var ty = mathMax(mathMin(quadraticExtremum(y0, y1, y2), 1), 0);\n  var x = quadraticAt(x0, x1, x2, tx);\n  var y = quadraticAt(y0, y1, y2, ty);\n  min[0] = mathMin(x0, x2, x);\n  min[1] = mathMin(y0, y2, y);\n  max[0] = mathMax(x0, x2, x);\n  max[1] = mathMax(y0, y2, y);\n}\n/**\n * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n * @method\n * @memberOf module:zrender/core/bbox\n * @param {number} x\n * @param {number} y\n * @param {number} rx\n * @param {number} ry\n * @param {number} startAngle\n * @param {number} endAngle\n * @param {number} anticlockwise\n * @param {Array.<number>} min\n * @param {Array.<number>} max\n */\n\n\nfunction fromArc(x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max) {\n  var vec2Min = vec2.min;\n  var vec2Max = vec2.max;\n  var diff = Math.abs(startAngle - endAngle);\n\n  if (diff % PI2 < 1e-4 && diff > 1e-4) {\n    // Is a circle\n    min[0] = x - rx;\n    min[1] = y - ry;\n    max[0] = x + rx;\n    max[1] = y + ry;\n    return;\n  }\n\n  start[0] = mathCos(startAngle) * rx + x;\n  start[1] = mathSin(startAngle) * ry + y;\n  end[0] = mathCos(endAngle) * rx + x;\n  end[1] = mathSin(endAngle) * ry + y;\n  vec2Min(min, start, end);\n  vec2Max(max, start, end); // Thresh to [0, Math.PI * 2]\n\n  startAngle = startAngle % PI2;\n\n  if (startAngle < 0) {\n    startAngle = startAngle + PI2;\n  }\n\n  endAngle = endAngle % PI2;\n\n  if (endAngle < 0) {\n    endAngle = endAngle + PI2;\n  }\n\n  if (startAngle > endAngle && !anticlockwise) {\n    endAngle += PI2;\n  } else if (startAngle < endAngle && anticlockwise) {\n    startAngle += PI2;\n  }\n\n  if (anticlockwise) {\n    var tmp = endAngle;\n    endAngle = startAngle;\n    startAngle = tmp;\n  } // var number = 0;\n  // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n\n\n  for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n    if (angle > startAngle) {\n      extremity[0] = mathCos(angle) * rx + x;\n      extremity[1] = mathSin(angle) * ry + y;\n      vec2Min(min, extremity, min);\n      vec2Max(max, extremity, max);\n    }\n  }\n}\n\nexports.fromPoints = fromPoints;\nexports.fromLine = fromLine;\nexports.fromCubic = fromCubic;\nexports.fromQuadratic = fromQuadratic;\nexports.fromArc = fromArc;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 201\n// module chunks = 0","var _event = require(\"../core/event\");\n\nvar addEventListener = _event.addEventListener;\nvar removeEventListener = _event.removeEventListener;\nvar normalizeEvent = _event.normalizeEvent;\n\nvar zrUtil = require(\"../core/util\");\n\nvar Eventful = require(\"../mixin/Eventful\");\n\nvar env = require(\"../core/env\");\n\nvar GestureMgr = require(\"../core/GestureMgr\");\n\nvar TOUCH_CLICK_DELAY = 300;\nvar mouseHandlerNames = ['click', 'dblclick', 'mousewheel', 'mouseout', 'mouseup', 'mousedown', 'mousemove', 'contextmenu'];\nvar touchHandlerNames = ['touchstart', 'touchend', 'touchmove'];\nvar pointerEventNames = {\n  pointerdown: 1,\n  pointerup: 1,\n  pointermove: 1,\n  pointerout: 1\n};\nvar pointerHandlerNames = zrUtil.map(mouseHandlerNames, function (name) {\n  var nm = name.replace('mouse', 'pointer');\n  return pointerEventNames[nm] ? nm : name;\n});\n\nfunction eventNameFix(name) {\n  return name === 'mousewheel' && env.browser.firefox ? 'DOMMouseScroll' : name;\n}\n\nfunction processGesture(proxy, event, stage) {\n  var gestureMgr = proxy._gestureMgr;\n  stage === 'start' && gestureMgr.clear();\n  var gestureInfo = gestureMgr.recognize(event, proxy.handler.findHover(event.zrX, event.zrY, null).target, proxy.dom);\n  stage === 'end' && gestureMgr.clear(); // Do not do any preventDefault here. Upper application do that if necessary.\n\n  if (gestureInfo) {\n    var type = gestureInfo.type;\n    event.gestureEvent = type;\n    proxy.handler.dispatchToElement({\n      target: gestureInfo.target\n    }, type, gestureInfo.event);\n  }\n} // function onMSGestureChange(proxy, event) {\n//     if (event.translationX || event.translationY) {\n//         // mousemove is carried by MSGesture to reduce the sensitivity.\n//         proxy.handler.dispatchToElement(event.target, 'mousemove', event);\n//     }\n//     if (event.scale !== 1) {\n//         event.pinchX = event.offsetX;\n//         event.pinchY = event.offsetY;\n//         event.pinchScale = event.scale;\n//         proxy.handler.dispatchToElement(event.target, 'pinch', event);\n//     }\n// }\n\n/**\n * Prevent mouse event from being dispatched after Touch Events action\n * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n * Result: Blocking Mouse Events for 700ms.\n */\n\n\nfunction setTouchTimer(instance) {\n  instance._touching = true;\n  clearTimeout(instance._touchTimer);\n  instance._touchTimer = setTimeout(function () {\n    instance._touching = false;\n  }, 700);\n}\n\nvar domHandlers = {\n  /**\n   * Mouse move handler\n   * @inner\n   * @param {Event} event\n   */\n  mousemove: function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger('mousemove', event);\n  },\n\n  /**\n   * Mouse out handler\n   * @inner\n   * @param {Event} event\n   */\n  mouseout: function (event) {\n    event = normalizeEvent(this.dom, event);\n    var element = event.toElement || event.relatedTarget;\n\n    if (element != this.dom) {\n      while (element && element.nodeType != 9) {\n        // 忽略包含在root中的dom引起的mouseOut\n        if (element === this.dom) {\n          return;\n        }\n\n        element = element.parentNode;\n      }\n    }\n\n    this.trigger('mouseout', event);\n  },\n\n  /**\n   * Touch开始响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchstart: function (event) {\n    // Default mouse behaviour should not be disabled here.\n    // For example, page may needs to be slided.\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    this._lastTouchMoment = new Date();\n    processGesture(this, event, 'start'); // In touch device, trigger `mousemove`(`mouseover`) should\n    // be triggered, and must before `mousedown` triggered.\n\n    domHandlers.mousemove.call(this, event);\n    domHandlers.mousedown.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch移动响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchmove: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'change'); // Mouse move should always be triggered no matter whether\n    // there is gestrue event, because mouse move and pinch may\n    // be used at the same time.\n\n    domHandlers.mousemove.call(this, event);\n    setTouchTimer(this);\n  },\n\n  /**\n   * Touch结束响应函数\n   * @inner\n   * @param {Event} event\n   */\n  touchend: function (event) {\n    event = normalizeEvent(this.dom, event); // Mark touch, which is useful in distinguish touch and\n    // mouse event in upper applicatoin.\n\n    event.zrByTouch = true;\n    processGesture(this, event, 'end');\n    domHandlers.mouseup.call(this, event); // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n    // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n    // we can conveniently implement \"hover style\" in both PC and touch device just\n    // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n    // to remove \"hover style\" on an element, without any additional code for\n    // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n    // style\" will remain for user view)\n    // click event should always be triggered no matter whether\n    // there is gestrue event. System click can not be prevented.\n\n    if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n      domHandlers.click.call(this, event);\n    }\n\n    setTouchTimer(this);\n  },\n  pointerdown: function (event) {\n    domHandlers.mousedown.call(this, event); // if (useMSGuesture(this, event)) {\n    //     this._msGesture.addPointer(event.pointerId);\n    // }\n  },\n  pointermove: function (event) {\n    // FIXME\n    // pointermove is so sensitive that it always triggered when\n    // tap(click) on touch screen, which affect some judgement in\n    // upper application. So, we dont support mousemove on MS touch\n    // device yet.\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mousemove.call(this, event);\n    }\n  },\n  pointerup: function (event) {\n    domHandlers.mouseup.call(this, event);\n  },\n  pointerout: function (event) {\n    // pointerout will be triggered when tap on touch screen\n    // (IE11+/Edge on MS Surface) after click event triggered,\n    // which is inconsistent with the mousout behavior we defined\n    // in touchend. So we unify them.\n    // (check domHandlers.touchend for detailed explanation)\n    if (!isPointerFromTouch(event)) {\n      domHandlers.mouseout.call(this, event);\n    }\n  }\n};\n\nfunction isPointerFromTouch(event) {\n  var pointerType = event.pointerType;\n  return pointerType === 'pen' || pointerType === 'touch';\n} // function useMSGuesture(handlerProxy, event) {\n//     return isPointerFromTouch(event) && !!handlerProxy._msGesture;\n// }\n// Common handlers\n\n\nzrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n  domHandlers[name] = function (event) {\n    event = normalizeEvent(this.dom, event);\n    this.trigger(name, event);\n  };\n});\n/**\n * 为控制类实例初始化dom 事件处理函数\n *\n * @inner\n * @param {module:zrender/Handler} instance 控制类实例\n */\n\nfunction initDomHandler(instance) {\n  zrUtil.each(touchHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(pointerHandlerNames, function (name) {\n    instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n  });\n  zrUtil.each(mouseHandlerNames, function (name) {\n    instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n  });\n\n  function makeMouseHandler(fn, instance) {\n    return function () {\n      if (instance._touching) {\n        return;\n      }\n\n      return fn.apply(instance, arguments);\n    };\n  }\n}\n\nfunction HandlerDomProxy(dom) {\n  Eventful.call(this);\n  this.dom = dom;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._touching = false;\n  /**\n   * @private\n   * @type {number}\n   */\n\n  this._touchTimer;\n  /**\n   * @private\n   * @type {module:zrender/core/GestureMgr}\n   */\n\n  this._gestureMgr = new GestureMgr();\n  this._handlers = {};\n  initDomHandler(this);\n\n  if (env.pointerEventsSupported) {\n    // Only IE11+/Edge\n    // 1. On devices that both enable touch and mouse (e.g., MS Surface and lenovo X240),\n    // IE11+/Edge do not trigger touch event, but trigger pointer event and mouse event\n    // at the same time.\n    // 2. On MS Surface, it probablely only trigger mousedown but no mouseup when tap on\n    // screen, which do not occurs in pointer event.\n    // So we use pointer event to both detect touch gesture and mouse behavior.\n    mountHandlers(pointerHandlerNames, this); // FIXME\n    // Note: MS Gesture require CSS touch-action set. But touch-action is not reliable,\n    // which does not prevent defuault behavior occasionally (which may cause view port\n    // zoomed in but use can not zoom it back). And event.preventDefault() does not work.\n    // So we have to not to use MSGesture and not to support touchmove and pinch on MS\n    // touch screen. And we only support click behavior on MS touch screen now.\n    // MS Gesture Event is only supported on IE11+/Edge and on Windows 8+.\n    // We dont support touch on IE on win7.\n    // See <https://msdn.microsoft.com/en-us/library/dn433243(v=vs.85).aspx>\n    // if (typeof MSGesture === 'function') {\n    //     (this._msGesture = new MSGesture()).target = dom; // jshint ignore:line\n    //     dom.addEventListener('MSGestureChange', onMSGestureChange);\n    // }\n  } else {\n    if (env.touchEventsSupported) {\n      mountHandlers(touchHandlerNames, this); // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n      // addEventListener(root, 'mouseout', this._mouseoutHandler);\n    } // 1. Considering some devices that both enable touch and mouse event (like on MS Surface\n    // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n    // mouse event can not be handle in those devices.\n    // 2. On MS Surface, Chrome will trigger both touch event and mouse event. How to prevent\n    // mouseevent after touch event triggered, see `setTouchTimer`.\n\n\n    mountHandlers(mouseHandlerNames, this);\n  }\n\n  function mountHandlers(handlerNames, instance) {\n    zrUtil.each(handlerNames, function (name) {\n      addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n    }, instance);\n  }\n}\n\nvar handlerDomProxyProto = HandlerDomProxy.prototype;\n\nhandlerDomProxyProto.dispose = function () {\n  var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n  for (var i = 0; i < handlerNames.length; i++) {\n    var name = handlerNames[i];\n    removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n  }\n};\n\nhandlerDomProxyProto.setCursor = function (cursorStyle) {\n  this.dom.style.cursor = cursorStyle || 'default';\n};\n\nzrUtil.mixin(HandlerDomProxy, Eventful);\nvar _default = HandlerDomProxy;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 202\n// module chunks = 0","var zrUtil = require(\"./core/util\");\n\nexports.util = zrUtil;\n\nvar matrix = require(\"./core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"./core/vector\");\n\nexports.vector = vector;\n\nvar colorTool = require(\"./tool/color\");\n\nexports.color = colorTool;\n\nvar pathTool = require(\"./tool/path\");\n\nexports.path = pathTool;\n\nvar _Group = require(\"./container/Group\");\n\nexports.Group = _Group;\n\nvar _Path = require(\"./graphic/Path\");\n\nexports.Path = _Path;\n\nvar _Image = require(\"./graphic/Image\");\n\nexports.Image = _Image;\n\nvar _CompoundPath = require(\"./graphic/CompoundPath\");\n\nexports.CompoundPath = _CompoundPath;\n\nvar _Text = require(\"./graphic/Text\");\n\nexports.Text = _Text;\n\nvar _Arc = require(\"./graphic/shape/Arc\");\n\nexports.Arc = _Arc;\n\nvar _BezierCurve = require(\"./graphic/shape/BezierCurve\");\n\nexports.BezierCurve = _BezierCurve;\n\nvar _Circle = require(\"./graphic/shape/Circle\");\n\nexports.Circle = _Circle;\n\nvar _Droplet = require(\"./graphic/shape/Droplet\");\n\nexports.Droplet = _Droplet;\n\nvar _Ellipse = require(\"./graphic/shape/Ellipse\");\n\nexports.Ellipse = _Ellipse;\n\nvar _Heart = require(\"./graphic/shape/Heart\");\n\nexports.Heart = _Heart;\n\nvar _Isogon = require(\"./graphic/shape/Isogon\");\n\nexports.Isogon = _Isogon;\n\nvar _Line = require(\"./graphic/shape/Line\");\n\nexports.Line = _Line;\n\nvar _Polygon = require(\"./graphic/shape/Polygon\");\n\nexports.Polygon = _Polygon;\n\nvar _Polyline = require(\"./graphic/shape/Polyline\");\n\nexports.Polyline = _Polyline;\n\nvar _Rect = require(\"./graphic/shape/Rect\");\n\nexports.Rect = _Rect;\n\nvar _Ring = require(\"./graphic/shape/Ring\");\n\nexports.Ring = _Ring;\n\nvar _Rose = require(\"./graphic/shape/Rose\");\n\nexports.Rose = _Rose;\n\nvar _Sector = require(\"./graphic/shape/Sector\");\n\nexports.Sector = _Sector;\n\nvar _Star = require(\"./graphic/shape/Star\");\n\nexports.Star = _Star;\n\nvar _Trochoid = require(\"./graphic/shape/Trochoid\");\n\nexports.Trochoid = _Trochoid;\n\nvar _LinearGradient = require(\"./graphic/LinearGradient\");\n\nexports.LinearGradient = _LinearGradient;\n\nvar _RadialGradient = require(\"./graphic/RadialGradient\");\n\nexports.RadialGradient = _RadialGradient;\n\nvar _Pattern = require(\"./graphic/Pattern\");\n\nexports.Pattern = _Pattern;\n\nvar _BoundingRect = require(\"./core/BoundingRect\");\n\nexports.BoundingRect = _BoundingRect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/export.js\n// module id = 203\n// module chunks = 0","var env = require(\"../../core/env\");\n\n// Fix weird bug in some version of IE11 (like 11.0.9600.178**),\n// where exception \"unexpected call to method or property access\"\n// might be thrown when calling ctx.fill or ctx.stroke after a path\n// whose area size is zero is drawn and ctx.clip() is called and\n// shadowBlur is set. See #4572, #3112, #5777.\n// (e.g.,\n//  ctx.moveTo(10, 10);\n//  ctx.lineTo(20, 10);\n//  ctx.closePath();\n//  ctx.clip();\n//  ctx.shadowBlur = 10;\n//  ...\n//  ctx.fill();\n// )\nvar shadowTemp = [['shadowBlur', 0], ['shadowColor', '#000'], ['shadowOffsetX', 0], ['shadowOffsetY', 0]];\n\nfunction _default(orignalBrush) {\n  // version string can be: '11.0'\n  return env.browser.ie && env.browser.version >= 11 ? function () {\n    var clipPaths = this.__clipPaths;\n    var style = this.style;\n    var modified;\n\n    if (clipPaths) {\n      for (var i = 0; i < clipPaths.length; i++) {\n        var clipPath = clipPaths[i];\n        var shape = clipPath && clipPath.shape;\n        var type = clipPath && clipPath.type;\n\n        if (shape && (type === 'sector' && shape.startAngle === shape.endAngle || type === 'rect' && (!shape.width || !shape.height))) {\n          for (var j = 0; j < shadowTemp.length; j++) {\n            // It is save to put shadowTemp static, because shadowTemp\n            // will be all modified each item brush called.\n            shadowTemp[j][2] = style[shadowTemp[j][0]];\n            style[shadowTemp[j][0]] = shadowTemp[j][1];\n          }\n\n          modified = true;\n          break;\n        }\n      }\n    }\n\n    orignalBrush.apply(this, arguments);\n\n    if (modified) {\n      for (var j = 0; j < shadowTemp.length; j++) {\n        style[shadowTemp[j][0]] = shadowTemp[j][2];\n      }\n    }\n  } : orignalBrush;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/fixClipWithShadow.js\n// module id = 204\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Min = _vector.min;\nvar v2Max = _vector.max;\nvar v2Scale = _vector.scale;\nvar v2Distance = _vector.distance;\nvar v2Add = _vector.add;\nvar v2Clone = _vector.clone;\nvar v2Sub = _vector.sub;\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * 贝塞尔平滑曲线\n * @alias module:zrender/shape/util/smoothBezier\n * @param {Array} points 线段顶点数组\n * @param {number} smooth 平滑等级, 0-1\n * @param {boolean} isLoop\n * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n *                           整个折线的包围盒做一个并集用来约束控制点。\n * @param {Array} 计算出来的控制点数组\n */\nfunction _default(points, smooth, isLoop, constraint) {\n  var cps = [];\n  var v = [];\n  var v1 = [];\n  var v2 = [];\n  var prevPoint;\n  var nextPoint;\n  var min, max;\n\n  if (constraint) {\n    min = [Infinity, Infinity];\n    max = [-Infinity, -Infinity];\n\n    for (var i = 0, len = points.length; i < len; i++) {\n      v2Min(min, min, points[i]);\n      v2Max(max, max, points[i]);\n    } // 与指定的包围盒做并集\n\n\n    v2Min(min, min, constraint[0]);\n    v2Max(max, max, constraint[1]);\n  }\n\n  for (var i = 0, len = points.length; i < len; i++) {\n    var point = points[i];\n\n    if (isLoop) {\n      prevPoint = points[i ? i - 1 : len - 1];\n      nextPoint = points[(i + 1) % len];\n    } else {\n      if (i === 0 || i === len - 1) {\n        cps.push(v2Clone(points[i]));\n        continue;\n      } else {\n        prevPoint = points[i - 1];\n        nextPoint = points[i + 1];\n      }\n    }\n\n    v2Sub(v, nextPoint, prevPoint); // use degree to scale the handle length\n\n    v2Scale(v, v, smooth);\n    var d0 = v2Distance(point, prevPoint);\n    var d1 = v2Distance(point, nextPoint);\n    var sum = d0 + d1;\n\n    if (sum !== 0) {\n      d0 /= sum;\n      d1 /= sum;\n    }\n\n    v2Scale(v1, v, -d0);\n    v2Scale(v2, v, d1);\n    var cp0 = v2Add([], point, v1);\n    var cp1 = v2Add([], point, v2);\n\n    if (constraint) {\n      v2Max(cp0, cp0, min);\n      v2Min(cp0, cp0, max);\n      v2Max(cp1, cp1, min);\n      v2Min(cp1, cp1, max);\n    }\n\n    cps.push(cp0);\n    cps.push(cp1);\n  }\n\n  if (isLoop) {\n    cps.push(cps.shift());\n  }\n\n  return cps;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 205\n// module chunks = 0","var _vector = require(\"../../core/vector\");\n\nvar v2Distance = _vector.distance;\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n/**\n * @inner\n */\nfunction interpolate(p0, p1, p2, p3, t, t2, t3) {\n  var v0 = (p2 - p0) * 0.5;\n  var v1 = (p3 - p1) * 0.5;\n  return (2 * (p1 - p2) + v0 + v1) * t3 + (-3 * (p1 - p2) - 2 * v0 - v1) * t2 + v0 * t + p1;\n}\n/**\n * @alias module:zrender/shape/util/smoothSpline\n * @param {Array} points 线段顶点数组\n * @param {boolean} isLoop\n * @return {Array}\n */\n\n\nfunction _default(points, isLoop) {\n  var len = points.length;\n  var ret = [];\n  var distance = 0;\n\n  for (var i = 1; i < len; i++) {\n    distance += v2Distance(points[i - 1], points[i]);\n  }\n\n  var segs = distance / 2;\n  segs = segs < len ? len : segs;\n\n  for (var i = 0; i < segs; i++) {\n    var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n    var idx = Math.floor(pos);\n    var w = pos - idx;\n    var p0;\n    var p1 = points[idx % len];\n    var p2;\n    var p3;\n\n    if (!isLoop) {\n      p0 = points[idx === 0 ? idx : idx - 1];\n      p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n      p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n    } else {\n      p0 = points[(idx - 1 + len) % len];\n      p2 = points[(idx + 1) % len];\n      p3 = points[(idx + 2) % len];\n    }\n\n    var w2 = w * w;\n    var w3 = w * w2;\n    ret.push([interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3), interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)]);\n  }\n\n  return ret;\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 206\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 水滴形状\n * @module zrender/graphic/shape/Droplet\n */\nvar _default = Path.extend({\n  type: 'droplet',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y + a);\n    ctx.bezierCurveTo(x + a, y + a, x + a * 3 / 2, y - a / 3, x, y - b);\n    ctx.bezierCurveTo(x - a * 3 / 2, y - a / 3, x - a, y + a, x, y + a);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Droplet.js\n// module id = 207\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 椭圆形状\n * @module zrender/graphic/shape/Ellipse\n */\nvar _default = Path.extend({\n  type: 'ellipse',\n  shape: {\n    cx: 0,\n    cy: 0,\n    rx: 0,\n    ry: 0\n  },\n  buildPath: function (ctx, shape) {\n    var k = 0.5522848;\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.rx;\n    var b = shape.ry;\n    var ox = a * k; // 水平控制点偏移量\n\n    var oy = b * k; // 垂直控制点偏移量\n    // 从椭圆的左端点开始顺时针绘制四条三次贝塞尔曲线\n\n    ctx.moveTo(x - a, y);\n    ctx.bezierCurveTo(x - a, y - oy, x - ox, y - b, x, y - b);\n    ctx.bezierCurveTo(x + ox, y - b, x + a, y - oy, x + a, y);\n    ctx.bezierCurveTo(x + a, y + oy, x + ox, y + b, x, y + b);\n    ctx.bezierCurveTo(x - ox, y + b, x - a, y + oy, x - a, y);\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ellipse.js\n// module id = 208\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 心形\n * @module zrender/graphic/shape/Heart\n */\nvar _default = Path.extend({\n  type: 'heart',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var a = shape.width;\n    var b = shape.height;\n    ctx.moveTo(x, y);\n    ctx.bezierCurveTo(x + a / 2, y - b * 2 / 3, x + a * 2, y + b / 3, x, y + b);\n    ctx.bezierCurveTo(x - a * 2, y + b / 3, x - a / 2, y - b * 2 / 3, x, y);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Heart.js\n// module id = 209\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 正多边形\n * @module zrender/shape/Isogon\n */\nvar PI = Math.PI;\nvar sin = Math.sin;\nvar cos = Math.cos;\n\nvar _default = Path.extend({\n  type: 'isogon',\n  shape: {\n    x: 0,\n    y: 0,\n    r: 0,\n    n: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.x;\n    var y = shape.y;\n    var r = shape.r;\n    var dStep = 2 * PI / n;\n    var deg = -PI / 2;\n    ctx.moveTo(x + r * cos(deg), y + r * sin(deg));\n\n    for (var i = 0, end = n - 1; i < end; i++) {\n      deg += dStep;\n      ctx.lineTo(x + r * cos(deg), y + r * sin(deg));\n    }\n\n    ctx.closePath();\n    return;\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Isogon.js\n// module id = 210\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 玫瑰线\n * @module zrender/graphic/shape/Rose\n */\nvar sin = Math.sin;\nvar cos = Math.cos;\nvar radian = Math.PI / 180;\n\nvar _default = Path.extend({\n  type: 'rose',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: [],\n    k: 0,\n    n: 1\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x;\n    var y;\n    var R = shape.r;\n    var r;\n    var k = shape.k;\n    var n = shape.n;\n    var x0 = shape.cx;\n    var y0 = shape.cy;\n    ctx.moveTo(x0, y0);\n\n    for (var i = 0, len = R.length; i < len; i++) {\n      r = R[i];\n\n      for (var j = 0; j <= 360 * n; j++) {\n        x = r * sin(k / n * j % 360 * radian) * cos(j * radian) + x0;\n        y = r * sin(k / n * j % 360 * radian) * sin(j * radian) + y0;\n        ctx.lineTo(x, y);\n      }\n    }\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rose.js\n// module id = 211\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * n角星（n>3）\n * @module zrender/graphic/shape/Star\n */\nvar PI = Math.PI;\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'star',\n  shape: {\n    cx: 0,\n    cy: 0,\n    n: 3,\n    r0: null,\n    r: 0\n  },\n  buildPath: function (ctx, shape) {\n    var n = shape.n;\n\n    if (!n || n < 2) {\n      return;\n    }\n\n    var x = shape.cx;\n    var y = shape.cy;\n    var r = shape.r;\n    var r0 = shape.r0; // 如果未指定内部顶点外接圆半径，则自动计算\n\n    if (r0 == null) {\n      r0 = n > 4 // 相隔的外部顶点的连线的交点，\n      // 被取为内部交点，以此计算r0\n      ? r * cos(2 * PI / n) / cos(PI / n) // 二三四角星的特殊处理\n      : r / 3;\n    }\n\n    var dStep = PI / n;\n    var deg = -PI / 2;\n    var xStart = x + r * cos(deg);\n    var yStart = y + r * sin(deg);\n    deg += dStep; // 记录边界点，用于判断inside\n\n    ctx.moveTo(xStart, yStart);\n\n    for (var i = 0, end = n * 2 - 1, ri; i < end; i++) {\n      ri = i % 2 === 0 ? r0 : r;\n      ctx.lineTo(x + ri * cos(deg), y + ri * sin(deg));\n      deg += dStep;\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Star.js\n// module id = 212\n// module chunks = 0","var Path = require(\"../Path\");\n\n/**\n * 内外旋轮曲线\n * @module zrender/graphic/shape/Trochold\n */\nvar cos = Math.cos;\nvar sin = Math.sin;\n\nvar _default = Path.extend({\n  type: 'trochoid',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r: 0,\n    r0: 0,\n    d: 0,\n    location: 'out'\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function (ctx, shape) {\n    var x1;\n    var y1;\n    var x2;\n    var y2;\n    var R = shape.r;\n    var r = shape.r0;\n    var d = shape.d;\n    var offsetX = shape.cx;\n    var offsetY = shape.cy;\n    var delta = shape.location == 'out' ? 1 : -1;\n\n    if (shape.location && R <= r) {\n      return;\n    }\n\n    var num = 0;\n    var i = 1;\n    var theta;\n    x1 = (R + delta * r) * cos(0) - delta * d * cos(0) + offsetX;\n    y1 = (R + delta * r) * sin(0) - d * sin(0) + offsetY;\n    ctx.moveTo(x1, y1); // 计算结束时的i\n\n    do {\n      num++;\n    } while (r * num % (R + delta * r) !== 0);\n\n    do {\n      theta = Math.PI / 180 * i;\n      x2 = (R + delta * r) * cos(theta) - delta * d * cos((R / r + delta) * theta) + offsetX;\n      y2 = (R + delta * r) * sin(theta) - d * sin((R / r + delta) * theta) + offsetY;\n      ctx.lineTo(x2, y2);\n      i++;\n    } while (i <= r * num / (R + delta * r) * 360);\n  }\n});\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Trochoid.js\n// module id = 213\n// module chunks = 0","var Animator = require(\"../animation/Animator\");\n\nvar log = require(\"../core/log\");\n\nvar _util = require(\"../core/util\");\n\nvar isString = _util.isString;\nvar isFunction = _util.isFunction;\nvar isObject = _util.isObject;\nvar isArrayLike = _util.isArrayLike;\nvar indexOf = _util.indexOf;\n\n/**\n * @alias modue:zrender/mixin/Animatable\n * @constructor\n */\nvar Animatable = function () {\n  /**\n   * @type {Array.<module:zrender/animation/Animator>}\n   * @readOnly\n   */\n  this.animators = [];\n};\n\nAnimatable.prototype = {\n  constructor: Animatable,\n\n  /**\n   * 动画\n   *\n   * @param {string} path The path to fetch value from object, like 'a.b.c'.\n   * @param {boolean} [loop] Whether to loop animation.\n   * @return {module:zrender/animation/Animator}\n   * @example:\n   *     el.animate('style', false)\n   *         .when(1000, {x: 10} )\n   *         .done(function(){ // Animation done })\n   *         .start()\n   */\n  animate: function (path, loop) {\n    var target;\n    var animatingShape = false;\n    var el = this;\n    var zr = this.__zr;\n\n    if (path) {\n      var pathSplitted = path.split('.');\n      var prop = el; // If animating shape\n\n      animatingShape = pathSplitted[0] === 'shape';\n\n      for (var i = 0, l = pathSplitted.length; i < l; i++) {\n        if (!prop) {\n          continue;\n        }\n\n        prop = prop[pathSplitted[i]];\n      }\n\n      if (prop) {\n        target = prop;\n      }\n    } else {\n      target = el;\n    }\n\n    if (!target) {\n      log('Property \"' + path + '\" is not existed in element ' + el.id);\n      return;\n    }\n\n    var animators = el.animators;\n    var animator = new Animator(target, loop);\n    animator.during(function (target) {\n      el.dirty(animatingShape);\n    }).done(function () {\n      // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n      animators.splice(indexOf(animators, animator), 1);\n    });\n    animators.push(animator); // If animate after added to the zrender\n\n    if (zr) {\n      zr.animation.addAnimator(animator);\n    }\n\n    return animator;\n  },\n\n  /**\n   * 停止动画\n   * @param {boolean} forwardToLast If move to last frame before stop\n   */\n  stopAnimation: function (forwardToLast) {\n    var animators = this.animators;\n    var len = animators.length;\n\n    for (var i = 0; i < len; i++) {\n      animators[i].stop(forwardToLast);\n    }\n\n    animators.length = 0;\n    return this;\n  },\n\n  /**\n   * Caution: this method will stop previous animation.\n   * So do not use this method to one element twice before\n   * animation starts, unless you know what you are doing.\n   * @param {Object} target\n   * @param {number} [time=500] Time in ms\n   * @param {string} [easing='linear']\n   * @param {number} [delay=0]\n   * @param {Function} [callback]\n   * @param {Function} [forceAnimate] Prevent stop animation and callback\n   *        immediently when target values are the same as current values.\n   *\n   * @example\n   *  // Animate position\n   *  el.animateTo({\n   *      position: [10, 10]\n   *  }, function () { // done })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n   *  el.animateTo({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100, 'cubicOut', function () { // done })\n   */\n  // TODO Return animation key\n  animateTo: function (target, time, delay, easing, callback, forceAnimate) {\n    // animateTo(target, time, easing, callback);\n    if (isString(delay)) {\n      callback = easing;\n      easing = delay;\n      delay = 0;\n    } // animateTo(target, time, delay, callback);\n    else if (isFunction(easing)) {\n        callback = easing;\n        easing = 'linear';\n        delay = 0;\n      } // animateTo(target, time, callback);\n      else if (isFunction(delay)) {\n          callback = delay;\n          delay = 0;\n        } // animateTo(target, callback)\n        else if (isFunction(time)) {\n            callback = time;\n            time = 500;\n          } // animateTo(target)\n          else if (!time) {\n              time = 500;\n            } // Stop all previous animations\n\n\n    this.stopAnimation();\n\n    this._animateToShallow('', this, target, time, delay); // Animators may be removed immediately after start\n    // if there is nothing to animate\n\n\n    var animators = this.animators.slice();\n    var count = animators.length;\n\n    function done() {\n      count--;\n\n      if (!count) {\n        callback && callback();\n      }\n    } // No animators. This should be checked before animators[i].start(),\n    // because 'done' may be executed immediately if no need to animate.\n\n\n    if (!count) {\n      callback && callback();\n    } // Start after all animators created\n    // Incase any animator is done immediately when all animation properties are not changed\n\n\n    for (var i = 0; i < animators.length; i++) {\n      animators[i].done(done).start(easing, forceAnimate);\n    }\n  },\n\n  /**\n   * @private\n   * @param {string} path=''\n   * @param {Object} source=this\n   * @param {Object} target\n   * @param {number} [time=500]\n   * @param {number} [delay=0]\n   *\n   * @example\n   *  // Animate position\n   *  el._animateToShallow({\n   *      position: [10, 10]\n   *  })\n   *\n   *  // Animate shape, style and position in 100ms, delayed 100ms\n   *  el._animateToShallow({\n   *      shape: {\n   *          width: 500\n   *      },\n   *      style: {\n   *          fill: 'red'\n   *      }\n   *      position: [10, 10]\n   *  }, 100, 100)\n   */\n  _animateToShallow: function (path, source, target, time, delay) {\n    var objShallow = {};\n    var propertyCount = 0;\n\n    for (var name in target) {\n      if (!target.hasOwnProperty(name)) {\n        continue;\n      }\n\n      if (source[name] != null) {\n        if (isObject(target[name]) && !isArrayLike(target[name])) {\n          this._animateToShallow(path ? path + '.' + name : name, source[name], target[name], time, delay);\n        } else {\n          objShallow[name] = target[name];\n          propertyCount++;\n        }\n      } else if (target[name] != null) {\n        // Attr directly if not has property\n        // FIXME, if some property not needed for element ?\n        if (!path) {\n          this.attr(name, target[name]);\n        } else {\n          // Shape or style\n          var props = {};\n          props[path] = {};\n          props[path][name] = target[name];\n          this.attr(props);\n        }\n      }\n    }\n\n    if (propertyCount > 0) {\n      this.animate(path, false).when(time == null ? 500 : time, objShallow).delay(delay || 0);\n    }\n\n    return this;\n  }\n};\nvar _default = Animatable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 214\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\nfunction Draggable() {\n  this.on('mousedown', this._dragStart, this);\n  this.on('mousemove', this._drag, this);\n  this.on('mouseup', this._dragEnd, this);\n  this.on('globalout', this._dragEnd, this); // this._dropTarget = null;\n  // this._draggingTarget = null;\n  // this._x = 0;\n  // this._y = 0;\n}\n\nDraggable.prototype = {\n  constructor: Draggable,\n  _dragStart: function (e) {\n    var draggingTarget = e.target;\n\n    if (draggingTarget && draggingTarget.draggable) {\n      this._draggingTarget = draggingTarget;\n      draggingTarget.dragging = true;\n      this._x = e.offsetX;\n      this._y = e.offsetY;\n      this.dispatchToElement(param(draggingTarget, e), 'dragstart', e.event);\n    }\n  },\n  _drag: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      var x = e.offsetX;\n      var y = e.offsetY;\n      var dx = x - this._x;\n      var dy = y - this._y;\n      this._x = x;\n      this._y = y;\n      draggingTarget.drift(dx, dy, e);\n      this.dispatchToElement(param(draggingTarget, e), 'drag', e.event);\n      var dropTarget = this.findHover(x, y, draggingTarget).target;\n      var lastDropTarget = this._dropTarget;\n      this._dropTarget = dropTarget;\n\n      if (draggingTarget !== dropTarget) {\n        if (lastDropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(lastDropTarget, e), 'dragleave', e.event);\n        }\n\n        if (dropTarget && dropTarget !== lastDropTarget) {\n          this.dispatchToElement(param(dropTarget, e), 'dragenter', e.event);\n        }\n      }\n    }\n  },\n  _dragEnd: function (e) {\n    var draggingTarget = this._draggingTarget;\n\n    if (draggingTarget) {\n      draggingTarget.dragging = false;\n    }\n\n    this.dispatchToElement(param(draggingTarget, e), 'dragend', e.event);\n\n    if (this._dropTarget) {\n      this.dispatchToElement(param(this._dropTarget, e), 'drop', e.event);\n    }\n\n    this._draggingTarget = null;\n    this._dropTarget = null;\n  }\n};\n\nfunction param(target, e) {\n  return {\n    target: target,\n    topTarget: e && e.topTarget\n  };\n}\n\nvar _default = Draggable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 215\n// module chunks = 0","var matrix = require(\"../core/matrix\");\n\nvar vector = require(\"../core/vector\");\n\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\nvar mIdentity = matrix.identity;\nvar EPSILON = 5e-5;\n\nfunction isNotAroundZero(val) {\n  return val > EPSILON || val < -EPSILON;\n}\n/**\n * @alias module:zrender/mixin/Transformable\n * @constructor\n */\n\n\nvar Transformable = function (opts) {\n  opts = opts || {}; // If there are no given position, rotation, scale\n\n  if (!opts.position) {\n    /**\n     * 平移\n     * @type {Array.<number>}\n     * @default [0, 0]\n     */\n    this.position = [0, 0];\n  }\n\n  if (opts.rotation == null) {\n    /**\n     * 旋转\n     * @type {Array.<number>}\n     * @default 0\n     */\n    this.rotation = 0;\n  }\n\n  if (!opts.scale) {\n    /**\n     * 缩放\n     * @type {Array.<number>}\n     * @default [1, 1]\n     */\n    this.scale = [1, 1];\n  }\n  /**\n   * 旋转和缩放的原点\n   * @type {Array.<number>}\n   * @default null\n   */\n\n\n  this.origin = this.origin || null;\n};\n\nvar transformableProto = Transformable.prototype;\ntransformableProto.transform = null;\n/**\n * 判断是否需要有坐标变换\n * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n */\n\ntransformableProto.needLocalTransform = function () {\n  return isNotAroundZero(this.rotation) || isNotAroundZero(this.position[0]) || isNotAroundZero(this.position[1]) || isNotAroundZero(this.scale[0] - 1) || isNotAroundZero(this.scale[1] - 1);\n};\n\ntransformableProto.updateTransform = function () {\n  var parent = this.parent;\n  var parentHasTransform = parent && parent.transform;\n  var needLocalTransform = this.needLocalTransform();\n  var m = this.transform;\n\n  if (!(needLocalTransform || parentHasTransform)) {\n    m && mIdentity(m);\n    return;\n  }\n\n  m = m || matrix.create();\n\n  if (needLocalTransform) {\n    this.getLocalTransform(m);\n  } else {\n    mIdentity(m);\n  } // 应用父节点变换\n\n\n  if (parentHasTransform) {\n    if (needLocalTransform) {\n      matrix.mul(m, parent.transform, m);\n    } else {\n      matrix.copy(m, parent.transform);\n    }\n  } // 保存这个变换矩阵\n\n\n  this.transform = m;\n  this.invTransform = this.invTransform || matrix.create();\n  matrix.invert(this.invTransform, m);\n};\n\ntransformableProto.getLocalTransform = function (m) {\n  return Transformable.getLocalTransform(this, m);\n};\n/**\n * 将自己的transform应用到context上\n * @param {CanvasRenderingContext2D} ctx\n */\n\n\ntransformableProto.setTransform = function (ctx) {\n  var m = this.transform;\n  var dpr = ctx.dpr || 1;\n\n  if (m) {\n    ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n  } else {\n    ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n  }\n};\n\ntransformableProto.restoreTransform = function (ctx) {\n  var dpr = ctx.dpr || 1;\n  ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n};\n\nvar tmpTransform = [];\n/**\n * 分解`transform`矩阵到`position`, `rotation`, `scale`\n */\n\ntransformableProto.decomposeTransform = function () {\n  if (!this.transform) {\n    return;\n  }\n\n  var parent = this.parent;\n  var m = this.transform;\n\n  if (parent && parent.transform) {\n    // Get local transform and decompose them to position, scale, rotation\n    matrix.mul(tmpTransform, parent.invTransform, m);\n    m = tmpTransform;\n  }\n\n  var sx = m[0] * m[0] + m[1] * m[1];\n  var sy = m[2] * m[2] + m[3] * m[3];\n  var position = this.position;\n  var scale = this.scale;\n\n  if (isNotAroundZero(sx - 1)) {\n    sx = Math.sqrt(sx);\n  }\n\n  if (isNotAroundZero(sy - 1)) {\n    sy = Math.sqrt(sy);\n  }\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  position[0] = m[4];\n  position[1] = m[5];\n  scale[0] = sx;\n  scale[1] = sy;\n  this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n};\n/**\n * Get global scale\n * @return {Array.<number>}\n */\n\n\ntransformableProto.getGlobalScale = function () {\n  var m = this.transform;\n\n  if (!m) {\n    return [1, 1];\n  }\n\n  var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n  var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n\n  if (m[0] < 0) {\n    sx = -sx;\n  }\n\n  if (m[3] < 0) {\n    sy = -sy;\n  }\n\n  return [sx, sy];\n};\n/**\n * 变换坐标位置到 shape 的局部坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToLocal = function (x, y) {\n  var v2 = [x, y];\n  var invTransform = this.invTransform;\n\n  if (invTransform) {\n    vector.applyTransform(v2, v2, invTransform);\n  }\n\n  return v2;\n};\n/**\n * 变换局部坐标位置到全局坐标空间\n * @method\n * @param {number} x\n * @param {number} y\n * @return {Array.<number>}\n */\n\n\ntransformableProto.transformCoordToGlobal = function (x, y) {\n  var v2 = [x, y];\n  var transform = this.transform;\n\n  if (transform) {\n    vector.applyTransform(v2, v2, transform);\n  }\n\n  return v2;\n};\n/**\n * @static\n * @param {Object} target\n * @param {Array.<number>} target.origin\n * @param {number} target.rotation\n * @param {Array.<number>} target.position\n * @param {Array.<number>} [m]\n */\n\n\nTransformable.getLocalTransform = function (target, m) {\n  m = m || [];\n  mIdentity(m);\n  var origin = target.origin;\n  var scale = target.scale || [1, 1];\n  var rotation = target.rotation || 0;\n  var position = target.position || [0, 0];\n\n  if (origin) {\n    // Translate to origin\n    m[4] -= origin[0];\n    m[5] -= origin[1];\n  }\n\n  matrix.scale(m, m, scale);\n\n  if (rotation) {\n    matrix.rotate(m, m, rotation);\n  }\n\n  if (origin) {\n    // Translate back from origin\n    m[4] += origin[0];\n    m[5] += origin[1];\n  }\n\n  m[4] += position[0];\n  m[5] += position[1];\n  return m;\n};\n\nvar _default = Transformable;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 216\n// module chunks = 0","var _core = require(\"./core\");\n\nvar createElement = _core.createElement;\n\nvar util = require(\"../core/util\");\n\nvar each = util.each;\n\nvar zrLog = require(\"../core/log\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar ZText = require(\"../graphic/Text\");\n\nvar arrayDiff = require(\"../core/arrayDiff2\");\n\nvar GradientManager = require(\"./helper/GradientManager\");\n\nvar ClippathManager = require(\"./helper/ClippathManager\");\n\nvar _graphic = require(\"./graphic\");\n\nvar svgPath = _graphic.path;\nvar svgImage = _graphic.image;\nvar svgText = _graphic.text;\n\n/**\n * SVG Painter\n * @module zrender/svg/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n\nfunction getSvgProxy(el) {\n  if (el instanceof Path) {\n    return svgPath;\n  } else if (el instanceof ZImage) {\n    return svgImage;\n  } else if (el instanceof ZText) {\n    return svgText;\n  } else {\n    return svgPath;\n  }\n}\n\nfunction checkParentAvailable(parent, child) {\n  return child && parent && child.parentNode !== parent;\n}\n\nfunction insertAfter(parent, child, prevSibling) {\n  if (checkParentAvailable(parent, child) && prevSibling) {\n    var nextSibling = prevSibling.nextSibling;\n    nextSibling ? parent.insertBefore(child, nextSibling) : parent.appendChild(child);\n  }\n}\n\nfunction prepend(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    var firstChild = parent.firstChild;\n    firstChild ? parent.insertBefore(child, firstChild) : parent.appendChild(child);\n  }\n}\n\nfunction append(parent, child) {\n  if (checkParentAvailable(parent, child)) {\n    parent.appendChild(child);\n  }\n}\n\nfunction remove(parent, child) {\n  if (child && parent && child.parentNode === parent) {\n    parent.removeChild(child);\n  }\n}\n\nfunction getTextSvgElement(displayable) {\n  return displayable.__textSvgEl;\n}\n\nfunction getSvgElement(displayable) {\n  return displayable.__svgEl;\n}\n/**\n * @alias module:zrender/svg/Painter\n * @constructor\n * @param {HTMLElement} root 绘图容器\n * @param {module:zrender/Storage} storage\n * @param {Object} opts\n */\n\n\nvar SVGPainter = function (root, storage, opts) {\n  this.root = root;\n  this.storage = storage;\n  this._opts = opts = util.extend({}, opts || {});\n  var svgRoot = createElement('svg');\n  svgRoot.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n  svgRoot.setAttribute('version', '1.1');\n  svgRoot.setAttribute('baseProfile', 'full');\n  svgRoot.style['user-select'] = 'none';\n  svgRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  this.gradientManager = new GradientManager(svgRoot);\n  this.clipPathManager = new ClippathManager(svgRoot);\n  var viewport = document.createElement('div');\n  viewport.style.cssText = 'overflow:hidden;position:relative';\n  this._svgRoot = svgRoot;\n  this._viewport = viewport;\n  root.appendChild(viewport);\n  viewport.appendChild(svgRoot);\n  this.resize(opts.width, opts.height);\n  this._visibleList = [];\n};\n\nSVGPainter.prototype = {\n  constructor: SVGPainter,\n  getType: function () {\n    return 'svg';\n  },\n  getViewportRoot: function () {\n    return this._viewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n  refresh: function () {\n    var list = this.storage.getDisplayList(true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    this.gradientManager.markAllUnused();\n    this.clipPathManager.markAllUnused();\n    var svgRoot = this._svgRoot;\n    var visibleList = this._visibleList;\n    var listLen = list.length;\n    var newVisibleList = [];\n    var i;\n\n    for (i = 0; i < listLen; i++) {\n      var displayable = list[i];\n      var svgProxy = getSvgProxy(displayable);\n\n      if (!displayable.invisible) {\n        if (displayable.__dirty) {\n          svgProxy && svgProxy.brush(displayable); // Update clipPath\n\n          this.clipPathManager.update(displayable); // Update gradient\n\n          if (displayable.style) {\n            this.gradientManager.update(displayable.style.fill);\n            this.gradientManager.update(displayable.style.stroke);\n          }\n\n          displayable.__dirty = false;\n        }\n\n        newVisibleList.push(displayable);\n      }\n    }\n\n    var diff = arrayDiff(visibleList, newVisibleList);\n    var prevSvgElement; // First do remove, in case element moved to the head and do remove\n    // after add\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = visibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          remove(svgRoot, svgElement);\n          remove(svgRoot, textSvgElement);\n        }\n      }\n    }\n\n    for (i = 0; i < diff.length; i++) {\n      var item = diff[i];\n\n      if (item.added) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          var svgElement = getSvgElement(displayable);\n          var textSvgElement = getTextSvgElement(displayable);\n          prevSvgElement ? insertAfter(svgRoot, svgElement, prevSvgElement) : prepend(svgRoot, svgElement);\n\n          if (svgElement) {\n            insertAfter(svgRoot, textSvgElement, svgElement);\n          } else if (prevSvgElement) {\n            insertAfter(svgRoot, textSvgElement, prevSvgElement);\n          } else {\n            prepend(svgRoot, textSvgElement);\n          } // Insert text\n\n\n          insertAfter(svgRoot, textSvgElement, svgElement);\n          prevSvgElement = textSvgElement || svgElement || prevSvgElement;\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      } else if (!item.removed) {\n        for (var k = 0; k < item.count; k++) {\n          var displayable = newVisibleList[item.indices[k]];\n          prevSvgElement = svgElement = getTextSvgElement(displayable) || getSvgElement(displayable) || prevSvgElement;\n          this.gradientManager.markUsed(displayable);\n          this.gradientManager.addWithoutUpdate(svgElement, displayable);\n          this.clipPathManager.markUsed(displayable);\n        }\n      }\n    }\n\n    this.gradientManager.removeUnused();\n    this.clipPathManager.removeUnused();\n    this._visibleList = newVisibleList;\n  },\n  _getDefs: function (isForceCreating) {\n    var svgRoot = this._svgRoot;\n\n    var defs = this._svgRoot.getElementsByTagName('defs');\n\n    if (defs.length === 0) {\n      // Not exist\n      if (isForceCreating) {\n        var defs = svgRoot.insertBefore(createElement('defs'), // Create new tag\n        svgRoot.firstChild // Insert in the front of svg\n        );\n\n        if (!defs.contains) {\n          // IE doesn't support contains method\n          defs.contains = function (el) {\n            var children = defs.children;\n\n            if (!children) {\n              return false;\n            }\n\n            for (var i = children.length - 1; i >= 0; --i) {\n              if (children[i] === el) {\n                return true;\n              }\n            }\n\n            return false;\n          };\n        }\n\n        return defs;\n      } else {\n        return null;\n      }\n    } else {\n      return defs[0];\n    }\n  },\n  resize: function (width, height) {\n    var viewport = this._viewport; // FIXME Why ?\n\n    viewport.style.display = 'none'; // Save input w/h\n\n    var opts = this._opts;\n    width != null && (opts.width = width);\n    height != null && (opts.height = height);\n    width = this._getSize(0);\n    height = this._getSize(1);\n    viewport.style.display = '';\n\n    if (this._width !== width && this._height !== height) {\n      this._width = width;\n      this._height = height;\n      var viewportStyle = viewport.style;\n      viewportStyle.width = width + 'px';\n      viewportStyle.height = height + 'px';\n      var svgRoot = this._svgRoot; // Set width by 'svgRoot.width = width' is invalid\n\n      svgRoot.setAttribute('width', width);\n      svgRoot.setAttribute('height', height);\n    }\n  },\n\n  /**\n   * 获取绘图区域宽度\n   */\n  getWidth: function () {\n    return this._width;\n  },\n\n  /**\n   * 获取绘图区域高度\n   */\n  getHeight: function () {\n    return this._height;\n  },\n  _getSize: function (whIdx) {\n    var opts = this._opts;\n    var wh = ['width', 'height'][whIdx];\n    var cwh = ['clientWidth', 'clientHeight'][whIdx];\n    var plt = ['paddingLeft', 'paddingTop'][whIdx];\n    var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n    if (opts[wh] != null && opts[wh] !== 'auto') {\n      return parseFloat(opts[wh]);\n    }\n\n    var root = this.root; // IE8 does not support getComputedStyle, but it use VML.\n\n    var stl = document.defaultView.getComputedStyle(root);\n    return (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh])) - (parseInt10(stl[plt]) || 0) - (parseInt10(stl[prb]) || 0) | 0;\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._svgRoot = this._viewport = this.storage = null;\n  },\n  clear: function () {\n    if (this._viewport) {\n      this.root.removeChild(this._viewport);\n    }\n  },\n  pathToSvg: function () {\n    this.refresh();\n    var html = this._svgRoot.outerHTML;\n    return 'data:img/svg+xml;utf-8,' + unescape(html);\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In SVG mode painter not support method \"' + method + '\"');\n  };\n} // Unsuppoted methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  SVGPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = SVGPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/Painter.js\n// module id = 217\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar matrix = require(\"../../core/matrix\");\n\n/**\n * @file Manages SVG clipPath elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG clipPath elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction ClippathManager(svgRoot) {\n  Definable.call(this, svgRoot, 'clipPath', '__clippath_in_use__');\n}\n\nzrUtil.inherits(ClippathManager, Definable);\n/**\n * Update clipPath.\n *\n * @param {Displayable} displayable displayable element\n */\n\nClippathManager.prototype.update = function (displayable) {\n  var svgEl = this.getSvgElement(displayable);\n\n  if (svgEl) {\n    this.updateDom(svgEl, displayable.__clipPaths, false);\n  }\n\n  var textEl = this.getTextSvgElement(displayable);\n\n  if (textEl) {\n    // Make another clipPath for text, since it's transform\n    // matrix is not the same with svgElement\n    this.updateDom(textEl, displayable.__clipPaths, true);\n  }\n\n  this.markUsed(displayable);\n};\n/**\n * Create an SVGElement of displayable and create a <clipPath> of its\n * clipPath\n *\n * @param {Displayable} parentEl  parent element\n * @param {ClipPath[]}  clipPaths clipPaths of parent element\n * @param {boolean}     isText    if parent element is Text\n */\n\n\nClippathManager.prototype.updateDom = function (parentEl, clipPaths, isText) {\n  if (clipPaths && clipPaths.length > 0) {\n    // Has clipPath, create <clipPath> with the first clipPath\n    var defs = this.getDefs(true);\n    var clipPath = clipPaths[0];\n    var clipPathEl;\n    var id;\n    var dom = isText ? '_textDom' : '_dom';\n\n    if (clipPath[dom]) {\n      // Use a dom that is already in <defs>\n      id = clipPath[dom].getAttribute('id');\n      clipPathEl = clipPath[dom]; // Use a dom that is already in <defs>\n\n      if (!defs.contains(clipPathEl)) {\n        // This happens when set old clipPath that has\n        // been previously removed\n        defs.appendChild(clipPathEl);\n      }\n    } else {\n      // New <clipPath>\n      id = 'zr-clip-' + this.nextId;\n      ++this.nextId;\n      clipPathEl = this.createElement('clipPath');\n      clipPathEl.setAttribute('id', id);\n      defs.appendChild(clipPathEl);\n      clipPath[dom] = clipPathEl;\n    } // Build path and add to <clipPath>\n\n\n    var svgProxy = this.getSvgProxy(clipPath);\n\n    if (clipPath.transform && clipPath.parent.invTransform && !isText) {\n      /**\n       * If a clipPath has a parent with transform, the transform\n       * of parent should not be considered when setting transform\n       * of clipPath. So we need to transform back from parent's\n       * transform, which is done by multiplying parent's inverse\n       * transform.\n       */\n      // Store old transform\n      var transform = Array.prototype.slice.call(clipPath.transform); // Transform back from parent, and brush path\n\n      matrix.mul(clipPath.transform, clipPath.parent.invTransform, clipPath.transform);\n      svgProxy.brush(clipPath); // Set back transform of clipPath\n\n      clipPath.transform = transform;\n    } else {\n      svgProxy.brush(clipPath);\n    }\n\n    var pathEl = this.getSvgElement(clipPath);\n    /**\n     * Use `cloneNode()` here to appendChild to multiple parents,\n     * which may happend when Text and other shapes are using the same\n     * clipPath. Since Text will create an extra clipPath DOM due to\n     * different transform rules.\n     */\n\n    clipPathEl.appendChild(pathEl.cloneNode());\n    parentEl.setAttribute('clip-path', 'url(#' + id + ')');\n\n    if (clipPaths.length > 1) {\n      // Make the other clipPaths recursively\n      this.updateDom(clipPathEl, clipPaths.slice(1), isText);\n    }\n  } else {\n    // No clipPath\n    if (parentEl) {\n      parentEl.setAttribute('clip-path', 'none');\n    }\n  }\n};\n/**\n * Mark a single clipPath to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nClippathManager.prototype.markUsed = function (displayable) {\n  var that = this;\n\n  if (displayable.__clipPaths && displayable.__clipPaths.length > 0) {\n    zrUtil.each(displayable.__clipPaths, function (clipPath) {\n      if (clipPath._dom) {\n        Definable.prototype.markUsed.call(that, clipPath._dom);\n      }\n\n      if (clipPath._textDom) {\n        Definable.prototype.markUsed.call(that, clipPath._textDom);\n      }\n    });\n  }\n};\n\nvar _default = ClippathManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/ClippathManager.js\n// module id = 218\n// module chunks = 0","var Definable = require(\"./Definable\");\n\nvar zrUtil = require(\"../../core/util\");\n\nvar zrLog = require(\"../../core/log\");\n\n/**\n * @file Manages SVG gradient elements.\n * @author Zhang Wenli\n */\n\n/**\n * Manages SVG gradient elements.\n *\n * @class\n * @extends Definable\n * @param   {SVGElement} svgRoot root of SVG document\n */\nfunction GradientManager(svgRoot) {\n  Definable.call(this, svgRoot, ['linearGradient', 'radialGradient'], '__gradient_in_use__');\n}\n\nzrUtil.inherits(GradientManager, Definable);\n/**\n * Create new gradient DOM for fill or stroke if not exist,\n * but will not update gradient if exists.\n *\n * @param {SvgElement}  svgElement   SVG element to paint\n * @param {Displayable} displayable  zrender displayable element\n */\n\nGradientManager.prototype.addWithoutUpdate = function (svgElement, displayable) {\n  if (displayable && displayable.style) {\n    var that = this;\n    zrUtil.each(['fill', 'stroke'], function (fillOrStroke) {\n      if (displayable.style[fillOrStroke] && (displayable.style[fillOrStroke].type === 'linear' || displayable.style[fillOrStroke].type === 'radial')) {\n        var gradient = displayable.style[fillOrStroke];\n        var defs = that.getDefs(true); // Create dom in <defs> if not exists\n\n        var dom;\n\n        if (gradient._dom) {\n          // Gradient exists\n          dom = gradient._dom;\n\n          if (!defs.contains(gradient._dom)) {\n            // _dom is no longer in defs, recreate\n            that.addDom(dom);\n          }\n        } else {\n          // New dom\n          dom = that.add(gradient);\n        }\n\n        that.markUsed(displayable);\n        var id = dom.getAttribute('id');\n        svgElement.setAttribute(fillOrStroke, 'url(#' + id + ')');\n      }\n    });\n  }\n};\n/**\n * Add a new gradient tag in <defs>\n *\n * @param   {Gradient} gradient zr gradient instance\n * @return {SVGLinearGradientElement | SVGRadialGradientElement}\n *                            created DOM\n */\n\n\nGradientManager.prototype.add = function (gradient) {\n  var dom;\n\n  if (gradient.type === 'linear') {\n    dom = this.createElement('linearGradient');\n  } else if (gradient.type === 'radial') {\n    dom = this.createElement('radialGradient');\n  } else {\n    zrLog('Illegal gradient type.');\n    return null;\n  } // Set dom id with gradient id, since each gradient instance\n  // will have no more than one dom element.\n  // id may exists before for those dirty elements, in which case\n  // id should remain the same, and other attributes should be\n  // updated.\n\n\n  gradient.id = gradient.id || this.nextId++;\n  dom.setAttribute('id', 'zr-gradient-' + gradient.id);\n  this.updateDom(gradient, dom);\n  this.addDom(dom);\n  return dom;\n};\n/**\n * Update gradient.\n *\n * @param {Gradient} gradient zr gradient instance\n */\n\n\nGradientManager.prototype.update = function (gradient) {\n  var that = this;\n  Definable.prototype.update.call(this, gradient, function () {\n    var type = gradient.type;\n    var tagName = gradient._dom.tagName;\n\n    if (type === 'linear' && tagName === 'linearGradient' || type === 'radial' && tagName === 'radialGradient') {\n      // Gradient type is not changed, update gradient\n      that.updateDom(gradient, gradient._dom);\n    } else {\n      // Remove and re-create if type is changed\n      that.removeDom(gradient);\n      that.add(gradient);\n    }\n  });\n};\n/**\n * Update gradient dom\n *\n * @param {Gradient} gradient zr gradient instance\n * @param {SVGLinearGradientElement | SVGRadialGradientElement} dom\n *                            DOM to update\n */\n\n\nGradientManager.prototype.updateDom = function (gradient, dom) {\n  if (gradient.type === 'linear') {\n    dom.setAttribute('x1', gradient.x);\n    dom.setAttribute('y1', gradient.y);\n    dom.setAttribute('x2', gradient.x2);\n    dom.setAttribute('y2', gradient.y2);\n  } else if (gradient.type === 'radial') {\n    dom.setAttribute('cx', gradient.x);\n    dom.setAttribute('cy', gradient.y);\n    dom.setAttribute('r', gradient.r);\n  } else {\n    zrLog('Illegal gradient type.');\n    return;\n  }\n\n  if (gradient.global) {\n    // x1, x2, y1, y2 in range of 0 to canvas width or height\n    dom.setAttribute('gradientUnits', 'userSpaceOnUse');\n  } else {\n    // x1, x2, y1, y2 in range of 0 to 1\n    dom.setAttribute('gradientUnits', 'objectBoundingBox');\n  } // Remove color stops if exists\n\n\n  dom.innerHTML = ''; // Add color stops\n\n  var colors = gradient.colorStops;\n\n  for (var i = 0, len = colors.length; i < len; ++i) {\n    var stop = this.createElement('stop');\n    stop.setAttribute('offset', colors[i].offset * 100 + '%');\n    stop.setAttribute('stop-color', colors[i].color);\n    dom.appendChild(stop);\n  } // Store dom element in gradient, to avoid creating multiple\n  // dom instances for the same gradient element\n\n\n  gradient._dom = dom;\n};\n/**\n * Mark a single gradient to be used\n *\n * @param {Displayable} displayable displayable element\n */\n\n\nGradientManager.prototype.markUsed = function (displayable) {\n  if (displayable.style) {\n    var gradient = displayable.style.fill;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n\n    gradient = displayable.style.stroke;\n\n    if (gradient && gradient._dom) {\n      Definable.prototype.markUsed.call(this, gradient._dom);\n    }\n  }\n};\n\nvar _default = GradientManager;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/helper/GradientManager.js\n// module id = 219\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('svg', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/svg/svg.js\n// module id = 220\n// module chunks = 0","var PathProxy = require(\"../core/PathProxy\");\n\nvar _vector = require(\"../core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\nvar CMD = PathProxy.CMD;\nvar points = [[], [], []];\nvar mathSqrt = Math.sqrt;\nvar mathAtan2 = Math.atan2;\n\nfunction _default(path, m) {\n  var data = path.data;\n  var cmd;\n  var nPoint;\n  var i;\n  var j;\n  var k;\n  var p;\n  var M = CMD.M;\n  var C = CMD.C;\n  var L = CMD.L;\n  var R = CMD.R;\n  var A = CMD.A;\n  var Q = CMD.Q;\n\n  for (i = 0, j = 0; i < data.length;) {\n    cmd = data[i++];\n    j = i;\n    nPoint = 0;\n\n    switch (cmd) {\n      case M:\n        nPoint = 1;\n        break;\n\n      case L:\n        nPoint = 1;\n        break;\n\n      case C:\n        nPoint = 3;\n        break;\n\n      case Q:\n        nPoint = 2;\n        break;\n\n      case A:\n        var x = m[4];\n        var y = m[5];\n        var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n        var angle = mathAtan2(-m[1] / sy, m[0] / sx); // cx\n\n        data[i] *= sx;\n        data[i++] += x; // cy\n\n        data[i] *= sy;\n        data[i++] += y; // Scale rx and ry\n        // FIXME Assume psi is 0 here\n\n        data[i++] *= sx;\n        data[i++] *= sy; // Start angle\n\n        data[i++] += angle; // end angle\n\n        data[i++] += angle; // FIXME psi\n\n        i += 2;\n        j = i;\n        break;\n\n      case R:\n        // x0, y0\n        p[0] = data[i++];\n        p[1] = data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1]; // x1, y1\n\n        p[0] += data[i++];\n        p[1] += data[i++];\n        v2ApplyTransform(p, p, m);\n        data[j++] = p[0];\n        data[j++] = p[1];\n    }\n\n    for (k = 0; k < nPoint; k++) {\n      var p = points[k];\n      p[0] = data[i++];\n      p[1] = data[i++];\n      v2ApplyTransform(p, p, m); // Write back\n\n      data[j++] = p[0];\n      data[j++] = p[1];\n    }\n  }\n}\n\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 221\n// module chunks = 0","var zrLog = require(\"../core/log\");\n\nvar vmlCore = require(\"./core\");\n\nvar _util = require(\"../core/util\");\n\nvar each = _util.each;\n\n/**\n * VML Painter.\n *\n * @module zrender/vml/Painter\n */\nfunction parseInt10(val) {\n  return parseInt(val, 10);\n}\n/**\n * @alias module:zrender/vml/Painter\n */\n\n\nfunction VMLPainter(root, storage) {\n  vmlCore.initVML();\n  this.root = root;\n  this.storage = storage;\n  var vmlViewport = document.createElement('div');\n  var vmlRoot = document.createElement('div');\n  vmlViewport.style.cssText = 'display:inline-block;overflow:hidden;position:relative;width:300px;height:150px;';\n  vmlRoot.style.cssText = 'position:absolute;left:0;top:0;';\n  root.appendChild(vmlViewport);\n  this._vmlRoot = vmlRoot;\n  this._vmlViewport = vmlViewport;\n  this.resize(); // Modify storage\n\n  var oldDelFromStorage = storage.delFromStorage;\n  var oldAddToStorage = storage.addToStorage;\n\n  storage.delFromStorage = function (el) {\n    oldDelFromStorage.call(storage, el);\n\n    if (el) {\n      el.onRemove && el.onRemove(vmlRoot);\n    }\n  };\n\n  storage.addToStorage = function (el) {\n    // Displayable already has a vml node\n    el.onAdd && el.onAdd(vmlRoot);\n    oldAddToStorage.call(storage, el);\n  };\n\n  this._firstPaint = true;\n}\n\nVMLPainter.prototype = {\n  constructor: VMLPainter,\n  getType: function () {\n    return 'vml';\n  },\n\n  /**\n   * @return {HTMLDivElement}\n   */\n  getViewportRoot: function () {\n    return this._vmlViewport;\n  },\n  getViewportRootOffset: function () {\n    var viewportRoot = this.getViewportRoot();\n\n    if (viewportRoot) {\n      return {\n        offsetLeft: viewportRoot.offsetLeft || 0,\n        offsetTop: viewportRoot.offsetTop || 0\n      };\n    }\n  },\n\n  /**\n   * 刷新\n   */\n  refresh: function () {\n    var list = this.storage.getDisplayList(true, true);\n\n    this._paintList(list);\n  },\n  _paintList: function (list) {\n    var vmlRoot = this._vmlRoot;\n\n    for (var i = 0; i < list.length; i++) {\n      var el = list[i];\n\n      if (el.invisible || el.ignore) {\n        if (!el.__alreadyNotVisible) {\n          el.onRemove(vmlRoot);\n        } // Set as already invisible\n\n\n        el.__alreadyNotVisible = true;\n      } else {\n        if (el.__alreadyNotVisible) {\n          el.onAdd(vmlRoot);\n        }\n\n        el.__alreadyNotVisible = false;\n\n        if (el.__dirty) {\n          el.beforeBrush && el.beforeBrush();\n          (el.brushVML || el.brush).call(el, vmlRoot);\n          el.afterBrush && el.afterBrush();\n        }\n      }\n\n      el.__dirty = false;\n    }\n\n    if (this._firstPaint) {\n      // Detached from document at first time\n      // to avoid page refreshing too many times\n      // FIXME 如果每次都先 removeChild 可能会导致一些填充和描边的效果改变\n      this._vmlViewport.appendChild(vmlRoot);\n\n      this._firstPaint = false;\n    }\n  },\n  resize: function (width, height) {\n    var width = width == null ? this._getWidth() : width;\n    var height = height == null ? this._getHeight() : height;\n\n    if (this._width != width || this._height != height) {\n      this._width = width;\n      this._height = height;\n      var vmlViewportStyle = this._vmlViewport.style;\n      vmlViewportStyle.width = width + 'px';\n      vmlViewportStyle.height = height + 'px';\n    }\n  },\n  dispose: function () {\n    this.root.innerHTML = '';\n    this._vmlRoot = this._vmlViewport = this.storage = null;\n  },\n  getWidth: function () {\n    return this._width;\n  },\n  getHeight: function () {\n    return this._height;\n  },\n  clear: function () {\n    if (this._vmlViewport) {\n      this.root.removeChild(this._vmlViewport);\n    }\n  },\n  _getWidth: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientWidth || parseInt10(stl.width)) - parseInt10(stl.paddingLeft) - parseInt10(stl.paddingRight) | 0;\n  },\n  _getHeight: function () {\n    var root = this.root;\n    var stl = root.currentStyle;\n    return (root.clientHeight || parseInt10(stl.height)) - parseInt10(stl.paddingTop) - parseInt10(stl.paddingBottom) | 0;\n  }\n}; // Not supported methods\n\nfunction createMethodNotSupport(method) {\n  return function () {\n    zrLog('In IE8.0 VML mode painter not support method \"' + method + '\"');\n  };\n} // Unsupported methods\n\n\neach(['getLayer', 'insertLayer', 'eachLayer', 'eachBuiltinLayer', 'eachOtherLayer', 'getLayers', 'modLayer', 'delLayer', 'clearLayer', 'toDataURL', 'pathToImage'], function (name) {\n  VMLPainter.prototype[name] = createMethodNotSupport(name);\n});\nvar _default = VMLPainter;\nmodule.exports = _default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/Painter.js\n// module id = 222\n// module chunks = 0","var env = require(\"../core/env\");\n\nvar _vector = require(\"../core/vector\");\n\nvar applyTransform = _vector.applyTransform;\n\nvar BoundingRect = require(\"../core/BoundingRect\");\n\nvar colorTool = require(\"../tool/color\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"../graphic/helper/text\");\n\nvar RectText = require(\"../graphic/mixin/RectText\");\n\nvar Displayable = require(\"../graphic/Displayable\");\n\nvar ZImage = require(\"../graphic/Image\");\n\nvar Text = require(\"../graphic/Text\");\n\nvar Path = require(\"../graphic/Path\");\n\nvar PathProxy = require(\"../core/PathProxy\");\n\nvar Gradient = require(\"../graphic/Gradient\");\n\nvar vmlCore = require(\"./core\");\n\n// http://www.w3.org/TR/NOTE-VML\n// TODO Use proxy like svg instead of overwrite brush methods\nvar CMD = PathProxy.CMD;\nvar round = Math.round;\nvar sqrt = Math.sqrt;\nvar abs = Math.abs;\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar mathMax = Math.max;\n\nif (!env.canvasSupported) {\n  var comma = ',';\n  var imageTransformPrefix = 'progid:DXImageTransform.Microsoft';\n  var Z = 21600;\n  var Z2 = Z / 2;\n  var ZLEVEL_BASE = 100000;\n  var Z_BASE = 1000;\n\n  var initRootElStyle = function (el) {\n    el.style.cssText = 'position:absolute;left:0;top:0;width:1px;height:1px;';\n    el.coordsize = Z + ',' + Z;\n    el.coordorigin = '0,0';\n  };\n\n  var encodeHtmlAttribute = function (s) {\n    return String(s).replace(/&/g, '&amp;').replace(/\"/g, '&quot;');\n  };\n\n  var rgb2Str = function (r, g, b) {\n    return 'rgb(' + [r, g, b].join(',') + ')';\n  };\n\n  var append = function (parent, child) {\n    if (child && parent && child.parentNode !== parent) {\n      parent.appendChild(child);\n    }\n  };\n\n  var remove = function (parent, child) {\n    if (child && parent && child.parentNode === parent) {\n      parent.removeChild(child);\n    }\n  };\n\n  var getZIndex = function (zlevel, z, z2) {\n    // z 的取值范围为 [0, 1000]\n    return (parseFloat(zlevel) || 0) * ZLEVEL_BASE + (parseFloat(z) || 0) * Z_BASE + z2;\n  };\n\n  var parsePercent = function (value, maxValue) {\n    if (typeof value === 'string') {\n      if (value.lastIndexOf('%') >= 0) {\n        return parseFloat(value) / 100 * maxValue;\n      }\n\n      return parseFloat(value);\n    }\n\n    return value;\n  };\n  /***************************************************\n   * PATH\n   **************************************************/\n\n\n  var setColorAndOpacity = function (el, color, opacity) {\n    var colorArr = colorTool.parse(color);\n    opacity = +opacity;\n\n    if (isNaN(opacity)) {\n      opacity = 1;\n    }\n\n    if (colorArr) {\n      el.color = rgb2Str(colorArr[0], colorArr[1], colorArr[2]);\n      el.opacity = opacity * colorArr[3];\n    }\n  };\n\n  var getColorAndAlpha = function (color) {\n    var colorArr = colorTool.parse(color);\n    return [rgb2Str(colorArr[0], colorArr[1], colorArr[2]), colorArr[3]];\n  };\n\n  var updateFillNode = function (el, style, zrEl) {\n    // TODO pattern\n    var fill = style.fill;\n\n    if (fill != null) {\n      // Modified from excanvas\n      if (fill instanceof Gradient) {\n        var gradientType;\n        var angle = 0;\n        var focus = [0, 0]; // additional offset\n\n        var shift = 0; // scale factor for offset\n\n        var expansion = 1;\n        var rect = zrEl.getBoundingRect();\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n\n        if (fill.type === 'linear') {\n          gradientType = 'gradient';\n          var transform = zrEl.transform;\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var p1 = [fill.x2 * rectWidth, fill.y2 * rectHeight];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n            applyTransform(p1, p1, transform);\n          }\n\n          var dx = p1[0] - p0[0];\n          var dy = p1[1] - p0[1];\n          angle = Math.atan2(dx, dy) * 180 / Math.PI; // The angle should be a non-negative number.\n\n          if (angle < 0) {\n            angle += 360;\n          } // Very small angles produce an unexpected result because they are\n          // converted to a scientific notation string.\n\n\n          if (angle < 1e-6) {\n            angle = 0;\n          }\n        } else {\n          gradientType = 'gradientradial';\n          var p0 = [fill.x * rectWidth, fill.y * rectHeight];\n          var transform = zrEl.transform;\n          var scale = zrEl.scale;\n          var width = rectWidth;\n          var height = rectHeight;\n          focus = [// Percent in bounding rect\n          (p0[0] - rect.x) / width, (p0[1] - rect.y) / height];\n\n          if (transform) {\n            applyTransform(p0, p0, transform);\n          }\n\n          width /= scale[0] * Z;\n          height /= scale[1] * Z;\n          var dimension = mathMax(width, height);\n          shift = 2 * 0 / dimension;\n          expansion = 2 * fill.r / dimension - shift;\n        } // We need to sort the color stops in ascending order by offset,\n        // otherwise IE won't interpret it correctly.\n\n\n        var stops = fill.colorStops.slice();\n        stops.sort(function (cs1, cs2) {\n          return cs1.offset - cs2.offset;\n        });\n        var length = stops.length; // Color and alpha list of first and last stop\n\n        var colorAndAlphaList = [];\n        var colors = [];\n\n        for (var i = 0; i < length; i++) {\n          var stop = stops[i];\n          var colorAndAlpha = getColorAndAlpha(stop.color);\n          colors.push(stop.offset * expansion + shift + ' ' + colorAndAlpha[0]);\n\n          if (i === 0 || i === length - 1) {\n            colorAndAlphaList.push(colorAndAlpha);\n          }\n        }\n\n        if (length >= 2) {\n          var color1 = colorAndAlphaList[0][0];\n          var color2 = colorAndAlphaList[1][0];\n          var opacity1 = colorAndAlphaList[0][1] * style.opacity;\n          var opacity2 = colorAndAlphaList[1][1] * style.opacity;\n          el.type = gradientType;\n          el.method = 'none';\n          el.focus = '100%';\n          el.angle = angle;\n          el.color = color1;\n          el.color2 = color2;\n          el.colors = colors.join(','); // When colors attribute is used, the meanings of opacity and o:opacity2\n          // are reversed.\n\n          el.opacity = opacity2; // FIXME g_o_:opacity ?\n\n          el.opacity2 = opacity1;\n        }\n\n        if (gradientType === 'radial') {\n          el.focusposition = focus.join(',');\n        }\n      } else {\n        // FIXME Change from Gradient fill to color fill\n        setColorAndOpacity(el, fill, style.opacity);\n      }\n    }\n  };\n\n  var updateStrokeNode = function (el, style) {\n    // if (style.lineJoin != null) {\n    //     el.joinstyle = style.lineJoin;\n    // }\n    // if (style.miterLimit != null) {\n    //     el.miterlimit = style.miterLimit * Z;\n    // }\n    // if (style.lineCap != null) {\n    //     el.endcap = style.lineCap;\n    // }\n    if (style.lineDash != null) {\n      el.dashstyle = style.lineDash.join(' ');\n    }\n\n    if (style.stroke != null && !(style.stroke instanceof Gradient)) {\n      setColorAndOpacity(el, style.stroke, style.opacity);\n    }\n  };\n\n  var updateFillAndStroke = function (vmlEl, type, style, zrEl) {\n    var isFill = type == 'fill';\n    var el = vmlEl.getElementsByTagName(type)[0]; // Stroke must have lineWidth\n\n    if (style[type] != null && style[type] !== 'none' && (isFill || !isFill && style.lineWidth)) {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'true'; // FIXME Remove before updating, or set `colors` will throw error\n\n      if (style[type] instanceof Gradient) {\n        remove(vmlEl, el);\n      }\n\n      if (!el) {\n        el = vmlCore.createNode(type);\n      }\n\n      isFill ? updateFillNode(el, style, zrEl) : updateStrokeNode(el, style);\n      append(vmlEl, el);\n    } else {\n      vmlEl[isFill ? 'filled' : 'stroked'] = 'false';\n      remove(vmlEl, el);\n    }\n  };\n\n  var points = [[], [], []];\n\n  var pathDataToString = function (path, m) {\n    var M = CMD.M;\n    var C = CMD.C;\n    var L = CMD.L;\n    var A = CMD.A;\n    var Q = CMD.Q;\n    var str = [];\n    var nPoint;\n    var cmdStr;\n    var cmd;\n    var i;\n    var xi;\n    var yi;\n    var data = path.data;\n    var dataLength = path.len();\n\n    for (i = 0; i < dataLength;) {\n      cmd = data[i++];\n      cmdStr = '';\n      nPoint = 0;\n\n      switch (cmd) {\n        case M:\n          cmdStr = ' m ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case L:\n          cmdStr = ' l ';\n          nPoint = 1;\n          xi = data[i++];\n          yi = data[i++];\n          points[0][0] = xi;\n          points[0][1] = yi;\n          break;\n\n        case Q:\n        case C:\n          cmdStr = ' c ';\n          nPoint = 3;\n          var x1 = data[i++];\n          var y1 = data[i++];\n          var x2 = data[i++];\n          var y2 = data[i++];\n          var x3;\n          var y3;\n\n          if (cmd === Q) {\n            // Convert quadratic to cubic using degree elevation\n            x3 = x2;\n            y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (xi + 2 * x1) / 3;\n            y1 = (yi + 2 * y1) / 3;\n          } else {\n            x3 = data[i++];\n            y3 = data[i++];\n          }\n\n          points[0][0] = x1;\n          points[0][1] = y1;\n          points[1][0] = x2;\n          points[1][1] = y2;\n          points[2][0] = x3;\n          points[2][1] = y3;\n          xi = x3;\n          yi = y3;\n          break;\n\n        case A:\n          var x = 0;\n          var y = 0;\n          var sx = 1;\n          var sy = 1;\n          var angle = 0;\n\n          if (m) {\n            // Extract SRT from matrix\n            x = m[4];\n            y = m[5];\n            sx = sqrt(m[0] * m[0] + m[1] * m[1]);\n            sy = sqrt(m[2] * m[2] + m[3] * m[3]);\n            angle = Math.atan2(-m[1] / sy, m[0] / sx);\n          }\n\n          var cx = data[i++];\n          var cy = data[i++];\n          var rx = data[i++];\n          var ry = data[i++];\n          var startAngle = data[i++] + angle;\n          var endAngle = data[i++] + startAngle + angle; // FIXME\n          // var psi = data[i++];\n\n          i++;\n          var clockwise = data[i++];\n          var x0 = cx + cos(startAngle) * rx;\n          var y0 = cy + sin(startAngle) * ry;\n          var x1 = cx + cos(endAngle) * rx;\n          var y1 = cy + sin(endAngle) * ry;\n          var type = clockwise ? ' wa ' : ' at ';\n\n          if (Math.abs(x0 - x1) < 1e-4) {\n            // IE won't render arches drawn counter clockwise if x0 == x1.\n            if (Math.abs(endAngle - startAngle) > 1e-2) {\n              // Offset x0 by 1/80 of a pixel. Use something\n              // that can be represented in binary\n              if (clockwise) {\n                x0 += 270 / Z;\n              }\n            } else {\n              // Avoid case draw full circle\n              if (Math.abs(y0 - cy) < 1e-4) {\n                if (clockwise && x0 < cx || !clockwise && x0 > cx) {\n                  y1 -= 270 / Z;\n                } else {\n                  y1 += 270 / Z;\n                }\n              } else if (clockwise && y0 < cy || !clockwise && y0 > cy) {\n                x1 += 270 / Z;\n              } else {\n                x1 -= 270 / Z;\n              }\n            }\n          }\n\n          str.push(type, round(((cx - rx) * sx + x) * Z - Z2), comma, round(((cy - ry) * sy + y) * Z - Z2), comma, round(((cx + rx) * sx + x) * Z - Z2), comma, round(((cy + ry) * sy + y) * Z - Z2), comma, round((x0 * sx + x) * Z - Z2), comma, round((y0 * sy + y) * Z - Z2), comma, round((x1 * sx + x) * Z - Z2), comma, round((y1 * sy + y) * Z - Z2));\n          xi = x1;\n          yi = y1;\n          break;\n\n        case CMD.R:\n          var p0 = points[0];\n          var p1 = points[1]; // x0, y0\n\n          p0[0] = data[i++];\n          p0[1] = data[i++]; // x1, y1\n\n          p1[0] = p0[0] + data[i++];\n          p1[1] = p0[1] + data[i++];\n\n          if (m) {\n            applyTransform(p0, p0, m);\n            applyTransform(p1, p1, m);\n          }\n\n          p0[0] = round(p0[0] * Z - Z2);\n          p1[0] = round(p1[0] * Z - Z2);\n          p0[1] = round(p0[1] * Z - Z2);\n          p1[1] = round(p1[1] * Z - Z2);\n          str.push( // x0, y0\n          ' m ', p0[0], comma, p0[1], // x1, y0\n          ' l ', p1[0], comma, p0[1], // x1, y1\n          ' l ', p1[0], comma, p1[1], // x0, y1\n          ' l ', p0[0], comma, p1[1]);\n          break;\n\n        case CMD.Z:\n          // FIXME Update xi, yi\n          str.push(' x ');\n      }\n\n      if (nPoint > 0) {\n        str.push(cmdStr);\n\n        for (var k = 0; k < nPoint; k++) {\n          var p = points[k];\n          m && applyTransform(p, p, m); // 不 round 会非常慢\n\n          str.push(round(p[0] * Z - Z2), comma, round(p[1] * Z - Z2), k < nPoint - 1 ? comma : '');\n        }\n      }\n    }\n\n    return str.join('');\n  }; // Rewrite the original path method\n\n\n  Path.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      vmlEl = vmlCore.createNode('shape');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    updateFillAndStroke(vmlEl, 'fill', style, this);\n    updateFillAndStroke(vmlEl, 'stroke', style, this);\n    var m = this.transform;\n    var needTransform = m != null;\n    var strokeEl = vmlEl.getElementsByTagName('stroke')[0];\n\n    if (strokeEl) {\n      var lineWidth = style.lineWidth; // Get the line scale.\n      // Determinant of this.m_ means how much the area is enlarged by the\n      // transformation. So its square root can be used as a scale factor\n      // for width.\n\n      if (needTransform && !style.strokeNoScale) {\n        var det = m[0] * m[3] - m[1] * m[2];\n        lineWidth *= sqrt(abs(det));\n      }\n\n      strokeEl.weight = lineWidth + 'px';\n    }\n\n    var path = this.path || (this.path = new PathProxy());\n\n    if (this.__dirtyPath) {\n      path.beginPath();\n      this.buildPath(path, this.shape);\n      path.toStatic();\n      this.__dirtyPath = false;\n    }\n\n    vmlEl.path = pathDataToString(path, this.transform);\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Path.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this.removeRectText(vmlRoot);\n  };\n\n  Path.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * IMAGE\n   **************************************************/\n\n\n  var isImage = function (img) {\n    // FIXME img instanceof Image 如果 img 是一个字符串的时候，IE8 下会报错\n    return typeof img === 'object' && img.tagName && img.tagName.toUpperCase() === 'IMG'; // return img instanceof Image;\n  }; // Rewrite the original path method\n\n\n  ZImage.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n    var image = style.image; // Image original width, height\n\n    var ow;\n    var oh;\n\n    if (isImage(image)) {\n      var src = image.src;\n\n      if (src === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      } else {\n        var imageRuntimeStyle = image.runtimeStyle;\n        var oldRuntimeWidth = imageRuntimeStyle.width;\n        var oldRuntimeHeight = imageRuntimeStyle.height;\n        imageRuntimeStyle.width = 'auto';\n        imageRuntimeStyle.height = 'auto'; // get the original size\n\n        ow = image.width;\n        oh = image.height; // and remove overides\n\n        imageRuntimeStyle.width = oldRuntimeWidth;\n        imageRuntimeStyle.height = oldRuntimeHeight; // Caching image original width, height and src\n\n        this._imageSrc = src;\n        this._imageWidth = ow;\n        this._imageHeight = oh;\n      }\n\n      image = src;\n    } else {\n      if (image === this._imageSrc) {\n        ow = this._imageWidth;\n        oh = this._imageHeight;\n      }\n    }\n\n    if (!image) {\n      return;\n    }\n\n    var x = style.x || 0;\n    var y = style.y || 0;\n    var dw = style.width;\n    var dh = style.height;\n    var sw = style.sWidth;\n    var sh = style.sHeight;\n    var sx = style.sx || 0;\n    var sy = style.sy || 0;\n    var hasCrop = sw && sh;\n    var vmlEl = this._vmlEl;\n\n    if (!vmlEl) {\n      // FIXME 使用 group 在 left, top 都不是 0 的时候就无法显示了。\n      // vmlEl = vmlCore.createNode('group');\n      vmlEl = vmlCore.doc.createElement('div');\n      initRootElStyle(vmlEl);\n      this._vmlEl = vmlEl;\n    }\n\n    var vmlElStyle = vmlEl.style;\n    var hasRotation = false;\n    var m;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    if (this.transform) {\n      m = this.transform;\n      scaleX = sqrt(m[0] * m[0] + m[1] * m[1]);\n      scaleY = sqrt(m[2] * m[2] + m[3] * m[3]);\n      hasRotation = m[1] || m[2];\n    }\n\n    if (hasRotation) {\n      // If filters are necessary (rotation exists), create them\n      // filters are bog-slow, so only create them if abbsolutely necessary\n      // The following check doesn't account for skews (which don't exist\n      // in the canvas spec (yet) anyway.\n      // From excanvas\n      var p0 = [x, y];\n      var p1 = [x + dw, y];\n      var p2 = [x, y + dh];\n      var p3 = [x + dw, y + dh];\n      applyTransform(p0, p0, m);\n      applyTransform(p1, p1, m);\n      applyTransform(p2, p2, m);\n      applyTransform(p3, p3, m);\n      var maxX = mathMax(p0[0], p1[0], p2[0], p3[0]);\n      var maxY = mathMax(p0[1], p1[1], p2[1], p3[1]);\n      var transformFilter = [];\n      transformFilter.push('M11=', m[0] / scaleX, comma, 'M12=', m[2] / scaleY, comma, 'M21=', m[1] / scaleX, comma, 'M22=', m[3] / scaleY, comma, 'Dx=', round(x * scaleX + m[4]), comma, 'Dy=', round(y * scaleY + m[5]));\n      vmlElStyle.padding = '0 ' + round(maxX) + 'px ' + round(maxY) + 'px 0'; // FIXME DXImageTransform 在 IE11 的兼容模式下不起作用\n\n      vmlElStyle.filter = imageTransformPrefix + '.Matrix(' + transformFilter.join('') + ', SizingMethod=clip)';\n    } else {\n      if (m) {\n        x = x * scaleX + m[4];\n        y = y * scaleY + m[5];\n      }\n\n      vmlElStyle.filter = '';\n      vmlElStyle.left = round(x) + 'px';\n      vmlElStyle.top = round(y) + 'px';\n    }\n\n    var imageEl = this._imageEl;\n    var cropEl = this._cropEl;\n\n    if (!imageEl) {\n      imageEl = vmlCore.doc.createElement('div');\n      this._imageEl = imageEl;\n    }\n\n    var imageELStyle = imageEl.style;\n\n    if (hasCrop) {\n      // Needs know image original width and height\n      if (!(ow && oh)) {\n        var tmpImage = new Image();\n        var self = this;\n\n        tmpImage.onload = function () {\n          tmpImage.onload = null;\n          ow = tmpImage.width;\n          oh = tmpImage.height; // Adjust image width and height to fit the ratio destinationSize / sourceSize\n\n          imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n          imageELStyle.height = round(scaleY * oh * dh / sh) + 'px'; // Caching image original width, height and src\n\n          self._imageWidth = ow;\n          self._imageHeight = oh;\n          self._imageSrc = image;\n        };\n\n        tmpImage.src = image;\n      } else {\n        imageELStyle.width = round(scaleX * ow * dw / sw) + 'px';\n        imageELStyle.height = round(scaleY * oh * dh / sh) + 'px';\n      }\n\n      if (!cropEl) {\n        cropEl = vmlCore.doc.createElement('div');\n        cropEl.style.overflow = 'hidden';\n        this._cropEl = cropEl;\n      }\n\n      var cropElStyle = cropEl.style;\n      cropElStyle.width = round((dw + sx * dw / sw) * scaleX);\n      cropElStyle.height = round((dh + sy * dh / sh) * scaleY);\n      cropElStyle.filter = imageTransformPrefix + '.Matrix(Dx=' + -sx * dw / sw * scaleX + ',Dy=' + -sy * dh / sh * scaleY + ')';\n\n      if (!cropEl.parentNode) {\n        vmlEl.appendChild(cropEl);\n      }\n\n      if (imageEl.parentNode != cropEl) {\n        cropEl.appendChild(imageEl);\n      }\n    } else {\n      imageELStyle.width = round(scaleX * dw) + 'px';\n      imageELStyle.height = round(scaleY * dh) + 'px';\n      vmlEl.appendChild(imageEl);\n\n      if (cropEl && cropEl.parentNode) {\n        vmlEl.removeChild(cropEl);\n        this._cropEl = null;\n      }\n    }\n\n    var filterStr = '';\n    var alpha = style.opacity;\n\n    if (alpha < 1) {\n      filterStr += '.Alpha(opacity=' + round(alpha * 100) + ') ';\n    }\n\n    filterStr += imageTransformPrefix + '.AlphaImageLoader(src=' + image + ', SizingMethod=scale)';\n    imageELStyle.filter = filterStr;\n    vmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Append to root\n\n    append(vmlRoot, vmlEl); // Text\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, this.getBoundingRect());\n    }\n  };\n\n  ZImage.prototype.onRemove = function (vmlRoot) {\n    remove(vmlRoot, this._vmlEl);\n    this._vmlEl = null;\n    this._cropEl = null;\n    this._imageEl = null;\n    this.removeRectText(vmlRoot);\n  };\n\n  ZImage.prototype.onAdd = function (vmlRoot) {\n    append(vmlRoot, this._vmlEl);\n    this.appendRectText(vmlRoot);\n  };\n  /***************************************************\n   * TEXT\n   **************************************************/\n\n\n  var DEFAULT_STYLE_NORMAL = 'normal';\n  var fontStyleCache = {};\n  var fontStyleCacheCount = 0;\n  var MAX_FONT_CACHE_SIZE = 100;\n  var fontEl = document.createElement('div');\n\n  var getFontStyle = function (fontString) {\n    var fontStyle = fontStyleCache[fontString];\n\n    if (!fontStyle) {\n      // Clear cache\n      if (fontStyleCacheCount > MAX_FONT_CACHE_SIZE) {\n        fontStyleCacheCount = 0;\n        fontStyleCache = {};\n      }\n\n      var style = fontEl.style;\n      var fontFamily;\n\n      try {\n        style.font = fontString;\n        fontFamily = style.fontFamily.split(',')[0];\n      } catch (e) {}\n\n      fontStyle = {\n        style: style.fontStyle || DEFAULT_STYLE_NORMAL,\n        variant: style.fontVariant || DEFAULT_STYLE_NORMAL,\n        weight: style.fontWeight || DEFAULT_STYLE_NORMAL,\n        size: parseFloat(style.fontSize || 12) | 0,\n        family: fontFamily || 'Microsoft YaHei'\n      };\n      fontStyleCache[fontString] = fontStyle;\n      fontStyleCacheCount++;\n    }\n\n    return fontStyle;\n  };\n\n  var textMeasureEl; // Overwrite measure text method\n\n  textContain.$override('measureText', function (text, textFont) {\n    var doc = vmlCore.doc;\n\n    if (!textMeasureEl) {\n      textMeasureEl = doc.createElement('div');\n      textMeasureEl.style.cssText = 'position:absolute;top:-20000px;left:0;' + 'padding:0;margin:0;border:none;white-space:pre;';\n      vmlCore.doc.body.appendChild(textMeasureEl);\n    }\n\n    try {\n      textMeasureEl.style.font = textFont;\n    } catch (ex) {// Ignore failures to set to invalid font.\n    }\n\n    textMeasureEl.innerHTML = ''; // Don't use innerHTML or innerText because they allow markup/whitespace.\n\n    textMeasureEl.appendChild(doc.createTextNode(text));\n    return {\n      width: textMeasureEl.offsetWidth\n    };\n  });\n  var tmpRect = new BoundingRect();\n\n  var drawRectText = function (vmlRoot, rect, textRect, fromTextEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!text) {\n      return;\n    } // Convert rich text to plain text. Rich text is not supported in\n    // IE8-, but tags in rich text template will be removed.\n\n\n    if (style.rich) {\n      var contentBlock = textContain.parseRichText(text, style);\n      text = [];\n\n      for (var i = 0; i < contentBlock.lines.length; i++) {\n        var tokens = contentBlock.lines[i].tokens;\n        var textLine = [];\n\n        for (var j = 0; j < tokens.length; j++) {\n          textLine.push(tokens[j].text);\n        }\n\n        text.push(textLine.join(''));\n      }\n\n      text = text.join('\\n');\n    }\n\n    var x;\n    var y;\n    var align = style.textAlign;\n    var verticalAlign = style.textVerticalAlign;\n    var fontStyle = getFontStyle(style.font); // FIXME encodeHtmlAttribute ?\n\n    var font = fontStyle.style + ' ' + fontStyle.variant + ' ' + fontStyle.weight + ' ' + fontStyle.size + 'px \"' + fontStyle.family + '\"';\n    textRect = textRect || textContain.getBoundingRect(text, font, align, verticalAlign); // Transform rect to view space\n\n    var m = this.transform; // Ignore transform for text in other element\n\n    if (m && !fromTextEl) {\n      tmpRect.copy(rect);\n      tmpRect.applyTransform(m);\n      rect = tmpRect;\n    }\n\n    if (!fromTextEl) {\n      var textPosition = style.textPosition;\n      var distance = style.textDistance; // Text position represented by coord\n\n      if (textPosition instanceof Array) {\n        x = rect.x + parsePercent(textPosition[0], rect.width);\n        y = rect.y + parsePercent(textPosition[1], rect.height);\n        align = align || 'left';\n      } else {\n        var res = textContain.adjustTextPositionOnRect(textPosition, rect, distance);\n        x = res.x;\n        y = res.y; // Default align and baseline when has textPosition\n\n        align = align || res.textAlign;\n        verticalAlign = verticalAlign || res.textVerticalAlign;\n      }\n    } else {\n      x = rect.x;\n      y = rect.y;\n    }\n\n    x = textContain.adjustTextX(x, textRect.width, align);\n    y = textContain.adjustTextY(y, textRect.height, verticalAlign); // Force baseline 'middle'\n\n    y += textRect.height / 2; // var fontSize = fontStyle.size;\n    // 1.75 is an arbitrary number, as there is no info about the text baseline\n    // switch (baseline) {\n    // case 'hanging':\n    // case 'top':\n    //     y += fontSize / 1.75;\n    //     break;\n    //     case 'middle':\n    //         break;\n    //     default:\n    //     // case null:\n    //     // case 'alphabetic':\n    //     // case 'ideographic':\n    //     // case 'bottom':\n    //         y -= fontSize / 2.25;\n    //         break;\n    // }\n    // switch (align) {\n    //     case 'left':\n    //         break;\n    //     case 'center':\n    //         x -= textRect.width / 2;\n    //         break;\n    //     case 'right':\n    //         x -= textRect.width;\n    //         break;\n    // case 'end':\n    // align = elementStyle.direction == 'ltr' ? 'right' : 'left';\n    // break;\n    // case 'start':\n    // align = elementStyle.direction == 'rtl' ? 'right' : 'left';\n    // break;\n    // default:\n    //     align = 'left';\n    // }\n\n    var createNode = vmlCore.createNode;\n    var textVmlEl = this._textVmlEl;\n    var pathEl;\n    var textPathEl;\n    var skewEl;\n\n    if (!textVmlEl) {\n      textVmlEl = createNode('line');\n      pathEl = createNode('path');\n      textPathEl = createNode('textpath');\n      skewEl = createNode('skew'); // FIXME Why here is not cammel case\n      // Align 'center' seems wrong\n\n      textPathEl.style['v-text-align'] = 'left';\n      initRootElStyle(textVmlEl);\n      pathEl.textpathok = true;\n      textPathEl.on = true;\n      textVmlEl.from = '0 0';\n      textVmlEl.to = '1000 0.05';\n      append(textVmlEl, skewEl);\n      append(textVmlEl, pathEl);\n      append(textVmlEl, textPathEl);\n      this._textVmlEl = textVmlEl;\n    } else {\n      // 这里是在前面 appendChild 保证顺序的前提下\n      skewEl = textVmlEl.firstChild;\n      pathEl = skewEl.nextSibling;\n      textPathEl = pathEl.nextSibling;\n    }\n\n    var coords = [x, y];\n    var textVmlElStyle = textVmlEl.style; // Ignore transform for text in other element\n\n    if (m && fromTextEl) {\n      applyTransform(coords, coords, m);\n      skewEl.on = true;\n      skewEl.matrix = m[0].toFixed(3) + comma + m[2].toFixed(3) + comma + m[1].toFixed(3) + comma + m[3].toFixed(3) + ',0,0'; // Text position\n\n      skewEl.offset = (round(coords[0]) || 0) + ',' + (round(coords[1]) || 0); // Left top point as origin\n\n      skewEl.origin = '0 0';\n      textVmlElStyle.left = '0px';\n      textVmlElStyle.top = '0px';\n    } else {\n      skewEl.on = false;\n      textVmlElStyle.left = round(x) + 'px';\n      textVmlElStyle.top = round(y) + 'px';\n    }\n\n    textPathEl.string = encodeHtmlAttribute(text); // TODO\n\n    try {\n      textPathEl.style.font = font;\n    } // Error font format\n    catch (e) {}\n\n    updateFillAndStroke(textVmlEl, 'fill', {\n      fill: style.textFill,\n      opacity: style.opacity\n    }, this);\n    updateFillAndStroke(textVmlEl, 'stroke', {\n      stroke: style.textStroke,\n      opacity: style.opacity,\n      lineDash: style.lineDash\n    }, this);\n    textVmlEl.style.zIndex = getZIndex(this.zlevel, this.z, this.z2); // Attached to root\n\n    append(vmlRoot, textVmlEl);\n  };\n\n  var removeRectText = function (vmlRoot) {\n    remove(vmlRoot, this._textVmlEl);\n    this._textVmlEl = null;\n  };\n\n  var appendRectText = function (vmlRoot) {\n    append(vmlRoot, this._textVmlEl);\n  };\n\n  var list = [RectText, Displayable, ZImage, Path, Text]; // In case Displayable has been mixed in RectText\n\n  for (var i = 0; i < list.length; i++) {\n    var proto = list[i].prototype;\n    proto.drawRectText = drawRectText;\n    proto.removeRectText = removeRectText;\n    proto.appendRectText = appendRectText;\n  }\n\n  Text.prototype.brushVML = function (vmlRoot) {\n    var style = this.style;\n\n    if (style.text != null) {\n      this.drawRectText(vmlRoot, {\n        x: style.x || 0,\n        y: style.y || 0,\n        width: 0,\n        height: 0\n      }, this.getBoundingRect(), true);\n    } else {\n      this.removeRectText(vmlRoot);\n    }\n  };\n\n  Text.prototype.onRemove = function (vmlRoot) {\n    this.removeRectText(vmlRoot);\n  };\n\n  Text.prototype.onAdd = function (vmlRoot) {\n    this.appendRectText(vmlRoot);\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/graphic.js\n// module id = 223\n// module chunks = 0","require(\"./graphic\");\n\nvar _zrender = require(\"../zrender\");\n\nvar registerPainter = _zrender.registerPainter;\n\nvar Painter = require(\"./Painter\");\n\nregisterPainter('vml', Painter);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/vml/vml.js\n// module id = 224\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 225\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 226\n// module chunks = 0"],"sourceRoot":""}